"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([[494],{

/***/ 1099:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Ue: () => (/* binding */ rasterFunctionHelper_),\n  G8: () => (/* binding */ rasterFunctionHelper_h)\n});\n\n// UNUSED EXPORTS: getRasterValues, getSupportedFunctions, register\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/colorUtils.js\nvar colorUtils = __webpack_require__(39043);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Error.js\nvar core_Error = __webpack_require__(70375);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/lang.js\nvar lang = __webpack_require__(67134);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/chunks/tslib.es6.js\nvar tslib_es6 = __webpack_require__(36663);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js\nvar property = __webpack_require__(81977);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/ensureType.js\nvar ensureType = __webpack_require__(7283);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/arrayUtils.js\nvar arrayUtils = __webpack_require__(7753);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/has.js\nvar has = __webpack_require__(39994);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js\nvar subclass = __webpack_require__(40266);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Logger.js\nvar Logger = __webpack_require__(13802);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/JSONSupport.js + 1 modules\nvar JSONSupport = __webpack_require__(82064);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/BaseFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet e=class extends JSONSupport/* JSONSupport */.wq{constructor(){super(...arguments),this.raster=void 0}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],e.prototype,\"raster\",void 0),e=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.AspectFunctionArguments\")],e);const p=e;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/AspectFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar AspectFunctionArguments_e;let t=AspectFunctionArguments_e=class extends p{clone(){return new AspectFunctionArguments_e({raster:this.raster})}};t=AspectFunctionArguments_e=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.AspectFunctionArguments\")],t);const c=t;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/cast.js\nvar cast = __webpack_require__(69236);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/PixelBlock.js + 1 modules\nvar PixelBlock = __webpack_require__(16984);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/RasterInfo.js + 2 modules\nvar RasterInfo = __webpack_require__(16130);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/BaseRasterFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst a=new Set([\"slope\",\"aspect\",\"curvature\",\"hillshade\",\"shadedrelief\"]);let u=class extends JSONSupport/* JSONSupport */.wq{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const s=[t],{parameters:e}=t;let r=e.rasters||e.raster&&[e.raster];for(;r?.length;){s.unshift(...r);const t=[];for(let s=0;s<r.length;s++){const{parameters:e}=r[s],n=e.rasters||e.raster&&[e.raster];n?.length&&t.push(...n)}r=t}for(let o=s.length-1;o>=0;o--)s[o].isNoopProcess&&s.splice(o,1);let n=!1;for(let o=0;o<s.length;o++){const t=s[o];t.id=s.length-o-1;const{rasters:e}=t.parameters;n=n||null!=e&&e.length>1}const i=s.some((({name:t})=>a.has(t.toLowerCase())));return{functions:s,hasBranches:n,hasSurfaceFunction:i}}bind(t,s=!1,e=-1){this.id=e+1;const r=this._getRasterValues();let n=!0;for(let i=0;i<r.length;i++){const e=r[i];if(null!=e&&this._isRasterFunctionValue(e)){const r=e.bind(t,s,this.id+i);if(!r.success)return this._bindingResult=r,r;n=n&&r.supportsGPU}}return!this.rasterInfo||s?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=n&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const s=this._getRasterValues(),e=0===s.length?t.pixelBlocks??t.primaryPixelBlocks:s.map((s=>this._readRasterValue(s,t)));return this._processPixels({...t,pixelBlocks:e})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let s;if(t.length>1){const s=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=s,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,s)=>t!==s));const e=t.filter((t=>\"ExtractBand\"===t.functionName));return e.length&&e.forEach(((t,s)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[s,s,s]})),this.rawInputBandIds}const e=t[0];if(e){if(s=e.processInputBandIds(),e.isInputBandIdsSwizzled)return this.rawInputBandIds=s,s}else{s=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let e=0;e<t;e++)s.push(e)}const r=this._getInputBandIds(s);return this.isInputBandIdsSwizzled=r.some(((t,s)=>t!==s)),this.rawInputBandIds=r,this.rawInputBandIds}getPrimaryRasters(){const t=[],s=[];return this._getPrimaryRasters(this,t,s),{rasters:t,rasterIds:s}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:s,rasters:e}=this.functionArguments;return e&&Array.isArray(e)&&e.length?(t.rasters=e.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():\"number\"==typeof t?{name:\"Constant\",parameters:{value:t},pixelType:\"f32\",id:-1,isNoopProcess:!1}:{name:\"Identity\",parameters:{value:t},pixelType:\"f32\",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(s)&&(t.raster=s.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}_getOutputPixelType(t){return\"unknown\"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return(t?.startsWith(\"u\")||t?.startsWith(\"s\"))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return\"rasters\"===t[0]?this.functionArguments.rasters??[]:t.map((t=>this.functionArguments[t])).flat()}_getSourceRasterInfos(t){const s=this._getRasterValues(),{rasterInfos:e,rasterIds:r}=t;if(0===s.length)return e;const n=s.map((t=>t&&\"object\"==typeof t&&\"bind\"in t&&t.rasterInfo?t.rasterInfo:\"string\"==typeof t&&r.includes(t)?e[r.indexOf(t)]:\"number\"!=typeof t?e[0]:void 0)),i=n.find((t=>t))??e[0];return n.forEach(((t,s)=>{void 0===t&&(n[s]=i)})),n}_getPrimaryRasterId(t){return t?.url}_getPrimaryRasters(t,s=[],e=[]){for(let r=0;r<t.sourceRasters.length;r++){const n=t.sourceRasters[r];if(\"number\"!=typeof n)if(\"bind\"in n)this._getPrimaryRasters(n,s,e);else{const t=n,r=this._getPrimaryRasterId(t);if(null==r)continue;e.includes(r)||(this.mainPrimaryRasterId===r?(s.unshift(t),e.unshift(r)):(s.push(t),e.push(r)))}}}_isRasterFunctionValue(t){return null!=t&&\"object\"==typeof t&&\"getWebGLProcessorDefinition\"in t}_readRasterValue(t,s){const{primaryPixelBlocks:e}=s;if(null==t||\"$$\"===t){const t=e[0];return null==t?null:t.clone()}if(\"string\"==typeof t){const r=s.primaryRasterIds.indexOf(t);return-1===r?null:e[r]}if(\"number\"==typeof t){const s=e[0];if(null==s)return null;const{width:r,height:n,pixelType:o,mask:a}=s,u=a?new Uint8Array(a):null,p=new Float32Array(r*n);p.fill(t);const l=this.sourceRasterInfos[0].bandCount,c=new Array(l).fill(p);return new PixelBlock/* default */.Z({width:r,height:n,pixelType:o,pixels:c,mask:u})}return t.process(s)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:s,keyProperties:e,statistics:r,histograms:n}=t,i=e.BandProperties;i&&i.length!==s&&(t.keyProperties={...e,BandProperties:void 0}),r&&r.length!==s&&(t.statistics=r.length>s?r.slice(0,s):null),n&&n.length!==s&&(t.histograms=n.length>s?n.slice(0,s):null),e.BAND_COUNT&&Number(e.BAND_COUNT)!==s&&(t.keyProperties={...e,BAND_COUNT:\"string\"==typeof e.BAND_COUNT?String(s):s})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],u.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],u.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}}),(0,cast/* cast */.p)((t=>t?.toLowerCase()))],u.prototype,\"outputPixelType\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],u.prototype,\"mainPrimaryRasterId\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"sourceRasters\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:[RasterInfo/* default */.Z],json:{write:!0}})],u.prototype,\"sourceRasterInfos\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],u.prototype,\"rasterInfo\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],u.prototype,\"readingBufferSize\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],u.prototype,\"id\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"isNoopProcess\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"supportsGPU\",null),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"rawInputBandIds\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"isInputBandIdsSwizzled\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"swizzledBandSelection\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"isBranch\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"flatWebGLFunctionChain\",null),(0,tslib_es6._)([(0,property/* property */.Cb)()],u.prototype,\"_bindingResult\",void 0),u=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.BaseRasterFunction\")],u);const BaseRasterFunction_p=u;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/surfaceUtils.js\nvar surfaceUtils = __webpack_require__(77618);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/AspectFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet n=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Aspect\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType(\"f32\");const s=t.clone();return s.pixelType=this.outputPixelType,s.statistics=[{min:-1,max:360,avg:180,stddev:30}],s.histograms=null,s.colormap=null,s.attributeTable=null,s.bandCount=1,this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){const s=t.pixelBlocks?.[0];if(null==s)return null;const{extent:e,primaryPixelSizes:r}=t,o=r?.[0],n=o??(e?{x:e.width/s.width,y:e.height/s.height}:{x:1,y:1});return (0,surfaceUtils/* aspect */.M_)(s,{resolution:n})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],n.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:c,json:{write:!0,name:\"rasterFunctionArguments\"}})],n.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],n.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],n.prototype,\"isGCS\",void 0),n=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.AspectFunction\")],n);const AspectFunction_p=n;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/enumeration.js\nvar enumeration = __webpack_require__(79438);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/jsonMap.js\nvar jsonMap = __webpack_require__(25709);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/customBandIndexUtils.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst customBandIndexUtils_e=new Set([\"+\",\"-\",\"*\",\"/\",\"(\",\")\"]);function customBandIndexUtils_t(t,n){(t=t.replaceAll(\" \",\"\")).startsWith(\"-\")&&(t=\"0\"+t),t.startsWith(\"+\")&&(t=t.slice(1,t.length));const r=t.split(\"\"),l=[],o=[];let s=\"\";for(let a=0;a<r.length;a++){const t=r[a];if(customBandIndexUtils_e.has(t))\"\"!==s&&o.push(parseFloat(s)),l.push(t),s=\"\";else{if(\"b\"===t.toLowerCase()){a++,s=t.concat(r[a]),o.push(n[parseInt(s[1],10)-1]),s=\"\";continue}s=s.concat(t),a===r.length-1&&o.push(parseFloat(s))}}return{ops:l,nums:o}}function customBandIndexUtils_n(e,t,n,r){if(\"number\"==typeof n&&\"number\"==typeof r)return n+r;let l,o,s;\"number\"==typeof n?(s=r,l=s.length,o=new Float32Array(l),o.fill(n)):(l=n.length,o=n,r.constructor===Number?(s=new Float32Array(l),s.fill(r)):s=r);const a=new Float32Array(l);switch(t){case\"+\":for(let t=0;t<l;t++)(null==e||e[t])&&(a[t]=o[t]+s[t]);break;case\"-\":for(let t=0;t<l;t++)(null==e||e[t])&&(a[t]=o[t]-s[t]);break;case\"*\":for(let t=0;t<l;t++)(null==e||e[t])&&(a[t]=o[t]*s[t]);break;case\"/\":for(let t=0;t<l;t++)(null==e||e[t])&&s[t]&&(a[t]=o[t]/s[t]);break;case\"(\":case\")\":throw new Error(\"encountered error with custom band index equation\")}return a}function r(e,t){e.splice(t,1);let n=0,r=0;do{n=0,r=0;for(let t=0;t<e.length;t++)if(\"(\"===e[t])n=t;else if(\")\"===e[t]){r=t;break}r===n+1&&e.splice(n,2)}while(r===n+1);return e}function l(e){if(1===e.length)return{opIndex:0,numIndex:0};let t=0,n=0;for(let s=0;s<e.length;s++)if(\"(\"===e[s])t=s;else if(\")\"===e[s]){n=s;break}const r=0===n?e:e.slice(t+1,n);let l=-1;for(let s=0;s<r.length;s++)if(\"*\"===r[s]||\"/\"===r[s]){l=s;break}if(l>-1)n>0&&(l+=t+1);else{for(let e=0;e<r.length;e++)if(\"+\"===r[e]||\"-\"===r[e]){l=e;break}n>0&&(l+=t+1)}let o=0;for(let s=0;s<l;s++)\"(\"===e[s]&&o++;return{opIndex:l,numIndex:l-o}}function customBandIndexUtils_o(e,o,s){let a,{ops:f,nums:i}=customBandIndexUtils_t(s,o);if(0===f.length){const e=1===i.length?i[0]:o[0];if(e instanceof Float32Array)return[e];const t=new Float32Array(o[0].length);return\"number\"==typeof e?t.fill(e):t.set(e),[t]}for(;f.length>0;){const{numIndex:t,opIndex:o}=l(f);if(a=customBandIndexUtils_n(e,f[o],i[t],i[t+1]),1===f.length)break;f=r(f,o),i.splice(t,2,a)}return[a]}\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js\nvar pixelUtils = __webpack_require__(31329);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/bandIndexUtils.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst bandIndexUtils_a=new jsonMap/* JSONMap */.X({0:\"custom\",1:\"ndvi\",2:\"savi\",3:\"tsavi\",4:\"msavi\",5:\"gemi\",6:\"pvi\",7:\"gvitm\",8:\"sultan\",9:\"vari\",10:\"gndvi\",11:\"sr\",12:\"ndvi-re\",13:\"sr-re\",14:\"mtvi2\",15:\"rtvi-core\",16:\"ci-re\",17:\"ci-g\",18:\"ndwi\",19:\"evi\",20:\"iron-oxide\",21:\"ferrous-minerals\",22:\"clay-minerals\",23:\"wndwi\",24:\"bai\",25:\"nbr\",26:\"ndbi\",27:\"ndmi\",28:\"ndsi\",29:\"mndwi\"},{useNumericKeys:!0});function o(n,a){if(!(0,pixelUtils/* isValidPixelBlock */.nk)(n))return n;const{equation:o,method:s}=a,i=a.bandIndexes.map((n=>n-1)),{pixels:x,mask:j}=n;let q;switch(s){case\"gndvi\":case\"nbr\":case\"ndbi\":case\"ndvi\":case\"ndvi-re\":case\"ndsi\":case\"ndmi\":case\"mndwi\":q=bandIndexUtils_l(j,x[i[0]],x[i[1]]);break;case\"ndwi\":q=bandIndexUtils_l(j,x[i[1]],x[i[0]]);break;case\"sr\":case\"sr-re\":case\"iron-oxide\":case\"ferrous-minerals\":case\"clay-minerals\":q=bandIndexUtils_c(j,x[i[0]],x[i[1]]);break;case\"ci-g\":case\"ci-re\":q=bandIndexUtils_u(j,x[i[0]],x[i[1]]);break;case\"savi\":q=f(j,x[i[0]],x[i[1]],i[2]+1);break;case\"tsavi\":q=w(j,x[i[0]],x[i[1]],i[2]+1,i[3]+1,i[4]+1);break;case\"msavi\":q=h(j,x[i[0]],x[i[1]]);break;case\"gemi\":q=m(j,x[i[0]],x[i[1]]);break;case\"pvi\":q=d(j,x[i[0]],x[i[1]],i[2]+1,i[3]+1);break;case\"gvitm\":q=g(j,[x[i[0]],x[i[1]],x[i[2]],x[i[3]],x[i[4]],x[i[5]]]);break;case\"sultan\":q=y(j,[x[i[0]],x[i[1]],x[i[2]],x[i[3]],x[i[4]],x[i[5]]]);break;case\"vari\":q=b(j,[x[i[0]],x[i[1]],x[i[2]]]);break;case\"mtvi2\":q=v(j,[x[i[0]],x[i[1]],x[i[2]]]);break;case\"rtvi-core\":q=k(j,[x[i[0]],x[i[1]],x[i[2]]]);break;case\"evi\":q=A(j,[x[i[0]],x[i[1]],x[i[2]]]);break;case\"wndwi\":q=bandIndexUtils_p(j,[x[i[0]],x[i[1]],x[i[2]]],i[3]?i[3]+1:.5);break;case\"bai\":q=F(j,x[i[0]],x[i[1]]);break;case\"custom\":q=customBandIndexUtils_o(j,x,o);break;default:return n}const M=null!=j?new Uint8Array(j.length):null;null!=j&&null!=M&&M.set(j);const U=new PixelBlock/* default */.Z({width:n.width,height:n.height,pixelType:\"f32\",pixels:q,mask:M});return U.updateStatistics(),U}function bandIndexUtils_s(n,e,r,a){const{mask:o,pixels:s,width:i,height:l}=n,c=s[r],u=s[e],f=u.length,w=a?new Uint8Array(f):new Float32Array(f),h=a?100:1,m=a?100.5:0;for(let t=0;t<f;t++)if(null==o||o[t]){const n=c[t],e=u[t],r=n+e;r&&(w[t]=(n-e)/r*h+m)}const d=new PixelBlock/* default */.Z({width:i,height:l,mask:o,pixelType:a?\"u8\":\"f32\",pixels:[w]});return d.updateStatistics(),d}function i(n){const t=new Float32Array(9);return t[3*n[0]]=1,t[3*n[1]+1]=1,t[3*n[2]+2]=1,t}function bandIndexUtils_l(n,t,e){const r=e.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(null==n||n[o]){const n=t[o],r=e[o],s=n+r;s&&(a[o]=(n-r)/s)}return[a]}function bandIndexUtils_c(n,t,e){const r=e.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(null==n||n[o]){const n=t[o],r=e[o];r&&(a[o]=n/r)}return[a]}function bandIndexUtils_u(n,t,e){const r=t.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(null==n||n[o]){const n=t[o],r=e[o];r&&(a[o]=n/r-1)}return[a]}function f(n,t,e,r){const a=e.length,o=new Float32Array(a);for(let s=0;s<a;s++)if(null==n||n[s]){const n=e[s],a=t[s],i=a+n+r;i&&(o[s]=(a-n)/i*(1+r))}return[o]}function w(n,t,e,r,a,o){const s=e.length,i=new Float32Array(s),l=-a*r+o*(1+r*r);for(let c=0;c<s;c++)if(null==n||n[c]){const n=e[c],o=t[c],s=a*o+n+l;s&&(i[c]=r*(o-r*n-a)/s)}return[i]}function h(n,t,e){const r=e.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(null==n||n[o]){const n=e[o],r=t[o];a[o]=.5*(2*(r+1)-Math.sqrt((2*r+1)**2-8*(r-n)))}return[a]}function m(n,t,e){const r=e.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(null==n||n[o]){const n=e[o],r=t[o];if(1!==n){const t=(2*(r*r-n*n)+1.5*r+.5*n)/(r+n+.5);a[o]=t*(1-.25*t)-(n-.125)/(1-n)}}return[a]}function d(n,t,e,r,a){const o=e.length,s=new Float32Array(o),i=Math.sqrt(1+r*r);for(let l=0;l<o;l++)if(null==n||n[l]){const n=e[l],o=t[l];s[l]=(o-r*n-a)/i}return[s]}function g(n,t){const[e,r,a,o,s,i]=t,l=e.length,c=new Float32Array(l);for(let u=0;u<l;u++)(null==n||n[u])&&(c[u]=-.2848*e[u]-.2435*r[u]-.5436*a[u]+.7243*o[u]+.084*s[u]-1.18*i[u]);return[c]}function y(n,t){const[e,,r,a,o,s]=t,i=e.length,l=new Float32Array(i),c=new Float32Array(i),u=new Float32Array(i);for(let f=0;f<i;f++)(null==n||n[f])&&(l[f]=s[f]?o[f]/s[f]*100:0,c[f]=e[f]?o[f]/e[f]*100:0,u[f]=a[f]?r[f]/a[f]*(o[f]/a[f])*100:0);return[l,c,u]}function b(n,t){const[e,r,a]=t,o=e.length,s=new Float32Array(o);for(let i=0;i<o;i++)if(null==n||n[i])for(i=0;i<o;i++){const n=e[i],t=r[i],o=t+n-a[i];o&&(s[i]=(t-n)/o)}return[s]}function v(n,t){const[e,r,a]=t,o=e.length,s=new Float32Array(o);for(let i=0;i<o;i++)if(null==n||n[i])for(i=0;i<o;i++){const n=e[i],t=r[i],o=a[i],l=Math.sqrt((2*n+1)**2-6*n-5*Math.sqrt(t)-.5);s[i]=1.5*(1.2*(n-o)-2.5*(t-o))*l}return[s]}function k(n,t){const[e,r,a]=t,o=e.length,s=new Float32Array(o);for(let i=0;i<o;i++)if(null==n||n[i])for(i=0;i<o;i++){const n=e[i],t=r[i],o=a[i];s[i]=100*(n-t)-10*(n-o)}return[s]}function A(n,t){const[e,r,a]=t,o=e.length,s=new Float32Array(o);for(let i=0;i<o;i++)if(null==n||n[i])for(i=0;i<o;i++){const n=e[i],t=r[i],o=n+6*t-7.5*a[i]+1;o&&(s[i]=2.5*(n-t)/o)}return[s]}function bandIndexUtils_p(n,t,e=.5){const[r,a,o]=t,s=a.length,i=new Float32Array(s);for(let l=0;l<s;l++)if(null==n||n[l])for(l=0;l<s;l++){const n=r[l],t=a[l],s=o[l],c=n+e*t+(1-e)*s;c&&(i[l]=(n-e*t-(1-e)*s)/c)}return[i]}function F(n,t,e){const r=e.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(null==n||n[o])for(o=0;o<r;o++){const n=(.1-t[o])**2+(.06-e[o])**2;n&&(a[o]=1/n)}return[a]}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/BandArithmeticFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar BandArithmeticFunctionArguments_p;let BandArithmeticFunctionArguments_a=BandArithmeticFunctionArguments_p=class extends p{constructor(){super(...arguments),this.method=\"custom\"}clone(){return new BandArithmeticFunctionArguments_p({method:this.method,bandIndexes:this.bandIndexes,raster:(0,lang/* clone */.d9)(this.raster)})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{type:String,write:!0}})],BandArithmeticFunctionArguments_a.prototype,\"bandIndexes\",void 0),(0,tslib_es6._)([(0,enumeration/* enumeration */.J)(bandIndexUtils_a)],BandArithmeticFunctionArguments_a.prototype,\"method\",void 0),BandArithmeticFunctionArguments_a=BandArithmeticFunctionArguments_p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments\")],BandArithmeticFunctionArguments_a);const BandArithmeticFunctionArguments_i=BandArithmeticFunctionArguments_a;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/BandArithmeticFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst BandArithmeticFunction_o=new Set([\"vari\",\"mtvi2\",\"rtvi-core\",\"evi\"]);let BandArithmeticFunction_c=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"BandArithmetic\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType(\"f32\");const e=this.sourceRasterInfos[0];if(e.bandCount<2)return{success:!1,supportsGPU:!1,error:\"band-arithmetic-function: source raster has insufficient amount of raster bands\"};const s=e.clone();s.pixelType=this.outputPixelType,s.statistics=null,s.histograms=null,s.bandCount=\"sultan\"===this.functionArguments.method?3:1,s.keyProperties={...s.keyProperties,BandProperties:void 0},this.rasterInfo=s;return{success:!0,supportsGPU:![\"custom\",\"gvitm\",\"sultan\"].includes(this.functionArguments.method)}}_processPixels(e){const s=e.pixelBlocks?.[0];if(null==s)return s;const{method:t,bandIndexes:r}=this.functionArguments,i=r.split(\" \").map((e=>parseFloat(e)));return o(s,{method:t,bandIndexes:i,equation:r})}_getWebGLParameters(){const e=this.functionArguments.bandIndexes.split(\" \").map((e=>parseFloat(e)-1));2===e.length&&e.push(0);const s=this.isInputBandIdsSwizzled?[0,1,2]:e;let t,r;const n=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case\"gndvi\":case\"nbr\":case\"ndbi\":case\"ndvi\":case\"ndvi-re\":case\"ndsi\":case\"ndmi\":case\"mndwi\":t=i([s[0],s[1],0]),r=\"ndxi\";break;case\"ndwi\":t=i([s[1],s[0],0]),r=\"ndxi\";break;case\"sr\":case\"sr-re\":case\"iron-oxide\":case\"ferrous-minerals\":case\"clay-minerals\":t=i([s[0],s[1],0]),r=\"sr\";break;case\"ci-g\":case\"ci-re\":t=i([s[0],s[1],0]),r=\"ci\";break;case\"savi\":t=i([s[0],s[1],0]),r=\"savi\",n[0]=e[2]+1;break;case\"tsavi\":t=i([s[0],s[1],0]),r=\"tsavi\",n[0]=e[2]+1,n[1]=e[3]+1,n[2]=e[4]+1;break;case\"msavi\":t=i([s[0],s[1],0]),r=\"msavi\";break;case\"gemi\":t=i([s[0],s[1],0]),r=\"gemi\";break;case\"pvi\":t=i([s[0],s[1],0]),r=\"tsavi\",n[0]=e[2]+1,n[1]=e[3]+1;break;case\"vari\":t=i([s[0],s[1],s[2]]),r=\"vari\";break;case\"mtvi2\":t=i([s[0],s[1],s[2]]),r=\"mtvi2\";break;case\"rtvi-core\":t=i([s[0],s[1],s[2]]),r=\"rtvicore\";break;case\"evi\":t=i([s[0],s[1],s[2]]),r=\"evi\";break;case\"wndwi\":t=i([s[0],s[1],0]),r=\"wndwi\",n[0]=e[3]?e[3]+1:.5;break;case\"bai\":t=i([s[1],s[0],0]),r=\"bai\";break;default:t=i([0,1,2]),r=\"custom\"}return{bandIndexMat3:t,indexType:r,adjustments:n}}_getInputBandIds(e){if(\"custom\"===this.functionArguments.method)return e;const s=this.functionArguments.bandIndexes.split(\" \").map((e=>parseFloat(e)-1)),t=e.length,r=s.map((e=>e>=t?t-1:e)),n=BandArithmeticFunction_o.has(this.functionArguments.method)?3:2,i=r.slice(0,n).map((s=>e[s]));return 2===i.length&&i.push(0),i}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],BandArithmeticFunction_c.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:BandArithmeticFunctionArguments_i,json:{write:!0,name:\"rasterFunctionArguments\"}})],BandArithmeticFunction_c.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],BandArithmeticFunction_c.prototype,\"rasterArgumentNames\",void 0),BandArithmeticFunction_c=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.BandArithmeticFunction\")],BandArithmeticFunction_c);const BandArithmeticFunction_u=BandArithmeticFunction_c;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/reader.js\nvar reader = __webpack_require__(34248);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/support/colorRampUtils.js\nvar colorRampUtils = __webpack_require__(55987);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/rest/support/colorRamps.js\nvar colorRamps = __webpack_require__(81657);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/ColormapFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar ColormapFunctionArguments_i;let ColormapFunctionArguments_u=ColormapFunctionArguments_i=class extends p{castColormapName(o){if(!o)return null;const r=o.toLowerCase();return colorRampUtils/* rasterColormapNames */.Oi.includes(r)?r:null}readColorRamp(o){return (0,colorRamps/* fromJSON */.i)(o)}readColorRampName(o,r){if(!o)return null;const e=colorRampUtils/* colorRampDict */.H0.jsonValues.find((r=>r.toLowerCase()===o.toLowerCase()));return e?colorRampUtils/* colorRampDict */.H0.fromJSON(e):null}clone(){return new ColormapFunctionArguments_i({colormap:(0,lang/* clone */.d9)(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:[[Number]],json:{write:!0}})],ColormapFunctionArguments_u.prototype,\"colormap\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],ColormapFunctionArguments_u.prototype,\"colormapName\",void 0),(0,tslib_es6._)([(0,cast/* cast */.p)(\"colormapName\")],ColormapFunctionArguments_u.prototype,\"castColormapName\",null),(0,tslib_es6._)([(0,property/* property */.Cb)({types:colorRamps/* types */.V,json:{write:!0}})],ColormapFunctionArguments_u.prototype,\"colorRamp\",void 0),(0,tslib_es6._)([(0,reader/* reader */.r)(\"colorRamp\")],ColormapFunctionArguments_u.prototype,\"readColorRamp\",null),(0,tslib_es6._)([(0,property/* property */.Cb)({type:colorRampUtils/* colorRampDict */.H0.apiValues,json:{type:colorRampUtils/* colorRampDict */.H0.jsonValues,write:colorRampUtils/* colorRampDict */.H0.write}})],ColormapFunctionArguments_u.prototype,\"colorRampName\",void 0),(0,tslib_es6._)([(0,reader/* reader */.r)(\"colorRampName\")],ColormapFunctionArguments_u.prototype,\"readColorRampName\",null),ColormapFunctionArguments_u=ColormapFunctionArguments_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.ColormapFunctionArguments\")],ColormapFunctionArguments_u);const ColormapFunctionArguments_d=ColormapFunctionArguments_u;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/colormaps.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst colormaps_t=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],colormaps_o=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function colormaps_e(t,o){const e=[],n=[];for(let r=0;r<t.length-1;r++)e.push({type:\"algorithmic\",algorithm:\"esriHSVAlgorithm\",fromColor:t[r].slice(1),toColor:t[r+1].slice(1)}),n.push(t[r+1][0]-t[r][0]);const s=t[t.length-1][0];return (0,colorRampUtils/* convertColorRampToColors */.XL)({type:\"multipart\",colorRamps:e},{numColors:s,weights:o=o??n})}function colormaps_n(){return colormaps_e([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function s(){const r=colormaps_e([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let t=r.length;t<256;t++)r.push([6,27,7]);return r}function colormaps_l(){return (0,colorRampUtils/* convertColorRampToColors */.XL)({type:\"algorithmic\",algorithm:\"esriHSVAlgorithm\",fromColor:[0,0,0],toColor:[255,255,255]})}function colormaps_i(){const r=[];for(let t=0;t<256;t++){const t=[];for(let r=0;r<3;r++)t.push(Math.round(255*Math.random()));r.push(t)}return r}function colormaps_a(){return colormaps_e([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function colormaps_c(r){let e;switch(r){case\"elevation\":e=colormaps_n();break;case\"gray\":e=colormaps_l();break;case\"hillshade\":e=colormaps_a();break;case\"ndvi\":e=colormaps_t;break;case\"ndvi2\":e=s();break;case\"ndvi3\":e=colormaps_o;break;case\"random\":e=colormaps_i()}return e?(e=e.map(((r,t)=>[t,...r])),e):null}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/ColormapFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet ColormapFunction_c=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Colormap\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.isNoopProcess=!0}_bindSourceRasters(){const o=this.sourceRasterInfos[0];if(o.bandCount>1)return{success:!1,supportsGPU:!1,error:\"colormap-function: source data must be single band\"};let{colormap:r,colormapName:s,colorRamp:t,colorRampName:e}=this.functionArguments;if(!r?.length)if(t)r=(0,colorRampUtils/* convertColorRampToColormap */.Jw)(t,{interpolateAlpha:!0});else if(e){const o=(0,colorRampUtils/* getColorRampJSON */.B4)(e);o&&(r=(0,colorRampUtils/* convertColorRampToColormap */.Jw)(o))}else s&&(r=colormaps_c(s));if(!r?.length)return{success:!1,supportsGPU:!1,error:\"colormap-function: missing colormap argument\"};this.outputPixelType=this._getOutputPixelType(\"u8\");const c=o.clone();return c.pixelType=this.outputPixelType,c.colormap=r,c.bandCount=1,this.rasterInfo=c,{success:!0,supportsGPU:!0}}_processPixels(o){return o.pixelBlocks?.[0]}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],ColormapFunction_c.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:ColormapFunctionArguments_d,json:{write:!0,name:\"rasterFunctionArguments\"}})],ColormapFunction_c.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],ColormapFunction_c.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],ColormapFunction_c.prototype,\"isNoopProcess\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],ColormapFunction_c.prototype,\"indexedColormap\",void 0),ColormapFunction_c=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.ColormapFunction\")],ColormapFunction_c);const ColormapFunction_u=ColormapFunction_c;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/writer.js\nvar writer = __webpack_require__(39835);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/CompositeBandFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar CompositeBandFunctionArguments_a;let CompositeBandFunctionArguments_c=CompositeBandFunctionArguments_a=class extends p{constructor(){super(...arguments),this.rasters=[]}writeRasters(r,s){s.rasters=r.map((r=>\"number\"==typeof r||\"string\"==typeof r?r:r.toJSON()))}clone(){return new CompositeBandFunctionArguments_a({rasters:(0,lang/* clone */.d9)(this.rasters)})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],CompositeBandFunctionArguments_c.prototype,\"rasters\",void 0),(0,tslib_es6._)([(0,writer/* writer */.c)(\"rasters\")],CompositeBandFunctionArguments_c.prototype,\"writeRasters\",null),CompositeBandFunctionArguments_c=CompositeBandFunctionArguments_a=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.CompositeBandFunctionArguments\")],CompositeBandFunctionArguments_c);const CompositeBandFunctionArguments_n=CompositeBandFunctionArguments_c;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/CompositeBandFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet CompositeBandFunction_i=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"CompositeBand\",this.functionArguments=null,this.rasterArgumentNames=[\"rasters\"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>null!=t&&t.length))){const e=[];t.forEach((({statistics:t})=>null!=t&&e.push(...t))),s.statistics=e}if(t.every((({histograms:t})=>null!=t&&t.length))){const e=[];t.forEach((({histograms:t})=>null!=t&&e.push(...t))),s.histograms=e}s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const r=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;s.keyProperties={...s.keyProperties,BandProperties:r},this.rasterInfo=s;return{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const s=e?.[0];return null==s?null:(0,pixelUtils/* compositeBands */.Gd)(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],CompositeBandFunction_i.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:CompositeBandFunctionArguments_n,json:{write:!0,name:\"rasterFunctionArguments\"}})],CompositeBandFunction_i.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],CompositeBandFunction_i.prototype,\"rasterArgumentNames\",void 0),CompositeBandFunction_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.CompositeBandFunction\")],CompositeBandFunction_i);const CompositeBandFunction_a=CompositeBandFunction_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctionConstants.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst rasterFunctionConstants_e={degree:1,percentRise:2,adjusted:3},rasterFunctionConstants_r={standard:0,platform:1,profile:2},rasterFunctionConstants_i={userDefined:0,NDVI:1,SAVI:2,TSAVI:3,MSAVI:4,GEMI:5,PVI:6,GVITM:7,Sultan:8,VARI:9,GNDVI:10,SR:11,NDVIRe:12,SRRe:13,MTVI2:14,RTVICore:15,CIRe:16,CIG:17,NDWI:18,EVI:19,ironOxide:20,ferrousMinerals:21,clayMinerals:22,WNDWI:23,BAI:24,NBR:25,NDBI:26,NDMI:27,NDSI:28,MNDWI:29},rasterFunctionConstants_t={random:\"Random\",NDVI:\"NDVI\",NDVI2:\"NDVI2\",NDVI3:\"NDVI3\",elevation:\"Elevation\",gray:\"Gray\",hillshade:\"Hillshade\"},rasterFunctionConstants_o={aspect:\"Aspect\",blackToWhite:\"Black to White\",blueBright:\"Blue Bright\",blueLightToDark:\"Blue Light to Dark\",blueGreenBright:\"Blue-Green Bright\",blueGreenLightToDark:\"Blue-Green Light to Dark\",brownLightToDark:\"Brown Light to Dark\",brownToBlueGreenDivergingBright:\"Brown to Blue Green Diverging, Bright\",brownToBlueGreenDivergingDark:\"Brown to Blue Green Diverging, Dark\",coefficientBias:\"Coefficient Bias\",coldToHotDiverging:\"Cold to Hot Diverging\",conditionNumber:\"Condition Number\",cyanToPurple:\"Cyan to Purple\",cyanLightToBlueDark:\"Cyan-Light to Blue-Dark\",distance:\"Distance\",elevation1:\"Elevation #1\",elevation2:\"Elevation #2\",errors:\"Errors\",grayLightToDark:\"Gray Light to Dark\",greenBright:\"Green Bright\",greenLightToDark:\"Green Light to Dark\",greenToBlue:\"Green to Blue\",orangeBright:\"Orange Bright\",orangeLightToDark:\"Orange Light to Dark\",partialSpectrum:\"Partial Spectrum\",partialSpectrum1Diverging:\"Partial Spectrum 1 Diverging\",partialSpectrum2Diverging:\"Partial Spectrum 2 Diverging\",pinkToYellowGreenDivergingBright:\"Pink to YellowGreen Diverging, Bright\",pinkToYellowGreenDivergingDark:\"Pink to YellowGreen Diverging, Dark\",precipitation:\"Precipitation\",prediction:\"Prediction\",purpleBright:\"Purple Bright\",purpleToGreenDivergingBright:\"Purple to Green Diverging, Bright\",purpleToGreenDivergingDark:\"Purple to Green Diverging, Dark\",purpleBlueBright:\"Purple-Blue Bright\",purpleBlueLightToDark:\"Purple-Blue Light to Dark\",purpleRedBright:\"Purple-Red Bright\",purpleRedLightToDark:\"Purple-Red Light to Dark\",redBright:\"Red Bright\",redLightToDark:\"Red Light to Dark\",redToBlueDivergingBright:\"Red to Blue Diverging, Bright\",redToBlueDivergingDark:\"Red to Blue Diverging, Dark\",redToGreen:\"Red to Green\",redToGreenDivergingBright:\"Red to Green Diverging, Bright\",redToGreenDivergingDark:\"Red to Green Diverging, Dark\",slope:\"Slope\",spectrumFullBright:\"Spectrum-Full Bright\",spectrumFullDark:\"Spectrum-Full Dark\",spectrumFullLight:\"Spectrum-Full Light\",surface:\"Surface\",temperature:\"Temperature\",whiteToBlack:\"White to Black\",yellowToDarkRed:\"Yellow to Dark Red\",yellowToGreenToDarkBlue:\"Yellow to Green to Dark Blue\",yellowToRed:\"Yellow to Red\",yellowGreenBright:\"Yellow-Green Bright\",yellowGreenLightToDark:\"Yellow-Green Light to Dark\"},rasterFunctionConstants_a={bestMatch:0,fail:1},rasterFunctionConstants_n={matchAny:0,matchAll:1},rasterFunctionConstants_l={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},rasterFunctionConstants_g={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9},D={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},rasterFunctionConstants_h={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},rasterFunctionConstants_u={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},rasterFunctionConstants_s={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},rasterFunctionConstants_p={setNull:50,conditional:78},rasterFunctionConstants_d={...D,...rasterFunctionConstants_h,...rasterFunctionConstants_u,...rasterFunctionConstants_s,...rasterFunctionConstants_p};\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFormats/pixelRangeUtils.js\nvar pixelRangeUtils = __webpack_require__(79956);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/convolutionUtils.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst convolutionUtils_n=new Map;function convolutionUtils_o(t){const e=Math.sqrt(t.length),n=t.slice(0,e),o=[1];for(let l=1;l<e;l++){let n=null;for(let o=0;o<e;o++){const r=t[o+l*e],s=t[o];if(null==n)if(0===s){if(r)return{separable:!1,row:null,col:null}}else n=r/s;else if(r/s!==n)return{separable:!1,row:null,col:null}}if(null==n)return{separable:!1,row:null,col:null};o.push(n)}return{separable:!0,row:n,col:o}}function convolutionUtils_l(t,e,n,o,l,r,s){const i=new Float32Array(e*n),a=r.length,c=s?0:o,h=s?o:0,f=s?1:e;for(let p=c;p<n-c;p++){const n=p*e;for(let s=h;s<e-h;s++){if(l&&!l[n+s])continue;let e=0;for(let l=0;l<a;l++)e+=t[n+s+(l-o)*f]*r[l];i[n+s]=e}}return i}function convolutionUtils_r(t,e,n,o,l,r,s){const i=new Float32Array(e*n),a=Math.floor(o/2),c=Math.floor(l/2);for(let h=a;h<n-a;h++){const n=h*e;for(let h=c;h<e-c;h++){if(r&&!r[n+h])continue;let f=0;for(let r=0;r<o;r++)for(let o=0;o<l;o++)f+=t[n+h+(r-a)*e+o-c]*s[r*l+o];i[n+h]=f}}return i}function convolutionUtils_s(e,n,o=!0){const{pixels:l,width:s,height:a,pixelType:c,mask:h}=e,f=l.length,p=[],{kernel:u,rows:g,cols:x}=n;for(let t=0;t<f;t++){const e=convolutionUtils_r(l[t],s,a,g,x,h,u);o&&convolutionUtils_i(e,s,a,g,x),p.push(e)}return new PixelBlock/* default */.Z({width:s,height:a,pixelType:c,pixels:p,mask:h})}function convolutionUtils_i(t,e,n,o,l){const r=Math.floor(o/2);for(let i=0;i<r;i++)for(let o=0;o<e;o++)t[i*e+o]=t[(l-1-i)*e+o],t[(n-1-i)*e+o]=t[(n-l+i)*e+o];const s=Math.floor(l/2);for(let i=0;i<n;i++){const n=i*e;for(let o=0;o<s;o++)t[n+o]=t[n+l-1-o],t[n+e-o-1]=t[n+e+o-l]}}function convolutionUtils_a(e,n,o,r=!0){const{pixels:s,width:a,height:c,pixelType:h,mask:f}=e,p=s.length,u=[],g=n.length,x=o.length,w=Math.floor(g/2),m=Math.floor(x/2);for(let t=0;t<p;t++){let e=convolutionUtils_l(s[t],a,c,w,f,n,!0);e=convolutionUtils_l(e,a,c,m,f,o,!1),r&&convolutionUtils_i(e,a,c,g,x),u.push(e)}return new PixelBlock/* default */.Z({width:a,height:c,pixelType:h,pixels:u,mask:f})}function convolutionUtils_c(t,e){const n=convolutionUtils_o(e.kernel),l=!1!==e.mirrorEdges,r=n.separable?convolutionUtils_a(t,n.row,n.col,l):convolutionUtils_s(t,e,l),{outputPixelType:i}=e;return i&&r.clamp(i),r}convolutionUtils_n.set(rasterFunctionConstants_l.none,[0,0,0,0,1,0,0,0,0]),convolutionUtils_n.set(rasterFunctionConstants_l.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),convolutionUtils_n.set(rasterFunctionConstants_l.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),convolutionUtils_n.set(rasterFunctionConstants_l.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),convolutionUtils_n.set(rasterFunctionConstants_l.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),convolutionUtils_n.set(rasterFunctionConstants_l.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),convolutionUtils_n.set(rasterFunctionConstants_l.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),convolutionUtils_n.set(rasterFunctionConstants_l.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),convolutionUtils_n.set(rasterFunctionConstants_l.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),convolutionUtils_n.set(rasterFunctionConstants_l.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),convolutionUtils_n.set(rasterFunctionConstants_l.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),convolutionUtils_n.set(rasterFunctionConstants_l.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),convolutionUtils_n.set(rasterFunctionConstants_l.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),convolutionUtils_n.set(rasterFunctionConstants_l.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),convolutionUtils_n.set(rasterFunctionConstants_l.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),convolutionUtils_n.set(rasterFunctionConstants_l.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),convolutionUtils_n.set(rasterFunctionConstants_l.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),convolutionUtils_n.set(rasterFunctionConstants_l.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),convolutionUtils_n.set(rasterFunctionConstants_l.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),convolutionUtils_n.set(rasterFunctionConstants_l.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),convolutionUtils_n.set(rasterFunctionConstants_l.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),convolutionUtils_n.set(rasterFunctionConstants_l.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),convolutionUtils_n.set(rasterFunctionConstants_l.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/ConvolutionFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar ConvolutionFunctionArguments_p;let ConvolutionFunctionArguments_c=ConvolutionFunctionArguments_p=class extends p{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(o){this._set(\"convolutionType\",o);const t=convolutionUtils_n.get(o);if(!t||o===rasterFunctionConstants_l.userDefined||o===rasterFunctionConstants_l.none)return;const s=Math.sqrt(t.length);this._set(\"kernel\",t),this._set(\"cols\",s),this._set(\"rows\",s)}clone(){return new ConvolutionFunctionArguments_p({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:(0,lang/* clone */.d9)(this.raster)})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{type:Number,write:!0}})],ConvolutionFunctionArguments_c.prototype,\"rows\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{type:Number,write:!0}})],ConvolutionFunctionArguments_c.prototype,\"cols\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{name:\"type\",type:Number,write:!0}})],ConvolutionFunctionArguments_c.prototype,\"convolutionType\",null),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{type:[Number],write:!0}})],ConvolutionFunctionArguments_c.prototype,\"kernel\",void 0),ConvolutionFunctionArguments_c=ConvolutionFunctionArguments_p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.ConvolutionFunctionArguments\")],ConvolutionFunctionArguments_c);const ConvolutionFunctionArguments_u=ConvolutionFunctionArguments_c;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/ConvolutionFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst ConvolutionFunction_c=25;let ConvolutionFunction_p=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Convolution\",this.rasterArgumentNames=[\"raster\"]}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:r}=this.functionArguments;if(!Object.values(rasterFunctionConstants_l).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==rasterFunctionConstants_l.none&&e*s!==r.length)return{success:!1,supportsGPU:!1,error:\"convolution-function: the specified rows and cols do not match the length of the kernel\"};const n=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(n.pixelType);const i=n.clone();i.pixelType=this.outputPixelType;const u=[rasterFunctionConstants_l.none,rasterFunctionConstants_l.sharpen,rasterFunctionConstants_l.sharpen2,rasterFunctionConstants_l.sharpening3x3,rasterFunctionConstants_l.sharpening5x5];\"u8\"===this.outputPixelType||u.includes(t)||(i.statistics=null,i.histograms=null),i.colormap=null,i.attributeTable=null,this.rasterInfo=i;return{success:!0,supportsGPU:r.length<=ConvolutionFunction_c}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===rasterFunctionConstants_l.none)return e;let{kernel:s,rows:r,cols:n}=this.functionArguments;const i=s.reduce(((t,e)=>t+e));return 0!==i&&1!==i&&(s=s.map((t=>t/i))),convolutionUtils_c(e,{kernel:s,rows:r,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){let{kernel:t}=this.functionArguments;const e=t.reduce(((t,e)=>t+e));0!==e&&1!==e&&(t=t.map((t=>t/e)));const s=new Float32Array(ConvolutionFunction_c);return s.set(t),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:s,clampRange:(0,pixelRangeUtils/* getPixelValueRange */.r)(this.outputPixelType)}}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],ConvolutionFunction_p.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:ConvolutionFunctionArguments_u,json:{write:!0,name:\"rasterFunctionArguments\"}})],ConvolutionFunction_p.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],ConvolutionFunction_p.prototype,\"rasterArgumentNames\",void 0),ConvolutionFunction_p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.ConvolutionFunction\")],ConvolutionFunction_p);const ConvolutionFunction_l=ConvolutionFunction_p;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/CurvatureFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar CurvatureFunctionArguments_c;const CurvatureFunctionArguments_u=new jsonMap/* JSONMap */.X({0:\"standard\",1:\"platform\",2:\"profile\"},{useNumericKeys:!0});let CurvatureFunctionArguments_i=CurvatureFunctionArguments_c=class extends p{constructor(){super(...arguments),this.curvatureType=\"standard\",this.zFactor=1}readCurvatureType(r,e){return CurvatureFunctionArguments_u.fromJSON(e.type??e.curvatureType??0)}clone(){return new CurvatureFunctionArguments_c({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:{target:\"type\"}}}),(0,enumeration/* enumeration */.J)(CurvatureFunctionArguments_u)],CurvatureFunctionArguments_i.prototype,\"curvatureType\",void 0),(0,tslib_es6._)([(0,reader/* reader */.r)(\"curvatureType\",[\"type\",\"curvatureType\"])],CurvatureFunctionArguments_i.prototype,\"readCurvatureType\",null),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{write:!0}})],CurvatureFunctionArguments_i.prototype,\"zFactor\",void 0),CurvatureFunctionArguments_i=CurvatureFunctionArguments_c=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.CurvatureFunctionArguments\")],CurvatureFunctionArguments_i);const CurvatureFunctionArguments_n=CurvatureFunctionArguments_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/CurvatureFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet CurvatureFunction_n=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Curvature\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType(\"f32\");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const r=t.pixelBlocks?.[0];if(null==r)return null;const{zFactor:s,curvatureType:e}=this.functionArguments,{extent:o,primaryPixelSizes:n}=t,a=n?.[0],c=a??(o?{x:o.width/r.width,y:o.height/r.height}:{x:1,y:1}),p=this.isGCS&&s>=1?s*surfaceUtils/* GCS_FACTOR */.CX:s;return (0,surfaceUtils/* curvature */.Ne)(r,{zFactor:p,curvatureType:e,resolution:c})}_getWebGLParameters(){const{zFactor:t,curvatureType:r}=this.functionArguments;return{curvatureType:r,zFactor:this.isGCS&&t>=1?t*surfaceUtils/* GCS_FACTOR */.CX:t}}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],CurvatureFunction_n.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:CurvatureFunctionArguments_n,json:{write:!0,name:\"rasterFunctionArguments\"}})],CurvatureFunction_n.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],CurvatureFunction_n.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],CurvatureFunction_n.prototype,\"isGCS\",void 0),CurvatureFunction_n=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.CurvatureFunction\")],CurvatureFunction_n);const CurvatureFunction_a=CurvatureFunction_n;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/ExtractBandFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar ExtractBandFunctionArguments_a;let ExtractBandFunctionArguments_i=ExtractBandFunctionArguments_a=class extends p{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=pixelUtils/* MissingBandAction */.CD.bestMatch}clone(){return new ExtractBandFunctionArguments_a({bandIds:[...this.bandIds],bandNames:[...this.bandNames],missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],ExtractBandFunctionArguments_i.prototype,\"bandIds\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],ExtractBandFunctionArguments_i.prototype,\"bandNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],ExtractBandFunctionArguments_i.prototype,\"bandWavelengths\",void 0),(0,tslib_es6._)([(0,enumeration/* enumeration */.J)({0:\"name\",1:\"wavelength\",2:\"id\"})],ExtractBandFunctionArguments_i.prototype,\"method\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],ExtractBandFunctionArguments_i.prototype,\"missingBandAction\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],ExtractBandFunctionArguments_i.prototype,\"wavelengthMatchTolerance\",void 0),ExtractBandFunctionArguments_i=ExtractBandFunctionArguments_a=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.ExtractBandFunctionArguments\")],ExtractBandFunctionArguments_i);const ExtractBandFunctionArguments_c=ExtractBandFunctionArguments_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/ExtractBandFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet ExtractBandFunction_i=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"ExtractBand\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,n=e[0],{method:s,bandNames:r,bandWavelengths:a,bandIds:i,missingBandAction:l}=t,u=r?.length&&(\"name\"===s||\"id\"!==s&&!i?.length),c=a?.length&&(\"wavelength\"===s||\"id\"!==s&&!i?.length),h=l===pixelUtils/* MissingBandAction */.CD.fail,d=u?this._matchBandNames(n,r):c?this._matchBandWavelengths(n,a,h):this._matchBandIds(n,i,h);if(null==d){return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?\"band names\":c?\"band wavelengths\":\"band ids\"} for the imagery data source`}}this.functionArguments.bandIds=d,this.functionArguments.method=\"id\",this.outputPixelType=this._getOutputPixelType(\"f32\");const m=n.clone();m.pixelType=this.outputPixelType,m.bandCount=d.length;const{statistics:p,histograms:g}=m;null!=p&&p.length&&(m.statistics=d.map((t=>p[t]||p[p.length-1]))),null!=g&&g.length&&(m.histograms=d.map((t=>g[t]||g[g.length-1])));let f=m.keyProperties?.BandProperties;f?.length&&(f=d.map((t=>t>=f.length?f[f.length-1]:f[t])),m.keyProperties={...m.keyProperties,BandProperties:f}),this.rasterInfo=m;return{success:!0,supportsGPU:m.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const n=e.pixels.length,s=this.functionArguments.bandIds.map((t=>t>=n?n-1:t));return e.extractBands(s)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:i(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}_matchBandNames(t,e){const n=t.bandInfos.map((({name:t})=>t.toLowerCase())),s=[];for(let r=0;r<e.length;r++){const t=e[r].toLowerCase();let a=n.indexOf(t);if(-1===a&&\"nearinfrared\"===t&&(a=n.findIndex((t=>t.startsWith(\"nearinfrared_1\"))),-1===a&&(a=n.findIndex((t=>t.startsWith(\"nearinfrared\"))))),-1===a)return null;s.push(a)}return s}_matchBandIds(t,e,n){const{bandCount:s}=t;return!e?.length||n&&e.some((t=>t<0||t>=s))?null:e}_matchBandWavelengths(t,e,n){const{bandInfos:s}=t,r=[];for(let i=0;i<s.length;i++){const{minWavelength:t,maxWavelength:e}=s[i];if(!t||!e)return null;r.push({minWavelength:t,maxWavelength:e})}const{wavelengthMatchTolerance:a}=this.functionArguments,o=[];for(let i=0;i<e.length;i++){const t=e[i];let s=!1,l=-1,u=Number.MAX_VALUE;for(let e=0;e<r.length;e++){const n=r[e],a=t>=n.minWavelength&&t<=n.maxWavelength,o=Math.abs(t-(n.minWavelength+n.maxWavelength)/2);a?o<u&&(s=!0,l=e,u=o):!s&&o<u&&(l=e,u=o)}if(!s&&a&&u<a&&(s=!0),!s&&n)return null;o.push(l)}return o}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],ExtractBandFunction_i.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:ExtractBandFunctionArguments_c,json:{write:!0,name:\"rasterFunctionArguments\"}})],ExtractBandFunction_i.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],ExtractBandFunction_i.prototype,\"rasterArgumentNames\",void 0),ExtractBandFunction_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.ExtractBandFunction\")],ExtractBandFunction_i);const ExtractBandFunction_l=ExtractBandFunction_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/LocalFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar LocalFunctionArguments_a;let LocalFunctionArguments_i=LocalFunctionArguments_a=class extends p{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(r,s){s.rasters=r.map((r=>\"number\"==typeof r||\"string\"==typeof r?r:r.toJSON()))}clone(){return new LocalFunctionArguments_a({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:(0,lang/* clone */.d9)(this.rasters)})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],LocalFunctionArguments_i.prototype,\"operation\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],LocalFunctionArguments_i.prototype,\"rasters\",void 0),(0,tslib_es6._)([(0,writer/* writer */.c)(\"rasters\")],LocalFunctionArguments_i.prototype,\"writeRasters\",null),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],LocalFunctionArguments_i.prototype,\"processAsMultiband\",void 0),LocalFunctionArguments_i=LocalFunctionArguments_a=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.LocalFunctionArguments\")],LocalFunctionArguments_i);const LocalFunctionArguments_c=LocalFunctionArguments_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/localUtils.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst localUtils_o=new Map;function localUtils_a(t){return localUtils_o.get(t)}localUtils_o.set(rasterFunctionConstants_u.acos,[0,Math.PI]),localUtils_o.set(rasterFunctionConstants_u.asin,[-Math.PI/2,Math.PI/2]),localUtils_o.set(rasterFunctionConstants_u.atan,[-Math.PI/2,Math.PI/2]),localUtils_o.set(rasterFunctionConstants_u.cos,[-1,1]),localUtils_o.set(rasterFunctionConstants_u.sin,[-1,1]),localUtils_o.set(rasterFunctionConstants_h.booleanAnd,[0,1]),localUtils_o.set(rasterFunctionConstants_h.booleanNot,[0,1]),localUtils_o.set(rasterFunctionConstants_h.booleanOr,[0,1]),localUtils_o.set(rasterFunctionConstants_h.booleanXOr,[0,1]),localUtils_o.set(rasterFunctionConstants_h.equalTo,[0,1]),localUtils_o.set(rasterFunctionConstants_h.notEqual,[0,1]),localUtils_o.set(rasterFunctionConstants_h.greaterThan,[0,1]),localUtils_o.set(rasterFunctionConstants_h.greaterThanEqual,[0,1]),localUtils_o.set(rasterFunctionConstants_h.lessThan,[0,1]),localUtils_o.set(rasterFunctionConstants_h.lessThanEqual,[0,1]),localUtils_o.set(rasterFunctionConstants_h.isNull,[0,1]);const localUtils_l=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function localUtils_c(t,e=!1){const n=t.map((t=>t.mask)),r=n.filter((t=>null!=t)),s=t[0].pixels[0].length;if(0===r.length)return new Uint8Array(s).fill(255);const o=r[0],a=new Uint8Array(o);if(1===r.length)return a;if(!e){for(let t=1;t<r.length;t++){const e=r[t];for(let t=0;t<a.length;t++)a[t]&&(a[t]=e[t]?255:0)}return a}if(r.length!==n.length)return new Uint8Array(s).fill(255);for(let l=1;l<r.length;l++){const t=r[l];for(let e=0;e<a.length;e++)0===a[e]&&(a[e]=t[e]?255:0)}return a}function localUtils_f(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]+o[t]);return l}function localUtils_u(e,n,r){const[s]=e,o=s.length,a=PixelBlock/* default */.Z.createEmptyBand(\"f32\",o);return a.set(s),a}function localUtils_h(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]-o[t]);return l}function localUtils_i(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]*o[t]);return l}function localUtils_g(e,n,r){const[s]=e,o=s.length,a=PixelBlock/* default */.Z.createEmptyBand(r,o);for(let t=0;t<o;t++)n&&!n[t]||(a[t]=Math.sign(s[t])*Math.floor(Math.abs(s[t])));return a}function localUtils_p(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]/o[t]);return l}function localUtils_m(t,e,n){return localUtils_p(t,e,\"f32\")}function localUtils_y(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=Math.floor(s[t]/o[t]));return l}function localUtils_d(n,r,s,o){const a=n[0],l=a.length,c=PixelBlock/* default */.Z.createEmptyBand(s,l);if(o===rasterFunctionConstants_u.atanh){for(let t=0;t<l;t++)if(r[t]){const e=a[t];Math.abs(e)>=1?r[t]=0:c[t]=Math.atanh(e)}return c}const f=o===rasterFunctionConstants_u.asin?Math.asin:Math.acos;for(let t=0;t<l;t++)if(r[t]){const e=a[t];Math.abs(e)>1?r[t]=0:c[t]=f(e)}return c}function M(e,n,r,s){const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s(o[t]));return l}function E(e,n,r,s){const[o,a]=e,l=o.length,c=PixelBlock/* default */.Z.createEmptyBand(r,l);for(let t=0;t<l;t++)n&&!n[t]||(c[t]=s(o[t],a[t]));return c}function B(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]&o[t]);return l}function localUtils_w(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]<<o[t]);return l}function localUtils_b(e,n,r){const[s]=e,o=s.length,a=PixelBlock/* default */.Z.createEmptyBand(r,o);for(let t=0;t<o;t++)n&&!n[t]||(a[t]=~s[t]);return a}function x(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]|o[t]);return l}function localUtils_A(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]>>o[t]);return l}function localUtils_k(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]^o[t]);return l}function N(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]&&o[t]?1:0);return l}function P(e,n,r){const[s]=e,o=s.length,a=PixelBlock/* default */.Z.createEmptyBand(r,o);for(let t=0;t<o;t++)n&&!n[t]||(a[t]=s[t]?0:1);return a}function T(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]||o[t]?1:0);return l}function q(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=(s[t]?1:0)^(o[t]?1:0));return l}function U(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]===o[t]?1:0);return l}function I(e,n,r,s){const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a),c=s===Math.E;for(let t=0;t<a;t++)n&&!n[t]||(l[t]=c?Math.exp(o[t]):s**o[t]);return l}function localUtils_F(t,e,n){return I(t,e,n,10)}function j(t,e,n){return I(t,e,n,2)}function z(t,e,n){return I(t,e,n,Math.E)}function O(e,n,r,s){const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(o[t]<=0?n[t]=0:l[t]=s(o[t]));return l}function W(t,e,n){return O(t,e,n,Math.log10)}function C(t,e,n){return O(t,e,n,Math.log2)}function R(t,e,n){return O(t,e,n,Math.log)}function S(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]>o[t]?1:0);return l}function X(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]>=o[t]?1:0);return l}function localUtils_v(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]<o[t]?1:0);return l}function localUtils_D(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]<=o[t]?1:0);return l}function G(e,n,r){const[s]=e,o=s.length,a=PixelBlock/* default */.Z.createEmptyBand(r,o);if(!n)return a;for(let t=0;t<o;t++)a[t]=n[t]?0:1;return a}function H(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]%o[t]);return l}function J(e,n,r){const[s]=e,o=s.length,a=PixelBlock/* default */.Z.createEmptyBand(r,o);for(let t=0;t<o;t++)n&&!n[t]||(a[t]=-s[t]);return a}function K(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n&&!n[t]||(l[t]=s[t]===o[t]?0:1);return l}function L(e,n,r){const[s,o]=e,a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a),c=new Uint8Array(a);for(let t=0;t<a;t++)null!=n&&!n[t]||0!==s[t]||(l[t]=o[t],c[t]=255);return{band:l,mask:c}}function Q(e,n,r){const[s,o,a]=e,l=s.length,c=PixelBlock/* default */.Z.createEmptyBand(r,l);for(let t=0;t<l;t++)n&&!n[t]||(c[t]=s[t]?o[t]:a[t]);return c}function V(e,n,r){const s=e.length;if(s<2)return e[0];const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)if(!n||n[t]){let n=o[t];for(let r=1;r<s;r++){const s=e[r][t];n<s&&(n=s)}l[t]=n}return l}function Y(e,n,r){const s=e.length;if(s<2)return e[0];const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)if(!n||n[t]){let n=o[t];for(let r=1;r<s;r++){const s=e[r][t];n>s&&(n=s)}l[t]=n}return l}function Z(e,n,r){const s=e.length;if(s<2)return e[0];const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)if(!n||n[t]){let n=o[t],r=n;for(let o=1;o<s;o++){const s=e[o][t];r<s?r=s:n>s&&(n=s)}l[t]=r-n}return l}function $(e,n,r){const s=e.length;if(s<2)return e[0];const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)if(!n||n[t]){let n=0;for(let r=0;r<s;r++)n+=e[r][t];l[t]=n/s}return l}function _(e,n,r){const s=e.length;if(s<2)return e[0];const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)if(!n||n[t])for(let n=0;n<s;n++){const r=e[n];l[t]+=r[t]}return l}function tt(e,n,r){const s=e.length;if(s<2)return e[0];const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)if(!n||n[t]){const n=new Float32Array(s);let r=0;for(let a=0;a<s;a++){const s=e[a];r+=s[t],n[a]=s[t]}r/=s;let o=0;for(let t=0;t<s;t++)o+=(n[t]-r)**2;l[t]=Math.sqrt(o/s)}return l}function et(e,n,r){const s=e.length;if(s<2)return e[0];const o=Math.floor(s/2),[a]=e,l=a.length,c=PixelBlock/* default */.Z.createEmptyBand(r,l),f=new Float32Array(s),u=s%2==1;for(let t=0;t<l;t++)if(!n||n[t]){for(let n=0;n<s;n++)f[n]=e[n][t];f.sort(),c[t]=u?f[o]:(f[o]+f[o-1])/2}return c}function nt(e,n,r){const[s,o]=e;if(null==o)return s;const a=s.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a);for(let t=0;t<a;t++)n[t]&&(s[t]===o[t]?l[t]=s[t]:n[t]=0);return l}function rt(e,n,r){const s=e.length;if(s<=2)return nt(e,n,r);const o=e[0].length,a=PixelBlock/* default */.Z.createEmptyBand(r,o),l=new Map;for(let t=0;t<o;t++)if(!n||n[t]){let n;l.clear();for(let a=0;a<s;a++)n=e[a][t],l.set(n,l.has(n)?l.get(n)+1:1);let r=0,o=0;for(const t of l.keys())r=l.get(t),r>o&&(o=r,n=t);a[t]=n}return a}function st(e,n,r){const s=e.length;if(s<=2)return nt(e,n,r);const o=e[0].length,a=PixelBlock/* default */.Z.createEmptyBand(r,o),l=new Map;for(let t=0;t<o;t++)if(!n||n[t]){let n;l.clear();for(let a=0;a<s;a++)n=e[a][t],l.set(n,l.has(n)?l.get(n)+1:1);let r=0,o=e.length;for(const t of l.keys())r=l.get(t),r<o&&(o=r,n=t);a[t]=n}return a}function ot(e,n,r){const s=e.length;if(s<2)return e[0];const[o]=e,a=o.length,l=PixelBlock/* default */.Z.createEmptyBand(r,a),c=new Set;for(let t=0;t<a;t++)if(!n||n[t]){let n;c.clear();for(let r=0;r<s;r++)n=e[r][t],c.add(n);l[t]=c.size}return l}const at=new Map,lt=new Map,ct=new Map,ft=new Map;function ut(){at.size||(at.set(4,Math.sqrt),at.set(6,Math.acos),at.set(7,Math.asin),at.set(8,Math.atan),at.set(9,Math.atanh),at.set(10,Math.abs),at.set(21,Math.cos),at.set(22,Math.cosh),at.set(48,Math.floor),at.set(49,Math.ceil),at.set(51,Math.sin),at.set(52,Math.sinh),at.set(56,Math.tan),at.set(57,Math.tanh),at.set(59,Math.acosh),at.set(60,Math.asinh),at.set(65,Math.floor),lt.set(5,Math.pow),lt.set(61,Math.atan2),ct.set(1,localUtils_f),ct.set(2,localUtils_h),ct.set(3,localUtils_i),ct.set(11,B),ct.set(12,localUtils_w),ct.set(12,localUtils_w),ct.set(13,localUtils_b),ct.set(14,x),ct.set(15,localUtils_A),ct.set(16,localUtils_k),ct.set(17,N),ct.set(18,P),ct.set(19,T),ct.set(20,q),ct.set(23,localUtils_p),ct.set(24,U),ct.set(25,z),ct.set(26,localUtils_F),ct.set(27,j),ct.set(28,S),ct.set(29,X),ct.set(30,localUtils_g),ct.set(31,G),ct.set(32,localUtils_u),ct.set(33,localUtils_v),ct.set(34,localUtils_D),ct.set(35,R),ct.set(36,W),ct.set(37,C),ct.set(44,H),ct.set(45,J),ct.set(46,K),ct.set(64,localUtils_m),ct.set(65,localUtils_y),ct.set(76,Q),ct.set(78,Q),ft.set(38,rt),ft.set(39,V),ft.set(40,$),ft.set(41,et),ft.set(42,Y),ft.set(43,st),ft.set(47,Z),ft.set(54,tt),ft.set(55,_),ft.set(58,ot),ft.set(66,rt),ft.set(67,V),ft.set(68,$),ft.set(69,et),ft.set(70,Y),ft.set(71,st),ft.set(72,Z),ft.set(73,tt),ft.set(74,_),ft.set(75,ot))}function ht(t,e,n,r){let[o,a]=(0,pixelRangeUtils/* getPixelValueRange */.r)(n);const l=n.startsWith(\"u\")||n.startsWith(\"s\");l&&(o-=1e-5,a+=1e-5);for(let s=0;s<e.length;s++)if(e[s]){const n=t[s];isNaN(n)||n<o||n>a?e[s]=0:r[s]=l?Math.round(n):n}}function it(s,a,l={}){ut();let f=localUtils_c(s,a>=66&&a<=75);const{outputPixelType:u=\"f32\"}=l,h=!ft.has(a)||l.processAsMultiband,i=h?s[0].pixels.length:1,g=[];for(let c=0;c<i;c++){const l=ft.has(a)&&!h?s.flatMap((t=>t.pixels)):s.map((t=>t.pixels[c]));let i,p=!0;if(a===rasterFunctionConstants_p.setNull){const t=L(l,f,u);i=t.band,f=t.mask,p=!1}else if(ct.has(a)){i=ct.get(a)(l,f,\"f64\")}else if(at.has(a))i=a===rasterFunctionConstants_u.asin||a===rasterFunctionConstants_u.acos||a===rasterFunctionConstants_u.atanh?localUtils_d(l,f,\"f64\",a):M(l,f,\"f64\",at.get(a));else if(lt.has(a))i=E(l,f,\"f64\",lt.get(a));else if(ft.has(a)){i=ft.get(a)(l,f,\"f64\")}else i=l[0],p=!1;if(p&&a!==rasterFunctionConstants_h.isNull&&!localUtils_o.has(a)){const e=PixelBlock/* default */.Z.createEmptyBand(u,i.length);f||(f=new Uint8Array(i.length).fill(255)),ht(i,f,u,e),i=e}g.push(i)}const p=s[0];return new PixelBlock/* default */.Z({width:p.width,height:p.height,pixelType:u,mask:a===rasterFunctionConstants_h.isNull?null:f,pixels:g})}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/LocalFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet LocalFunction_p=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Local\",this.functionArguments=null,this.rasterArgumentNames=[\"rasters\"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,s=t[0],{bandCount:o}=s,{processAsMultiband:e}=this.functionArguments;if(t.some((t=>t.bandCount!==o)))return{success:!1,supportsGPU:!1,error:\"local-function: input rasters do not have same band count\"};const{operation:r,rasters:n}=this.functionArguments,i=localUtils_l[r];if(!(999===i||n.length===i||n.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};this.outputPixelType=this._getOutputPixelType(\"f32\");const c=s.clone();c.pixelType=this.outputPixelType,c.statistics=null,c.histograms=null,c.colormap=null,c.attributeTable=null,c.bandCount=999!==i||e?o:1;const p=localUtils_a(r);if(p){c.statistics=[];for(let t=0;t<c.bandCount;t++)c.statistics[t]={min:p[0],max:p[1],avg:(p[0]+p[1])/2,stddev:(p[0]+p[1])/10}}this.rasterInfo=c;return{success:!0,supportsGPU:1===c.bandCount&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:s}=t;return null==s||s.some((t=>null==t))?null:it(s,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,s=localUtils_l[t],o=Object.keys(rasterFunctionConstants_d).find((s=>rasterFunctionConstants_d[s]===t))?.toLowerCase()??\"undefined\",n=this.outputPixelType??\"f32\";let[i,a]=(0,pixelRangeUtils/* getPixelValueRange */.r)(n);const c=n.startsWith(\"u\")||n.startsWith(\"s\");return c&&(i-=1e-4,a+=1e-4),{imageCount:s,operationName:o,domainRange:[i,a],isOutputRounded:c}}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],LocalFunction_p.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:LocalFunctionArguments_c,json:{write:!0,name:\"rasterFunctionArguments\"}})],LocalFunction_p.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LocalFunction_p.prototype,\"rasterArgumentNames\",void 0),LocalFunction_p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.LocalFunction\")],LocalFunction_p);const LocalFunction_l=LocalFunction_p;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/mathUtils.js\nvar mathUtils = __webpack_require__(19431);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/MaskFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar MaskFunctionArguments_n;let MaskFunctionArguments_a=MaskFunctionArguments_n=class extends p{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=pixelUtils/* NoDataInterpretation */.DX.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const r=t.map((t=>{if(\"number\"==typeof t)return e=!0,[t];if(\"string\"==typeof t){const r=t.trim().split(\" \").filter((t=>\"\"!==t.trim())).map((t=>Number(t)));return e=e||r.length>0,0===r.length?null:r}return null}));return e?r:null}clone(){return new MaskFunctionArguments_n({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],MaskFunctionArguments_a.prototype,\"includedRanges\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],MaskFunctionArguments_a.prototype,\"noDataValues\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],MaskFunctionArguments_a.prototype,\"normalizedNoDataValues\",null),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],MaskFunctionArguments_a.prototype,\"noDataInterpretation\",void 0),MaskFunctionArguments_a=MaskFunctionArguments_n=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.MaskFunctionArguments\")],MaskFunctionArguments_a);const MaskFunctionArguments_i=MaskFunctionArguments_a;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/MaskFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet MaskFunction_c=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Mask\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:o}=this.functionArguments;if(!s?.length&&!o?.length)return{success:!1,supportsGPU:!1,error:\"missing includedRanges or noDataValues argument\"};let r=[];for(let a=0;a<t.bandCount;a++){const t=(0,pixelUtils/* createMaskLUT */.nA)(e,s?.slice(2*a,2*a+2),o?.[a]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const n=null!=o&&o.every((t=>t?.length===o[0]?.length));return{success:!0,supportsGPU:(!s||s.length<=2*pixelUtils/* MAX_MAP_SIZE_GPU */.hd)&&(!o||n&&o[0].length<=pixelUtils/* MAX_MAP_SIZE_GPU */.hd)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:s,lookups:o}=this,{includedRanges:r,noDataInterpretation:n,normalizedNoDataValues:u}=this.functionArguments,a=n===pixelUtils/* NoDataInterpretation */.DX.matchAll;return (0,pixelUtils/* mask */.sS)(e,{includedRanges:r,noDataValues:u,outputPixelType:s,matchAll:a,lookups:o})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:s}=this.functionArguments,o=new Float32Array(pixelUtils/* MAX_MAP_SIZE_GPU */.hd);o.fill(mathUtils/* NUMBER_MAX_FLOAT32 */._3),s?.[0]?.length&&o.set(s[0]);const r=new Float32Array(pixelUtils/* MAX_MAP_SIZE_GPU */.hd);for(let n=0;n<r.length;n+=2)r[n]=t?.[n]??-mathUtils/* NUMBER_MAX_FLOAT32 */._3,r[n+1]=t?.[n+1]??mathUtils/* NUMBER_MAX_FLOAT32 */._3;return t&&t.length&&r.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:o,includedRanges:r}}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],MaskFunction_c.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:MaskFunctionArguments_i,json:{write:!0,name:\"rasterFunctionArguments\"}})],MaskFunction_c.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],MaskFunction_c.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],MaskFunction_c.prototype,\"lookups\",void 0),MaskFunction_c=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.MaskFunction\")],MaskFunction_c);const MaskFunction_p=MaskFunction_c;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/NDVIFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar NDVIFunctionArguments_e;let NDVIFunctionArguments_i=NDVIFunctionArguments_e=class extends p{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:r,infraredBandID:s,scientificOutput:t}=this;return new NDVIFunctionArguments_e({visibleBandID:r,infraredBandID:s,scientificOutput:t})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],NDVIFunctionArguments_i.prototype,\"visibleBandID\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],NDVIFunctionArguments_i.prototype,\"infraredBandID\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],NDVIFunctionArguments_i.prototype,\"scientificOutput\",void 0),NDVIFunctionArguments_i=NDVIFunctionArguments_e=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.NDVIFunctionArguments\")],NDVIFunctionArguments_i);const NDVIFunctionArguments_n=NDVIFunctionArguments_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/NDVIFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet NDVIFunction_u=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"NDVI\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:s,infraredBandID:r}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?\"f32\":\"u8\");const e=this.sourceRasterInfos[0],n=Math.max(s,r);if(e.bandCount<2||n>=e.bandCount)return{success:!1,supportsGPU:!1,error:\"ndvi-function: source raster has insufficient amount of raster bands\"};const o=e.clone();o.pixelType=this.outputPixelType,o.colormap=null,o.histograms=null,o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,u,a,c]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:u,avg:a,stddev:c}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const s=t.pixelBlocks?.[0];if(null==s)return null;const{visibleBandID:r,infraredBandID:n,scientificOutput:o}=this.functionArguments;return bandIndexUtils_s(s,r,n,!o)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:s,scientificOutput:r}=this.functionArguments,e=this.isInputBandIdsSwizzled?[0,1,2]:[s,t,0];return{bandIndexMat3:i(e),scaled:!r}}_getInputBandIds(t){const{visibleBandID:s,infraredBandID:r}=this.functionArguments;return[r,s,0].map((s=>t[s]))}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],NDVIFunction_u.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:NDVIFunctionArguments_n,json:{write:!0,name:\"rasterFunctionArguments\"}})],NDVIFunction_u.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],NDVIFunction_u.prototype,\"rasterArgumentNames\",void 0),NDVIFunction_u=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.NDVIFunction\")],NDVIFunction_u);const NDVIFunction_a=NDVIFunction_u;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/RemapFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar RemapFunctionArguments_n;let RemapFunctionArguments_r=RemapFunctionArguments_n=class extends p{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new RemapFunctionArguments_n({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],RemapFunctionArguments_r.prototype,\"inputRanges\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],RemapFunctionArguments_r.prototype,\"outputValues\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],RemapFunctionArguments_r.prototype,\"noDataRanges\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],RemapFunctionArguments_r.prototype,\"allowUnmatched\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],RemapFunctionArguments_r.prototype,\"isLastInputRangeInclusive\",void 0),RemapFunctionArguments_r=RemapFunctionArguments_n=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.RemapFunctionArguments\")],RemapFunctionArguments_r);const RemapFunctionArguments_a=RemapFunctionArguments_r;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/RemapFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet RemapFunction_m=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Remap\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:n,outputValues:o,inputRanges:a,noDataRanges:i,isLastInputRangeInclusive:l}=this.functionArguments;if(null!=s&&s.length&&o?.length)if(n){const e=Math.min.apply(null,[...o,s[0].min]),n=Math.max.apply(null,[...o,s[0].max]);t.statistics=[{...s[0],min:e,max:n}]}else{let e=o[0],n=e;for(let t=0;t<o.length;t++)e=e>o[t]?o[t]:e,n=n>o[t]?n:o[t];t.statistics=[{...s[0],min:e,max:n}]}this.rasterInfo=t,this.lookup=n?null:(0,pixelUtils/* createRemapLUT */.oB)({srcPixelType:e,inputRanges:a,outputValues:o,noDataRanges:i,allowUnmatched:n,isLastInputRangeInclusive:l,outputPixelType:this.outputPixelType});return{success:!0,supportsGPU:(!o||o.length<=pixelUtils/* MAX_MAP_SIZE_GPU */.hd)&&(!i||i.length<=pixelUtils/* MAX_MAP_SIZE_GPU */.hd)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const t=(0,pixelUtils/* lookupPixels */.XV)(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=t&&s.mask&&(t.mask=(0,pixelUtils/* lookupBandValues */.wV)(e.pixels[0],e.mask,s.mask,s.offset,\"u8\")),t}const{inputRanges:o,outputValues:a,noDataRanges:u,allowUnmatched:r,isLastInputRangeInclusive:c}=this.functionArguments;return (0,pixelUtils/* remap */.a2)(e,{inputRanges:o,outputValues:a,noDataRanges:u,outputPixelType:n,allowUnmatched:r,isLastInputRangeInclusive:c})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:s,isLastInputRangeInclusive:n}=this.functionArguments,a=new Float32Array(3*pixelUtils/* MAX_MAP_SIZE_GPU */.hd),u=1e-5,i=this.functionArguments.inputRanges??[],l=this.functionArguments.outputValues??[],p=l.length;for(let o=0;o<pixelUtils/* MAX_MAP_SIZE_GPU */.hd;o++)a[3*o]=i[2*o]??mathUtils/* NUMBER_MAX_FLOAT32 */._3-1,a[3*o+1]=i[2*o+1]??mathUtils/* NUMBER_MAX_FLOAT32 */._3,a[3*o+2]=l[o]??0,o<p&&(o>0&&(a[3*o]-=u),(o<p-1||!n)&&(a[3*o+1]-=u));const c=new Float32Array(2*pixelUtils/* MAX_MAP_SIZE_GPU */.hd);c.fill(mathUtils/* NUMBER_MAX_FLOAT32 */._3),s?.length&&c.set(s);return{allowUnmatched:t,rangeMaps:a,noDataRanges:c,clampRange:(0,pixelRangeUtils/* getPixelValueRange */.r)(this.outputPixelType)}}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],RemapFunction_m.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:RemapFunctionArguments_a,json:{write:!0,name:\"rasterFunctionArguments\"}})],RemapFunction_m.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],RemapFunction_m.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],RemapFunction_m.prototype,\"lookup\",void 0),RemapFunction_m=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.RemapFunction\")],RemapFunction_m);const RemapFunction_g=RemapFunction_m;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/SlopeFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar SlopeFunctionArguments_i;const SlopeFunctionArguments_c=new jsonMap/* JSONMap */.X({1:\"degree\",2:\"percent-rise\",3:\"adjusted\"},{useNumericKeys:!0});let SlopeFunctionArguments_a=SlopeFunctionArguments_i=class extends p{constructor(){super(...arguments),this.slopeType=\"degree\",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new SlopeFunctionArguments_i({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,tslib_es6._)([(0,enumeration/* enumeration */.J)(SlopeFunctionArguments_c)],SlopeFunctionArguments_a.prototype,\"slopeType\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{write:!0}})],SlopeFunctionArguments_a.prototype,\"zFactor\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{name:\"psPower\",write:!0}})],SlopeFunctionArguments_a.prototype,\"pixelSizePower\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{name:\"psZFactor\",write:!0}})],SlopeFunctionArguments_a.prototype,\"pixelSizeFactor\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],SlopeFunctionArguments_a.prototype,\"removeEdgeEffect\",void 0),SlopeFunctionArguments_a=SlopeFunctionArguments_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.SlopeFunctionArguments\")],SlopeFunctionArguments_a);const SlopeFunctionArguments_n=SlopeFunctionArguments_a;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/SlopeFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet SlopeFunction_p=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Slope\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType(\"f32\");const e=this.sourceRasterInfos[0].clone();return e.pixelType=this.outputPixelType,e.statistics=\"percent-rise\"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(e){const t=e.pixelBlocks?.[0];if(null==t)return null;const{zFactor:s,slopeType:r,pixelSizePower:o,pixelSizeFactor:n}=this.functionArguments,{isGCS:p}=this,{extent:c,primaryPixelSizes:u}=e,a=u?.[0],l=a??(c?{x:c.width/t.width,y:c.height/t.height}:{x:1,y:1});return (0,surfaceUtils/* slope */.yg)(t,{zFactor:s,slopeType:r,pixelSizePower:o,pixelSizeFactor:n,isGCS:p,resolution:l})}_getWebGLParameters(){const{zFactor:e,slopeType:t,pixelSizeFactor:s,pixelSizePower:r}=this.functionArguments;return{zFactor:this.isGCS&&e>=1?e*surfaceUtils/* GCS_FACTOR */.CX:e,slopeType:t,pixelSizeFactor:s??0,pixelSizePower:r??0}}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],SlopeFunction_p.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:SlopeFunctionArguments_n,json:{write:!0,name:\"rasterFunctionArguments\"}})],SlopeFunction_p.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],SlopeFunction_p.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],SlopeFunction_p.prototype,\"isGCS\",void 0),SlopeFunction_p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.SlopeFunction\")],SlopeFunction_p);const SlopeFunction_c=SlopeFunction_p;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/StatisticsHistogramFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar StatisticsHistogramFunctionArguments_c;let StatisticsHistogramFunctionArguments_n=StatisticsHistogramFunctionArguments_c=class extends p{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,s){if(!t?.length)return null;const r=[];return t.forEach((t=>{const s={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};r.push(s)})),r}writeStatistics(t,s,r){if(!t?.length)return;const o=[];t.forEach((t=>{const s={...t,mean:t.avg,standardDeviation:t.stddev};delete s.avg,delete s.stddev,o.push(s)})),s[r]=o}clone(){return new StatisticsHistogramFunctionArguments_c({statistics:(0,lang/* clone */.d9)(this.statistics),histograms:(0,lang/* clone */.d9)(this.histograms)})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],StatisticsHistogramFunctionArguments_n.prototype,\"statistics\",void 0),(0,tslib_es6._)([(0,reader/* reader */.r)(\"statistics\")],StatisticsHistogramFunctionArguments_n.prototype,\"readStatistics\",null),(0,tslib_es6._)([(0,writer/* writer */.c)(\"statistics\")],StatisticsHistogramFunctionArguments_n.prototype,\"writeStatistics\",null),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],StatisticsHistogramFunctionArguments_n.prototype,\"histograms\",void 0),StatisticsHistogramFunctionArguments_n=StatisticsHistogramFunctionArguments_c=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments\")],StatisticsHistogramFunctionArguments_n);const StatisticsHistogramFunctionArguments_p=StatisticsHistogramFunctionArguments_n;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/StatisticsHistogramFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet StatisticsHistogramFunction_i=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"StatisticsHistogram\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.isNoopProcess=!0}_bindSourceRasters(){const s=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(\"u8\");const t=s.clone(),{statistics:r,histograms:o}=this.functionArguments;return o&&(t.histograms=o),r&&(t.statistics=r),this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(s){return s.pixelBlocks?.[0]}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],StatisticsHistogramFunction_i.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:StatisticsHistogramFunctionArguments_p,json:{write:!0,name:\"rasterFunctionArguments\"}})],StatisticsHistogramFunction_i.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],StatisticsHistogramFunction_i.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],StatisticsHistogramFunction_i.prototype,\"indexedColormap\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],StatisticsHistogramFunction_i.prototype,\"isNoopProcess\",void 0),StatisticsHistogramFunction_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.StatisticsHistogramFunction\")],StatisticsHistogramFunction_i);const StatisticsHistogramFunction_n=StatisticsHistogramFunction_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/StretchFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar StretchFunctionArguments_n;const StretchFunctionArguments_p=new jsonMap/* JSONMap */.X({0:\"none\",3:\"standard-deviation\",4:\"histogram-equalization\",5:\"min-max\",6:\"percent-clip\",9:\"sigmoid\"},{useNumericKeys:!0});let StretchFunctionArguments_c=StretchFunctionArguments_n=class extends p{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType=\"none\",this.useGamma=!1}writeStatistics(t,e,o){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[o]=t)}clone(){return new StretchFunctionArguments_n({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:(0,lang/* clone */.d9)(this.statistics),gamma:(0,lang/* clone */.d9)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:(0,lang/* clone */.d9)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],StretchFunctionArguments_c.prototype,\"computeGamma\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{name:\"dra\",write:!0}})],StretchFunctionArguments_c.prototype,\"dynamicRangeAdjustment\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:[Number],json:{write:!0}})],StretchFunctionArguments_c.prototype,\"gamma\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],StretchFunctionArguments_c.prototype,\"histograms\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{write:!0}})],StretchFunctionArguments_c.prototype,\"maxPercent\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{write:!0}})],StretchFunctionArguments_c.prototype,\"minPercent\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{write:!0}})],StretchFunctionArguments_c.prototype,\"numberOfStandardDeviations\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{name:\"max\",write:!0}})],StretchFunctionArguments_c.prototype,\"outputMax\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{name:\"min\",write:!0}})],StretchFunctionArguments_c.prototype,\"outputMin\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{write:!0}})],StretchFunctionArguments_c.prototype,\"sigmoidStrengthLevel\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{type:[[Number]],write:!0}})],StretchFunctionArguments_c.prototype,\"statistics\",void 0),(0,tslib_es6._)([(0,writer/* writer */.c)(\"statistics\")],StretchFunctionArguments_c.prototype,\"writeStatistics\",null),(0,tslib_es6._)([(0,enumeration/* enumeration */.J)(StretchFunctionArguments_p)],StretchFunctionArguments_c.prototype,\"stretchType\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],StretchFunctionArguments_c.prototype,\"useGamma\",void 0),StretchFunctionArguments_c=StretchFunctionArguments_n=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.StretchFunctionArguments\")],StretchFunctionArguments_c);const StretchFunctionArguments_u=StretchFunctionArguments_c;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js\nvar stretchUtils = __webpack_require__(18015);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/StretchFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet StretchFunction_c=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Stretch\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:s}=t,{functionArguments:e}=this,{dynamicRangeAdjustment:o,gamma:r,useGamma:u}=e;if(!o&&[\"u8\",\"u16\",\"s8\",\"s16\"].includes(s)){const o=(0,stretchUtils/* getStretchCutoff */.AV)(e.toJSON(),{rasterInfo:t}),a=this._isOutputRoundingNeeded()?\"round\":\"float\";this.lookup=(0,stretchUtils/* createStretchLUT */.hE)({pixelType:s,...o,gamma:u?r:null,rounding:a}),this.cutOffs=o}else o||(this.cutOffs=(0,stretchUtils/* getStretchCutoff */.AV)(e.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(s);const a=t.clone();a.pixelType=this.outputPixelType,a.statistics=null,a.histograms=null,a.colormap=null,a.attributeTable=null,\"u8\"===this.outputPixelType&&(a.keyProperties.DataType=\"processed\"),this.rasterInfo=a;return{success:!0,supportsGPU:!o}}_processPixels(t){const s=t.pixelBlocks?.[0];if(null==s)return s;const{lookup:e}=this;if(e)return (0,pixelUtils/* lookupPixels */.XV)(s,{...e,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:o}=this,u=this.cutOffs||(0,stretchUtils/* getStretchCutoff */.AV)(o.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:s}),i=o.useGamma?o.gamma:null;return (0,stretchUtils/* stretch */.dy)(s,{...u,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:s=255,gamma:e,useGamma:o}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,u=o&&e&&e.length?(0,stretchUtils/* computeGammaCorrection */.um)(r,e):[1,1,1],{minCutOff:n,maxCutOff:i}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===n.length&&(n[1]=n[2]=n[0],i[1]=i[2]=i[0]);const a=new Float32Array(r);let c;for(c=0;c<r;c++)a[c]=(s-t)/(i[c]-n[c]);const m=this._isOutputRoundingNeeded();return{bandCount:r,outMin:t,outMax:s,minCutOff:n,maxCutOff:i,factor:a,useGamma:o,gamma:o&&e?e:[1,1,1],gammaCorrection:o&&u?u:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:m,type:\"stretch\"}}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],StretchFunction_c.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:StretchFunctionArguments_u,json:{write:!0,name:\"rasterFunctionArguments\"}})],StretchFunction_c.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],StretchFunction_c.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],StretchFunction_c.prototype,\"lookup\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],StretchFunction_c.prototype,\"cutOffs\",void 0),StretchFunction_c=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.StretchFunction\")],StretchFunction_c);const StretchFunction_m=StretchFunction_c;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/TableFunctionArguments.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar TableFunctionArguments_c;let TableFunctionArguments_a=TableFunctionArguments_c=class extends p{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new TableFunctionArguments_c({attributeTableAsRecordSet:(0,lang/* clone */.d9)(this.attributeTableAsRecordSet)})}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],TableFunctionArguments_a.prototype,\"attributeTableAsRecordSet\",void 0),TableFunctionArguments_a=TableFunctionArguments_c=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.TableFunctionArguments\")],TableFunctionArguments_a);const TableFunctionArguments_p=TableFunctionArguments_a;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/TableFunction.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet TableFunction_i=class extends BaseRasterFunction_p{constructor(){super(...arguments),this.functionName=\"Table\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith(\"f\"))return{success:!1,supportsGPU:!1,error:\"table-function: Source data must be single band and integer pixel type.\"};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:\"table-function: Missing attributeTableAsRecordSet argument.\"};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,\"thematic\"!==s.dataType&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:\"thematic\"}:{DataType:\"thematic\"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0,name:\"rasterFunction\"}})],TableFunction_i.prototype,\"functionName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:TableFunctionArguments_p,json:{write:!0,name:\"rasterFunctionArguments\"}})],TableFunction_i.prototype,\"functionArguments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],TableFunction_i.prototype,\"rasterArgumentNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],TableFunction_i.prototype,\"isNoopProcess\",void 0),TableFunction_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterFunctions.TableFunction\")],TableFunction_i);const TableFunction_n=TableFunction_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterFunctionHelper.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst rasterFunctionHelper_F=new Map;function rasterFunctionHelper_j(t,e,r=[\"raster\"],n=\"\"){rasterFunctionHelper_F.set(t,{desc:n,ctor:e,rasterArgumentNames:r})}function rasterFunctionHelper_A(){const t=new Set;return rasterFunctionHelper_F.forEach(((e,r)=>t.add(r))),t}function rasterFunctionHelper_h(t,e){const{rasterFunctionArguments:r}=t;if(!r)return;(r.rasters||[r.raster]).forEach((t=>{t&&\"number\"!=typeof t&&(\"string\"==typeof t?t.startsWith(\"http\")&&(e.includes(t)||e.push(t)):\"rasterFunctionArguments\"in t&&rasterFunctionHelper_h(t,e))}))}function rasterFunctionHelper_(t,n){if(n=n??{},\"function\"in(t=(0,lang/* clone */.d9)(t))&&\"arguments\"in t&&t.arguments){const r=rasterFunctionHelper_V(t,new Map,n);if(rasterFunctionHelper_k(r),!r.renderingRule)throw new core_Error/* default */.Z(\"raster-function-helper\",\"Unsupported raster function json.\");t=r.renderingRule}if(\"rasterFunction\"in t)return rasterFunctionHelper_S(t=rasterFunctionHelper_N(t),n);throw new core_Error/* default */.Z(\"raster-function-helper\",\"unsupported raster function json.\")}function rasterFunctionHelper_R(t,e){return\"rasters\"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}function rasterFunctionHelper_C(t){return!!(t&&\"object\"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function rasterFunctionHelper_N(t){const{rasterFunction:e,rasterFunctionArguments:r}=t,n={};for(const o in r){let t=r[o];const e=o.toLowerCase();if(\"rasters\"===e&&Array.isArray(t))n.rasters=t.map((t=>rasterFunctionHelper_C(t)?rasterFunctionHelper_N(t):t));else switch(rasterFunctionHelper_C(t)&&(t=rasterFunctionHelper_N(t)),e){case\"dra\":n.dra=t;break;case\"pspower\":n.psPower=t;break;case\"pszfactor\":n.psZFactor=t;break;case\"bandids\":n.bandIds=t;break;default:n[o[0].toLowerCase()+o.slice(1)]=t}}return\"Local\"!==e||n.rasters?.length||(n.rasters=[\"$$\"]),{...t,rasterFunctionArguments:n}}function rasterFunctionHelper_S(t,r){const{rasterFunction:n,rasterFunctionArguments:o}=t,s=t.outputPixelType?.toLowerCase();if(null==n||!rasterFunctionHelper_F.has(n))throw new core_Error/* default */.Z(\"raster-function-helper\",`unsupported raster function: ${n}`);const a=rasterFunctionHelper_F.get(n),i=(\"function\"==typeof a.ctor?a.ctor:a.ctor.default).fromJSON({...t,outputPixelType:s}),{rasterArgumentNames:c}=i,u=[],m=rasterFunctionHelper_R(o,c),l=\"rasters\"===c[0],p=[];for(let e=0;e<m.length;e++){const t=m[e];let n;null==t||\"string\"==typeof t&&t.startsWith(\"$\")?u.push(r?.raster):\"string\"==typeof t?r[t]&&u.push(r[t]):\"number\"!=typeof t&&\"rasterFunction\"in t&&(n=rasterFunctionHelper_S(t,r),l||(i.functionArguments[c[e]]=n),u.push(n)),l&&p.push(n??t)}if(l&&(i.functionArguments.rasters=p),r){i.sourceRasters=u;const t=r.raster?.url;t&&(i.mainPrimaryRasterId=t)}return i}function rasterFunctionHelper_w(t,e){if(t&&e)for(const r in t){const n=t[r];n&&\"object\"==typeof n&&\"type\"in n&&(\"RasterFunctionTemplate\"===n.type?rasterFunctionHelper_w(n.arguments,e):\"RasterFunctionVariable\"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function rasterFunctionHelper_v(t,r){if(!t||\"object\"!=typeof t)return t;const{value:n}=t;if(!n||\"object\"!=typeof n)return t.isDataset?\"$$\":n;if(Array.isArray(n))return 0===n.length?[]:n.map((t=>\"object\"==typeof t&&\"RasterFunctionVariable\"===t.type?rasterFunctionHelper_v(t,r):t));if(\"value\"in n&&[\"number\",\"string\",\"boolean\"].includes(typeof n.value))return n.value;if(t.isDataset&&\"Scalar\"!==n.type)return\"$$\";if(!(\"type\"in n))return n;let o=n;switch(n.type){case\"Scalar\":o=n.value;break;case\"AlgorithmicColorRamp\":o=rasterFunctionHelper_D(n);break;case\"MultiPartColorRamp\":o={type:\"multipart\",colorRamps:n.ArrayOfColorRamp.map(rasterFunctionHelper_D)};break;case\"ArgumentArray\":if(n.elements?.length&&\"RasterStatistics\"!==n.elements[0].type){const t=[];for(let o=0;o<n.elements.length;o++){const s=n.elements[o],{type:a}=s;if(a)if(\"RasterFunctionTemplate\"===a){const{renderingRule:e}=rasterFunctionHelper_V(s,r);t.push(e),null!=s._object_id&&r.set(s._object_id,e)}else{if(\"RasterFunctionVariable\"!==a)throw new core_Error/* default */.Z(\"raster-function-helper\",\"unsupported raster function json.\");{const e=rasterFunctionHelper_v(s,r);t.push(e),null!=s._object_id&&r.set(s._object_id,e)}}else t.push(s)}o=t}else o=n.elements}return null!=n._object_id&&r.set(n._object_id,o),o}function rasterFunctionHelper_D(e){const r=e.algorithm??\"esriHSVAlgorithm\";let{FromColor:n,ToColor:o}=e;if(!Array.isArray(n)){const{r:e,g:r,b:o}=(0,colorUtils/* toRGB */.xr)({h:n.Hue,s:n.Saturation,v:n.Value});n=[e,r,o,n.AlphaValue]}if(!Array.isArray(o)){const{r:e,g:r,b:n}=(0,colorUtils/* toRGB */.xr)({h:o.Hue,s:o.Saturation,v:o.Value});o=[e,r,n,o.AlphaValue]}return{type:\"algorithmic\",algorithm:r,fromColor:n,toColor:o}}function rasterFunctionHelper_V(t,e,r){r&&rasterFunctionHelper_w(t,r);const n={renderingRule:{},templates:e};return rasterFunctionHelper_T(t,n),n}function rasterFunctionHelper_T(t,e){if(!t||!e.renderingRule)return;const{renderingRule:r,templates:n}=e,{function:o,arguments:s,_object_id:a}=t;if(!o||!s)return;null!=a&&n.set(a,r),r.rasterFunction=o.type.replace(\"Function\",\"\"),r.outputPixelType=o.pixelType;const i={};r.rasterFunctionArguments=i;for(const c in s){if(\"type\"===c||\"object_id\"===c||\"_object_ref_id\"===c)continue;const t=s[c];t&&\"object\"==typeof t&&\"type\"in t&&(\"RasterFunctionTemplate\"===t.type||\"RasterFunctionVariable\"===t.type)?(\"RasterFunctionVariable\"===t.type?i[c]=rasterFunctionHelper_v(t,n):(r.rasterFunctionArguments[c]={},rasterFunctionHelper_T(t,{renderingRule:r.rasterFunctionArguments[c],templates:n})),null!=t._object_id&&n.set(t._object_id,i[c])):i[c]=t}switch(i.DEM&&!i.Raster&&(i.Raster=i.DEM,delete i.DEM),r.rasterFunction){case\"Stretch\":rasterFunctionHelper_x(i);break;case\"Colormap\":rasterFunctionHelper_E(i);break;case\"Convolution\":rasterFunctionHelper_M(i);break;case\"Mask\":rasterFunctionHelper_$(i)}}function rasterFunctionHelper_k(t){const{renderingRule:r,templates:n}=t;if(\"object\"!=typeof r||!r?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:o}=r;for(const s in o){const t=o[s],r=\"_object_ref_id\"===s?t:t&&\"object\"==typeof t&&\"_object_ref_id\"in t?t._object_ref_id:null;if(null==r)t&&\"object\"==typeof t&&(t.rasterFunctionArguments&&rasterFunctionHelper_k({renderingRule:t,templates:n}),Array.isArray(t)&&t.forEach(((o,s)=>{if(\"object\"==typeof o)if(null!=o._object_ref_id){if(!n.has(o._object_ref_id))throw new core_Error/* default */.Z(\"raster-function-helper\",`unsupported raster function json. _object_ref_id: ${t} does not exist`);const a=n.get(r);a&&\"object\"==typeof a?Object.assign(o,a):t[s]=a}else rasterFunctionHelper_k({renderingRule:o,templates:n})})));else{if(!n.has(r))throw new core_Error/* default */.Z(\"raster-function-helper\",`unsupported raster function json. _object_ref_id: ${r} does not exist`);const t=n.get(r);\"_object_ref_id\"!==s?o[s]=t:t&&\"object\"==typeof t&&Object.assign(o,t)}}}function rasterFunctionHelper_x(t){t.Statistics?.length&&\"object\"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function rasterFunctionHelper_E(t){\"randomcolorramp\"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName=\"Random\"),0===t.ColorSchemeType&&delete t.ColorRamp}function rasterFunctionHelper_M(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function rasterFunctionHelper_$(t){t.NoDataValues?.length&&\"string\"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>\"\"!==t)).map((t=>Number(t))))}rasterFunctionHelper_F.set(\"Aspect\",{desc:\"Aspect Function\",ctor:AspectFunction_p,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"BandArithmetic\",{desc:\"Band Arithmetic Function\",ctor:BandArithmeticFunction_u,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"Colormap\",{desc:\"Colormap Function\",ctor:ColormapFunction_u,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"CompositeBand\",{desc:\"CompositeBand Function\",ctor:CompositeBandFunction_a,rasterArgumentNames:[\"rasters\"]}),rasterFunctionHelper_F.set(\"Convolution\",{desc:\"Convolution Function\",ctor:ConvolutionFunction_l,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"ExtractBand\",{desc:\"ExtractBand Function\",ctor:ExtractBandFunction_l,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"Curvature\",{desc:\"Curvature Function\",ctor:CurvatureFunction_a,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"Local\",{desc:\"Local Function\",ctor:LocalFunction_l,rasterArgumentNames:[\"rasters\"]}),rasterFunctionHelper_F.set(\"Mask\",{desc:\"Mask Function\",ctor:MaskFunction_p,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"NDVI\",{desc:\"NDVI Function\",ctor:NDVIFunction_a,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"Remap\",{desc:\"Remap Function\",ctor:RemapFunction_g,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"Slope\",{desc:\"Slope Function\",ctor:SlopeFunction_c,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"StatisticsHistogram\",{desc:\"Statistics Histogram Function\",ctor:StatisticsHistogramFunction_n,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"Stretch\",{desc:\"Stretch Function\",ctor:StretchFunction_m,rasterArgumentNames:[\"raster\"]}),rasterFunctionHelper_F.set(\"Table\",{desc:\"Attribute Table Function\",ctor:TableFunction_n,rasterArgumentNames:[\"raster\"]});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1099\n");

/***/ }),

/***/ 18486:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hq: () => (/* binding */ Q),\n/* harmony export */   Mk: () => (/* binding */ d),\n/* harmony export */   P_: () => (/* binding */ V),\n/* harmony export */   Qp: () => (/* binding */ $),\n/* harmony export */   VO: () => (/* binding */ C),\n/* harmony export */   Wt: () => (/* binding */ J),\n/* harmony export */   _D: () => (/* binding */ T),\n/* harmony export */   kZ: () => (/* binding */ ne),\n/* harmony export */   kr: () => (/* binding */ ie),\n/* harmony export */   nF: () => (/* binding */ _),\n/* harmony export */   tB: () => (/* binding */ q),\n/* harmony export */   ut: () => (/* binding */ K),\n/* harmony export */   vF: () => (/* binding */ oe),\n/* harmony export */   zD: () => (/* binding */ k)\n/* harmony export */ });\n/* unused harmony exports defaultGridSpacing, defaultProjectionToleranceInPixels, getProjectedGridPoints, minimumGridSpacing */\n/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(91957);\n/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7753);\n/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(70375);\n/* harmony import */ var _core_unitUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(17321);\n/* harmony import */ var _chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(96926);\n/* harmony import */ var _geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(92376);\n/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(91772);\n/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(67666);\n/* harmony import */ var _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(89542);\n/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(14685);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar y;function d(e,t,n){return!(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .canProjectWithoutEngine */ .Up)(e,t,n)}function M(e,n,i){const o=d(e,n,i);if(o&&!(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .isLoaded */ .kR)())throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z(\"rasterprojectionhelper-project\",\"projection engine is not loaded\");return o}!function(e){e[e.None=0]=\"None\",e[e.North=1]=\"North\",e[e.South=2]=\"South\",e[e.Both=3]=\"Both\"}(y||(y={}));const w=(e,t,n,i=0)=>{if(1===n[0])return[0,0];let o=1,r=-1,s=1,a=-1;for(let g=0;g<e.length;g+=2)isNaN(e[g])||(o=o>e[g]?e[g]:o,r=r>e[g]?r:e[g],s=s>e[g+1]?e[g+1]:s,a=a>e[g+1]?a:e[g+1]);const{cols:l,rows:c}=t,f=(r-o)/l/n[0],u=(a-s)/c/n[1],m=2*i;let x=0,h=!1,p=[0,0];for(let g=0;g<l-3;g++){for(let t=0;t<c-3;t++){const n=g*c*2+2*t,i=(e[n]+e[n+4]+e[n+4*c]+e[n+4*c+4])/4,o=(e[n+1]+e[n+5]+e[n+4*c+1]+e[n+4*c+5])/4,r=Math.abs((i-e[n+2*c+2])/f),s=Math.abs((o-e[n+2*c+3])/u);if(r+s>x&&(x=r+s,p=[r,s]),m&&x>m){h=!0;break}}if(h)break}return p},R={3395:20037508.342789244,3410:17334193.943686873,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53034:20015086.79602057,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54034:20037508.342789244,54079:20037508.342789244,54080:20037508.342789244,54100:20037508.342789244,54101:20037508.342789244},S=32,P=4,b=P,G=new Map,N=new Map,E=500;async function k(){(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .isLoaded */ .kR)()||await (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .load */ .zD)()}function T(e,t,n){M(e.spatialReference,t);return n?(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .getTransformation */ .rS)(t,e.spatialReference,e):(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .getTransformation */ .rS)(e.spatialReference,t,e)}function C(e,t,i,o=null){const r=e.spatialReference;if(r.equals(t))return e;M(r,t,o);const s=i.center,a=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z({xmin:s.x-e.x/2,xmax:s.x+e.x/2,ymin:s.y-e.y/2,ymax:s.y+e.y/2,spatialReference:r}),l=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .project */ .iV)(a,t,o),c=K(t);let f;if(null==l||null!=c&&l.width>=c){const i=(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_3__/* .getMetersPerUnitForSR */ .c9)(r)/(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_3__/* .getMetersPerUnitForSR */ .c9)(t);f={x:e.x*i,y:e.y*i}}else f={x:l.width,y:l.height};return f}function v(e,t=.01){return (0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_3__/* .getMetersPerUnitForSR */ .c9)(e)?t/(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_3__/* .getMetersPerUnitForSR */ .c9)(e):0}function _(e,t,n=null,i=!0){const o=e.spatialReference;if(o.equals(t))return e;M(o,t,n);const r=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .project */ .iV)(e,t,n);return i&&r?(j([e],[r],o,t),r):r}function j(e,t,n,i){const o=D(n,!0),r=D(i,!0),s=v(n,E),a=v(i,E);if(s&&null!=o&&null!=r)for(let l=0;l<e.length;l++){const n=t[l];if(!n)continue;const{x:i}=e[l],{x:c}=n;c>=r[1]-a&&Math.abs(i-o[0])<s?n.x-=r[1]-r[0]:c<=r[0]+a&&Math.abs(i-o[1])<s&&(n.x+=r[1]-r[0])}}function z(e){const{inSR:t,outSR:n,datumTransformation:i,preferPE:o}=e;if(t.equals(n)){const{points:t}=B(e,null);return t}if(t.isWebMercator&&n.isWGS84||t.isWGS84&&n.isWebMercator)return O(e);if(M(t,n,i)&&o){if(t.isGeographic)return W(e);if(null!=I(t))return W(e)}return L(e)}function L(e){const{points:t}=B(e,null),{inSR:n,outSR:i,datumTransformation:o}=e,r=t.map((e=>new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z(e[0],e[1],n))),s=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .project */ .iV)(r,i,o);return o&&j(r,s,n,i),s.map((e=>e?[e.x,e.y]:[NaN,NaN]))}function W(e){const{inSR:t,outSR:n,datumTransformation:a}=e,l=I(t),{points:c,mask:f}=B(e,l);if(!t.isGeographic){const e=t.wkid?_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.coordsys(t.wkid):_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.fromString(t.isGeographic?_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TYPE_GEOGCS:_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TYPE_PROJCS,t.wkt);_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.g.projToGeog(e,c.length,c)}if(null!=a&&a.steps.length){let e;const t=179.9955;if(n.isGeographic&&(e=c.map((([e])=>e>t?1:e<-t?-1:0))),a.steps.forEach((e=>{const t=e.wkid?_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.geogtran(e.wkid):_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.fromString(_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TYPE_GEOGTRAN,e.wkt);_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.h.geogToGeog(t,c.length,c,null,e.isInverse?_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TRANSFORM_2_TO_1:_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TRANSFORM_1_TO_2)})),e)for(let n=0;n<c.length;n++){const i=e[n],o=c[n][0],r=o>t?1:o<-t?-1:0;i&&r&&i!==r&&(c[n][0]=i>0?o+360:o-360)}}if(!n.isGeographic){const e=I(n,!0),t=null!=e&&e.isEnvelope?[e.bbox[1],e.bbox[3]]:[-90,90];F(c,t);const s=n.wkid?_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.coordsys(n.wkid):_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.fromString(n.isGeographic?_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TYPE_GEOGCS:_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TYPE_PROJCS,n.wkt);_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.g.geogToProj(s,c.length,c)}let u=c;if(f&&c.length!==f.length){u=[];for(let e=0,t=0;e<f.length;e++)f[e]?u.push(c[t++]):u.push([NaN,NaN])}return u}function O(e){const{cols:t,rows:n,xres:i,yres:o,usePixelCenter:r,inSR:s,outSR:a}=e;let{xmin:l,ymax:c}=e;r&&(l+=i/2,c-=o/2);const f=[],u=[],x=Math.max(t,n);for(let g=0;g<x;g++){const e=l+i*Math.min(t,g),r=c-o*Math.min(n,g),x=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .project */ .iV)(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z({x:e,y:r,spatialReference:s}),a);g<=t&&f.push(x.x),g<=n&&u.push(x.y)}const p=[];for(let m=0;m<t;m++)for(let e=0;e<n;e++)p.push([f[m],u[e]]);return p}function I(e,t=!1){let n=e.wkid||e.wkt;if(!n||e.isGeographic)return null;if(n=String(n),G.has(n)){const e=G.get(n);return t?e?.gcs:e?.pcs}const r=e.wkid?_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.coordsys(e.wkid):_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.fromString(e.isGeographic?_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TYPE_GEOGCS:_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TYPE_PROJCS,e.wkt),s=A(r,v(e,1e-4)),a=A(r,0,!0);return G.set(n,{pcs:s,gcs:a}),t?a:s}function A(e,t=0,n=!1){const i=_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.j.generate(e),o=n?e.horizonGcsGenerate():e.horizonPcsGenerate();if(!i||!o?.length)return null;let r=!1,s=o.find((e=>1===e.getInclusive()&&1===e.getKind()));if(!s){if(s=o.find((e=>1===e.getInclusive()&&0===e.getKind())),!s)return null;r=!0}const l=n?0:(2===i.getNorthPoleLocation()?1:0)|(2===i.getSouthPoleLocation()?2:0),c=i.isPannableRectangle(),f=s.getCoord();if(r)return{isEnvelope:r,isPannable:c,vertices:f,coef:null,bbox:[f[0][0]-t,f[0][1]-t,f[1][0]+t,f[1][1]+t],poleLocation:l};let u=0;const m=[];let[x,h]=f[0],[p,g]=f[0];for(let a=0,y=f.length;a<y;a++){u++,u===y&&(u=0);const[e,t]=f[a],[n,i]=f[u];if(i===t)m.push([e,n,t,i,2]);else{const o=(n-e)/(i-t||1e-4),r=e-o*t;t<i?m.push([o,r,t,i,0]):m.push([o,r,i,t,1])}x=x<e?x:e,h=h<t?h:t,p=p>e?p:e,g=g>t?g:t}return{isEnvelope:!1,isPannable:c,vertices:f,coef:m,bbox:[x,h,p,g],poleLocation:l}}function B(e,t){const n=[],{cols:i,rows:o,xres:r,yres:s,usePixelCenter:a}=e;let{xmin:l,ymax:c}=e;if(a&&(l+=r/2,c-=s/2),null==t){for(let e=0;e<i;e++)for(let t=0;t<o;t++)n.push([l+r*e,c-s*t]);return{points:n}}const f=new Uint8Array(i*o);if(t.isEnvelope){const{bbox:[e,a,u,m]}=t;for(let x=0,h=0;x<i;x++){const i=l+r*x,p=t.isPannable||i>=e&&i<=u;for(let e=0;e<o;e++,h++){const t=c-s*e;p&&t>=a&&t<=m&&(n.push([i,t]),f[h]=1)}}return{points:n,mask:f}}const u=t.coef,m=[];for(let x=0;x<o;x++){const e=c-s*x,t=[],n=[];for(let o=0;o<u.length;o++){const[i,r,s,a,l]=u[o];if(e===s&&s===a)t.push(i),t.push(r),n.push(2),n.push(2);else if(e>=s&&e<=a){const o=i*e+r;t.push(o),n.push(l)}}let i=t;if(t.length>2){let e=2===n[0]?0:n[0],o=t[0];i=[];for(let r=1;r<n.length;r++)2===n[r]&&r!==n.length-1||(n[r]!==e&&(i.push(0===e?Math.min(o,t[r-1]):Math.max(o,t[r-1])),e=n[r],o=t[r]),r===n.length-1&&i.push(0===n[r]?Math.min(o,t[r]):Math.max(o,t[r])));i.sort(((e,t)=>e-t))}else t[0]>t[1]&&(i=[t[1],t[0]]);m.push(i)}for(let x=0,h=0;x<i;x++){const e=l+r*x;for(let t=0;t<o;t++,h++){const i=c-s*t,o=m[t];if(2===o.length)e>=o[0]&&e<=o[1]&&(n.push([e,i]),f[h]=1);else if(o.length>2){let t=!1;for(let n=0;n<o.length;n+=2)if(e>=o[n]&&e<=o[n+1]){t=!0;break}t&&(n.push([e,i]),f[h]=1)}}}return{points:n,mask:f}}function F(e,t){const[n,i]=t;for(let o=0;o<e.length;o++){const t=e[o][1];(t<n||t>i)&&(e[o]=[NaN,NaN])}}function Y(e){const t=K(e[0].spatialReference);if(e.length<2||null==t)return e[0];const n=v(e[0].spatialReference);if(1===(e=e.filter((e=>e.width>n))).length)return e[0];let{xmin:i,xmax:o,ymin:r,ymax:s}=e[0];for(let a=1;a<e.length;a++){const n=e[a];o=n.xmax+t*a,r=Math.min(r,n.ymin),s=Math.max(s,n.ymax)}return new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z({xmin:i,xmax:o,ymin:r,ymax:s,spatialReference:e[0].spatialReference})}function q(t,n,i=null,o=!0){const r=t.spatialReference;if(r.equals(n))return t;const s=Q(t),a=K(r,!0),l=K(n);if(0===s||null==a||null==l){const e=X(t,n,i,o);if(null==a&&null!=l&&Math.abs(e.width-l)<v(n)&&(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .isLoaded */ .kR)()){const i=I(r);if(null!=i&&i.poleLocation===y.None&&t.width<(i.bbox[2]-i.bbox[0])/2)return U(t,n)||e}return e}const f=t.clone().normalize();if(1===f.length&&t.xmax<a&&t.xmax-a/2>v(r)){const{xmin:e,xmax:n}=t;for(let i=0;i<=s;i++){const o=0===i?e:-a/2,l=i===s?n-a*i:a/2;f[i]=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z({xmin:o,xmax:l,ymin:t.ymin,ymax:t.ymax,spatialReference:r})}}return Y(f.map((e=>X(e,n,i,o))).filter(_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_1__/* .isSome */ .pC))}function J(e,t,n){if(\"extent\"===e.type){const{xmin:t,ymin:n,xmax:i,ymax:o,spatialReference:r}=e;e=new _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z({rings:[[[t,o],[i,o],[i,n],[t,n],[t,o]]],spatialReference:r})}return e.spatialReference.equals(t)?e:(M(e.spatialReference,t,n),(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .project */ .iV)(e,t,n))}function U(e,t){const n=K(t);if(null==n)return null;let{xmin:i,ymin:o,xmax:r,ymax:s}=e;const a=e.spatialReference,l=new _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z({spatialReference:a,rings:[[[i,o],[r,o],[r,s],[i,s],[i,o]]]}),c=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .project */ .iV)(l,t);if(2!==c.rings.length||!c.rings[0].length||!c.rings[1].length)return null;const{rings:f}=c,u=v(a),h=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z({spatialReference:t});for(let m=0;m<2;m++){i=r=f[m][0][0],o=s=f[m][0][1];for(let e=0;e<f[m].length;e++)i=i>f[m][e][0]?f[m][e][0]:i,r=r<f[m][e][0]?f[m][e][0]:r,o=o>f[m][e][1]?f[m][e][1]:o,s=s<f[m][e][1]?f[m][e][1]:s;if(0===m)h.ymin=o,h.ymax=s,h.xmin=i,h.xmax=r;else if(h.ymin=Math.min(h.ymin,o),h.ymax=Math.max(h.ymax,s),Math.abs(r-n/2)<u)h.xmin=i,h.xmax=h.xmax+n;else{if(!(Math.abs(i+n/2)<u))return null;h.xmax=r+n}}return h}function X(e,t,n=null,i=!0,o=!0){const r=e.spatialReference;if(r.equals(t)||!t)return e;M(r,t,n);const s=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_5__/* .project */ .iV)(e,t,n);if(o&&t.isWebMercator&&s&&(s.ymax=Math.min(20037508.342787,s.ymax),s.ymin=Math.max(-20037508.342787,s.ymin),s.ymin>=s.ymax))return null;if(!i||!s)return s;const a=D(r,!0),l=D(t,!0);if(null==a||null==l)return s;const c=v(r,.001),f=v(r,E),u=v(t,.001);if(Math.abs(s.xmin-l[0])<u&&Math.abs(s.xmax-l[1])<u){const i=Math.abs(e.xmin-a[0]),o=Math.abs(a[1]-e.xmax);if(i<c&&o>f){s.xmin=l[0];const i=[];i.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z(e.xmax,e.ymin,r)),i.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z(e.xmax,(e.ymin+e.ymax)/2,r)),i.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z(e.xmax,e.ymax,r));const o=i.map((e=>_(e,t,n))).filter((e=>!isNaN(e?.x))).map((e=>e.x));s.xmax=Math.max.apply(null,o)}if(o<c&&i>f){s.xmax=l[1];const i=[];i.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z(e.xmin,e.ymin,r)),i.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z(e.xmin,(e.ymin+e.ymax)/2,r)),i.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z(e.xmin,e.ymax,r));const o=i.map((e=>_(e,t,n))).filter((e=>!isNaN(e?.x))).map((e=>e.x));s.xmin=Math.min.apply(null,o)}}else{const e=v(t,.001);Math.abs(s.xmin-l[0])<e&&(s.xmin=l[0]),Math.abs(s.xmax-l[1])<e&&(s.xmax=l[1])}return s}function K(e,t=!1){if(!e)return null;const n=t?20037508.342787:20037508.342788905;return e.isWebMercator?2*n:e.wkid&&e.isGeographic?360:2*R[e.wkid]||null}function D(e,t=!1){if(e.isGeographic)return[-180,180];const n=K(e,t);return null!=n?[-n/2,n/2]:null}function H(e,t,n,i){let o=(e-t)/n;return o-Math.floor(o)!=0?o=Math.floor(o):i&&(o-=1),o}function Q(e,t=!1){const n=K(e.spatialReference);if(null==n)return 0;const i=t?0:-(n/2),o=v(e.spatialReference),r=!t&&Math.abs(e.xmax-n/2)<o?n/2:e.xmax,s=!t&&Math.abs(e.xmin+n/2)<o?-n/2:e.xmin;return H(r,i,n,!0)-H(s,i,n,!1)}function V(e){const t=e.storageInfo.origin.x,n=K(e.spatialReference,!0);if(null==n)return{originX:t,halfWorldWidth:null,pyramidsInfo:null};const i=n/2,{nativePixelSize:o,storageInfo:r,extent:s}=e,{maximumPyramidLevel:a,blockWidth:l,pyramidScalingFactor:c}=r;let f=o.x;const u=[],m=null!=e.transform&&\"gcs-shift\"===e.transform.type,x=t+(m?0:i),h=m?n-t:i-t;for(let p=0;p<=a;p++){const e=(s.xmax-t)/f/l,n=e-Math.floor(e)==0?e:Math.ceil(e),i=h/f/l,o=i-Math.floor(i)==0?i:Math.ceil(i),r=Math.floor(x/f/l),a=Math.round(x/f)%l,m=(l-Math.round(h/f)%l)%l;u.push({resolutionX:f,blockWidth:l,datsetColumnCount:n,worldColumnCountFromOrigin:o,leftMargin:a,rightPadding:m,originColumnOffset:r}),f*=c}return{originX:t,halfWorldWidth:i,pyramidsInfo:u,hasGCSSShiftTransform:m}}function Z(e){if(!e||e.isGeographic)return e;const t=String(e.wkid||e.wkt);let n;if(N.has(t))n=N.get(t);else{n=(e.wkid?_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.coordsys(e.wkid):_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.e.fromString(_chunks_pe_js__WEBPACK_IMPORTED_MODULE_4__.f.PE_TYPE_PROJCS,e.wkt)).getGeogcs().getCode(),N.set(t,n)}return new _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_9__/* [\"default\"] */ .Z({wkid:n})}function $(e){const t=e.isAdaptive&&null==e.spacing;let n=e.spacing||[S,S],i=ee(e),o={cols:i.size[0]+1,rows:i.size[1]+1};const r=i.outofBoundPointCount>0&&i.outofBoundPointCount<i.offsets.length/2;let s=i.outofBoundPointCount===i.offsets.length/2||t&&r?[0,0]:w(i.offsets,o,n,b);const a=(s[0]+s[1])/2,l=e.projectedExtent.spatialReference,c=e.srcBufferExtent.spatialReference;if(t&&(r||a>b)){d(l,c,e.datumTransformation)&&(l.isGeographic||I(l)),n=[P,P],i=ee({...e,spacing:n}),o={cols:i.size[0]+1,rows:i.size[1]+1},s=w(i.offsets,o,n,b)}if(i.error=s,n[0]>1&&(i.coefficients=te(i.offsets,o,r)),e.includeGCSGrid&&!l.isGeographic&&!l.isWebMercator)if(c.isGeographic)i.gcsGrid={offsets:i.offsets,coefficients:i.coefficients,spacing:n};else{const t=I(l);if(null!=t&&!t.isEnvelope){const t=Z(l),s=q(e.projectedExtent,t),{offsets:a}=ee({...e,srcBufferExtent:s,spacing:n}),c=te(a,o,r);i.gcsGrid={offsets:a,coefficients:c,spacing:n}}}return i}function ee(e){const{projectedExtent:t,srcBufferExtent:n,pixelSize:i,datumTransformation:o,rasterTransform:r}=e,s=t.spatialReference,a=n.spatialReference,l=M(s,a),{xmin:c,ymin:f,xmax:u,ymax:m}=t,x=K(a),p=null!=x&&(e.hasWrapAround||\"gcs-shift\"===r?.type),g=e.spacing||[S,S],y=g[0]*i.x,d=g[1]*i.y,w=1===g[0],R=Math.ceil((u-c)/y-.1/g[0])+(w?0:1),b=Math.ceil((m-f)/d-.1/g[1])+(w?0:1),G=z({cols:R,rows:b,xmin:c,ymax:m,xres:y,yres:d,inSR:s,outSR:a,datumTransformation:o,preferPE:g[0]<=P,usePixelCenter:w}),N=[];let k,T=0;const C=w?-1:NaN,{xmin:_,xmax:j,ymax:L,width:W,height:O}=n,A=v(a,E),B=null!=x&&_>0&&j>x/2;let F=!1;if(l){const e=I(s);F=null!=e&&e.poleLocation>0}for(let M=0;M<R;M++){const e=[];for(let t=0;t<b;t++){let n=G[M*b+t];if(p&&n[0]>j&&n[0]>x/2-A?n[0]-=x:p&&0===M&&n[0]<0&&B&&!r&&(n[0]+=x),!n||isNaN(n[0])||isNaN(n[1]))N.push(C),N.push(C),e.push(null),T++;else{if(r){const e=r.inverseTransform(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z({x:n[0],y:n[1],spatialReference:a}));n=[e.x,e.y]}e.push(n),M>0&&p&&k[t]&&n[0]<k[t][0]&&(n[0]+=x,F&&n[0]>j&&n[0]>x&&(n[0]-=x)),N.push((n[0]-_)/W),N.push((L-n[1])/O)}}k=e}return{offsets:N,error:null,coefficients:null,outofBoundPointCount:T,spacing:g,size:w?[R,b]:[R-1,b-1]}}function te(e,t,n){const{cols:i,rows:o}=t,r=new Float32Array((i-1)*(o-1)*2*6),s=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),a=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let l=0;l<i-1;l++){for(let t=0;t<o-1;t++){let n=l*o*2+2*t;const c=e[n],f=e[n+1],u=e[n+2],m=e[n+3];n+=2*o;const x=e[n],h=e[n+1],p=e[n+2],g=e[n+3];let y=0,d=12*(t*(i-1)+l);for(let e=0;e<3;e++)r[d++]=s[y++]*c+s[y++]*u+s[y++]*p;y=0;for(let e=0;e<3;e++)r[d++]=s[y++]*f+s[y++]*m+s[y++]*g;y=0;for(let e=0;e<3;e++)r[d++]=a[y++]*c+a[y++]*x+a[y++]*p;y=0;for(let e=0;e<3;e++)r[d++]=a[y++]*f+a[y++]*h+a[y++]*g}if(n)for(let e=0;e<r.length;e++)isNaN(r[e])&&(r[e]=-1)}return r}function ne(e){const t=e.clone().normalize();return 1===t.length?t[0]:Y(t)}function ie(e,t,i){const{storageInfo:o,pixelSize:r}=t;let s=0,a=!1;const{pyramidResolutions:l}=o,c=\"mixed\"===o.tileInfo.format?.toLowerCase()?Math.max(1,Math.min(3,o.tileInfo.dpi/96)):1,f=(e.x+e.y)/2/c;if(null!=l&&l.length){const e=l[l.length-1],o=(e.x+e.y)/2,c=(r.x+r.y)/2;if(f<=c)s=0;else if(f>=o)s=l.length,a=f/o>8;else{let e,t=c;for(let n=1;n<=l.length;n++){if(e=(l[n-1].x+l[n-1].y)/2,f<=e){f===e?s=n:\"down\"===i?(s=n-1,a=f/t>8):s=\"up\"===i||f-t>e-f||f/t>2?n:n-1;break}t=e}}const u=0===s?r:l[s-1];if(a){Math.min(u.x,u.y)*(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_3__/* .getMetersPerUnitForSR */ .c9)(t.spatialReference)>19567&&(a=!1)}return{pyramidLevel:s,pyramidResolution:new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z({x:u.x,y:u.y,spatialReference:t.spatialReference}),excessiveReading:a}}const u=Math.log(e.x/r.x)/Math.LN2,m=Math.log(e.y/r.y)/Math.LN2,x=t.storageInfo.maximumPyramidLevel||0;s=\"down\"===i?Math.floor(Math.min(u,m)):\"up\"===i?Math.ceil(Math.max(u,m)):Math.round((u+m)/2),s<0?s=0:s>x&&(a=s>x+3,s=x);const p=2**s;return{pyramidLevel:s,pyramidResolution:new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z({x:p*t.nativePixelSize.x,y:p*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:a}}function oe(e,t,i){const o=i?.tileSize??512,r=i?.alignGlobalDatasetWithAGOL??!0,s=!!i?.limitToSrcResolution,{extent:a,spatialReference:l,pixelSize:c}=e,f=C(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z({x:c.x,y:c.y,spatialReference:l}),t,a);if(null==f)return{projectedPixelSize:null,scales:null,srcResolutions:null,isCustomTilingScheme:!1};const u=(f.x+f.y)/2,m=(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_3__/* .getMetersPerUnitForSR */ .c9)(t),x=u*m*96*39.37,p=t.isGeographic?256/o*295828763.7958547:256/o*591657527.591555;let g=\"vector-magdir\"===e.dataType||\"vector-uv\"===e.dataType;const y=q(a,t),d=Math.min(Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2),Math.ceil(Math.log(p/2/x)/Math.LN2));if(!g&&r&&(t.isGeographic||t.isWebMercator)&&(g=y.xmin*y.xmax<0,!g&&d<3)){const e=K(t);if(null!=e){const t=2**d*u*o,n=Math.ceil(e/t);g=1===n||2===n&&e/2-y.xmax<t}}let M,w=x;const R=1.001,S=Math.min(2,Math.max(1.414,e.storageInfo?.pyramidScalingFactor||2));if(g){w=p;const e=t.isGeographic?1341104507446289e-21:.29858214164761665,n=e*(96*m*39.37),i=t.isGeographic?4326:3857;M=C(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z({x:e,y:e,spatialReference:{wkid:i}}),l,y),M.x*=w/n,M.y*=w/n}else{M={x:c.x,y:c.y};let e=0;for(;w<p*(R/2)&&e<d;)e++,w*=S,M.x*=S,M.y*=S;Math.max(w,p)/Math.min(w,p)<=R&&(w=p)}const P=[w],b=[{x:M.x,y:M.y}],G=70.5310735,N=Math.min(G,x)/R;for(;w>=N;)w/=S,M.x/=S,M.y/=S,P.push(w),b.push({x:M.x,y:M.y});if(s){const e=.001*c.x;let t=b.findIndex((t=>t.x>=c.x-e&&t.x<=c.x+e));t>-1?(b.length=t+1,P.length=t+1):(t=b.findIndex((t=>t.x<=c.x+e)),t>0&&(b.length=t,P.length=t))}return{projectedPixelSize:f,scales:P,srcResolutions:b,isCustomTilingScheme:!g}}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg0ODYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDNmpCLE1BQU0sa0JBQWtCLE9BQU8sMEZBQUMsUUFBUSxrQkFBa0IsaUJBQWlCLE9BQU8sMkVBQUMsYUFBYSwrREFBQyxxRUFBcUUsU0FBUyxhQUFhLGdGQUFnRixTQUFTLEdBQUcsc0JBQXNCLHdCQUF3QixzQkFBc0IsWUFBWSxXQUFXLDRGQUE0RixNQUFNLGNBQWMsdUNBQXVDLHFCQUFxQixZQUFZLE1BQU0sS0FBSyxZQUFZLE1BQU0sS0FBSyw0SkFBNEosa0NBQWtDLEtBQUssT0FBTyxXQUFXLFNBQVMsSUFBSSwrcUJBQStxQix3Q0FBd0MsbUJBQW1CLDJFQUFDLFVBQVUsdUVBQUMsR0FBRyxrQkFBa0Isd0JBQXdCLFNBQVMsb0ZBQUMseUJBQXlCLG9GQUFDLHlCQUF5Qix5QkFBeUIsMkJBQTJCLHdCQUF3QixTQUFTLHVCQUF1QixvRUFBQyxFQUFFLCtFQUErRSxJQUFJLDBFQUFDLGVBQWUsTUFBTSxpQ0FBaUMsUUFBUSxtRkFBQyxJQUFJLG1GQUFDLElBQUksR0FBRyxpQkFBaUIsUUFBUSxzQkFBc0IsU0FBUyxvQkFBb0IsT0FBTyxtRkFBQyxNQUFNLG1GQUFDLE1BQU0sNEJBQTRCLDJCQUEyQix3QkFBd0IsU0FBUyxRQUFRLDBFQUFDLFFBQVEsaUNBQWlDLG9CQUFvQiw0Q0FBNEMsbUNBQW1DLFdBQVcsS0FBSyxhQUFhLGVBQWUsTUFBTSxJQUFJLE9BQU8sSUFBSSxHQUFHLDhGQUE4RixjQUFjLE1BQU0sZ0RBQWdELEdBQUcsZ0JBQWdCLE1BQU0sU0FBUyxXQUFXLFNBQVMsc0VBQXNFLGdCQUFnQiw4QkFBOEIsMEJBQTBCLFlBQVksY0FBYyxNQUFNLFNBQVMsWUFBWSxxQ0FBcUMsbUJBQW1CLG1FQUFDLGtCQUFrQiwwRUFBQyxRQUFRLHVEQUF1RCxjQUFjLE1BQU0scUNBQXFDLFdBQVcsZ0JBQWdCLFFBQVEsb0JBQW9CLGVBQWUsNENBQUMsa0JBQWtCLDRDQUFDLDJCQUEyQiw0Q0FBQyxnQkFBZ0IsNENBQUMsdUJBQXVCLDRDQUFDLDBCQUEwQiw0QkFBNEIsTUFBTSxpQkFBaUIsNEVBQTRFLGVBQWUsNENBQUMsa0JBQWtCLDRDQUFDLFlBQVksNENBQUMseUJBQXlCLDRDQUFDLDBDQUEwQyw0Q0FBQyxxQkFBcUIsNENBQUMsc0JBQXNCLGlCQUFpQixXQUFXLEtBQUsseUNBQXlDLHdDQUF3QyxvQkFBb0IsdUVBQXVFLE9BQU8sZUFBZSw0Q0FBQyxrQkFBa0IsNENBQUMsMkJBQTJCLDRDQUFDLGdCQUFnQiw0Q0FBQyx1QkFBdUIsNENBQUMsMEJBQTBCLFFBQVEsMkJBQTJCLEtBQUssZ0JBQWdCLFdBQVcsMENBQTBDLFNBQVMsY0FBYyxNQUFNLDREQUE0RCxHQUFHLElBQUksY0FBYyxHQUFHLG1CQUFtQixnQ0FBZ0MsWUFBWSxJQUFJLEtBQUssZ0RBQWdELDBFQUFDLEtBQUssbUVBQUMsRUFBRSwyQkFBMkIsS0FBSyxvQ0FBb0MsV0FBVyxZQUFZLElBQUksZ0JBQWdCLElBQUksd0JBQXdCLFNBQVMsbUJBQW1CLG9CQUFvQixrQ0FBa0MseUJBQXlCLGlCQUFpQix1QkFBdUIsZUFBZSw0Q0FBQyxrQkFBa0IsNENBQUMsMkJBQTJCLDRDQUFDLGdCQUFnQiw0Q0FBQyxvREFBb0QsZ0JBQWdCLFlBQVksUUFBUSx1QkFBdUIsUUFBUSw0Q0FBQywrREFBK0QsOEJBQThCLDhEQUE4RCxPQUFPLHVFQUF1RSxLQUFLLDJIQUEySCxZQUFZLDhHQUE4RyxRQUFRLFdBQVcseUJBQXlCLHVCQUF1QixJQUFJLEtBQUssaUJBQWlCLDJCQUEyQiw2QkFBNkIsS0FBSyxrQ0FBa0MsNENBQTRDLHdDQUF3QyxPQUFPLDRFQUE0RSxnQkFBZ0IsWUFBWSw2Q0FBNkMsR0FBRyxJQUFJLGNBQWMsR0FBRywrQkFBK0IsWUFBWSxJQUFJLGdCQUFnQixJQUFJLDBCQUEwQixPQUFPLFVBQVUsNEJBQTRCLGlCQUFpQixNQUFNLGVBQWUsR0FBRyxnQkFBZ0IsSUFBSSxLQUFLLHlDQUF5QyxZQUFZLElBQUksU0FBUyxjQUFjLHVDQUF1QyxPQUFPLGlCQUFpQixvQkFBb0IsWUFBWSxJQUFJLEtBQUssd0JBQXdCLFlBQVksV0FBVyxLQUFLLHNCQUFzQix3REFBd0Qsb0JBQW9CLGNBQWMscUJBQXFCLFFBQVEsZUFBZSw2QkFBNkIsS0FBSyxZQUFZLFdBQVcsaUxBQWlMLHFCQUFxQixnQ0FBZ0MsVUFBVSxnQkFBZ0IsSUFBSSxLQUFLLGNBQWMsWUFBWSxJQUFJLFNBQVMscUJBQXFCLHlEQUF5RCxvQkFBb0IsU0FBUyxZQUFZLFdBQVcsNEJBQTRCLEtBQUssTUFBTSw0QkFBNEIsT0FBTyxpQkFBaUIsZ0JBQWdCLGFBQWEsWUFBWSxXQUFXLEtBQUssZ0JBQWdCLDhCQUE4QixjQUFjLGlDQUFpQyxtQ0FBbUMsaUNBQWlDLHVEQUF1RCxJQUFJLDRCQUE0QixNQUFNLFlBQVksV0FBVyxLQUFLLGFBQWEsdURBQXVELFdBQVcsb0VBQUMsRUFBRSxtRUFBbUUsRUFBRSw0QkFBNEIsMkJBQTJCLHdCQUF3Qiw4QkFBOEIsNEJBQTRCLG1CQUFtQiwrQ0FBK0MsMkVBQUMsSUFBSSxhQUFhLHNGQUFzRixTQUFTLDhCQUE4Qiw0Q0FBNEMsTUFBTSxjQUFjLEdBQUcsWUFBWSxLQUFLLEtBQUssdUNBQXVDLFNBQVMsb0VBQUMsRUFBRSx5REFBeUQsR0FBRyx1Q0FBdUMsaUVBQUMsR0FBRyxrQkFBa0Isc0JBQXNCLE1BQU0sK0NBQStDLEdBQUcsTUFBTSxxRUFBQyxFQUFFLDJEQUEyRCxFQUFFLGlFQUFpRSwwRUFBQyxTQUFTLGdCQUFnQixhQUFhLHVCQUF1QixJQUFJLDRCQUE0QixHQUFHLGlDQUFpQyxxRUFBQyxFQUFFLDJEQUEyRCxJQUFJLDBFQUFDLE1BQU0sMEVBQTBFLE1BQU0sUUFBUSxnQkFBZ0Isb0VBQUMsRUFBRSxtQkFBbUIsRUFBRSxZQUFZLElBQUksS0FBSyw4QkFBOEIsWUFBWSxjQUFjLG9IQUFvSCw2Q0FBNkMsdUdBQXVHLEtBQUssb0NBQW9DLFlBQVksU0FBUyxpQ0FBaUMsMkJBQTJCLDRCQUE0QixTQUFTLFFBQVEsMEVBQUMsUUFBUSx3SUFBd0ksbUJBQW1CLDBCQUEwQiw2QkFBNkIsdUNBQXVDLHFEQUFxRCxzREFBc0QsYUFBYSxZQUFZLFdBQVcsV0FBVyxtRUFBQyw4QkFBOEIsbUVBQUMseUNBQXlDLG1FQUFDLG1CQUFtQixxRUFBcUUsOEJBQThCLGFBQWEsWUFBWSxXQUFXLFdBQVcsbUVBQUMsOEJBQThCLG1FQUFDLHlDQUF5QyxtRUFBQyxtQkFBbUIscUVBQXFFLCtCQUErQixLQUFLLGtCQUFrQiw4RUFBOEUsU0FBUyxtQkFBbUIsa0JBQWtCLDZDQUE2Qyx3RUFBd0UsbUJBQW1CLG1DQUFtQyxlQUFlLCtCQUErQixvQkFBb0IsY0FBYyxzREFBc0QsbUJBQW1CLDhCQUE4QixvQkFBb0IsNEhBQTRILCtCQUErQixjQUFjLDBEQUEwRCxrQkFBa0IsaURBQWlELGFBQWEseUNBQXlDLElBQUksMERBQTBELEdBQUcsVUFBVSx1RkFBdUYsWUFBWSxLQUFLLEtBQUsseUtBQXlLLFFBQVEsNkhBQTZILE9BQU8sT0FBTyxtRUFBbUUsY0FBYywrQkFBK0IsOEJBQThCLE1BQU0sdUJBQXVCLEtBQUssVUFBVSw0Q0FBQyxrQkFBa0IsNENBQUMsWUFBWSw0Q0FBQyx5REFBeUQsV0FBVyw4RUFBQyxFQUFFLE9BQU8sRUFBRSxjQUFjLHNDQUFzQyxrQ0FBa0MsbUNBQW1DLDRFQUE0RSxpRkFBaUYsZ0dBQWdHLGdCQUFnQixtRUFBbUUsZUFBZSxLQUFLLGtDQUFrQyxzQkFBc0IseUlBQXlJLHlEQUF5RCxLQUFLLGFBQWEsMkJBQTJCLHVDQUF1QyxVQUFVLEtBQUssaUNBQWlDLGNBQWMsV0FBVyxxQ0FBcUMsU0FBUyxlQUFlLE1BQU0sd0ZBQXdGLHVEQUF1RCw0QkFBNEIsaU1BQWlNLGlIQUFpSCxPQUFPLFVBQVUsa0JBQWtCLHNDQUFzQyxrQ0FBa0MsU0FBUyxNQUFNLGFBQWEsNEJBQTRCLFlBQVksSUFBSSxLQUFLLFdBQVcsWUFBWSxJQUFJLEtBQUssZUFBZSxzSUFBc0ksS0FBSyxNQUFNLCtCQUErQixtRUFBQyxFQUFFLGlDQUFpQyxHQUFHLFlBQVksb0hBQW9ILElBQUksT0FBTyxnR0FBZ0csbUJBQW1CLE1BQU0sY0FBYywrSEFBK0gsWUFBWSxNQUFNLEtBQUssWUFBWSxNQUFNLEtBQUssZ0JBQWdCLHdDQUF3QyxPQUFPLHdDQUF3Qyx5QkFBeUIsWUFBWSxJQUFJLHNDQUFzQyxJQUFJLFlBQVksSUFBSSxzQ0FBc0MsSUFBSSxZQUFZLElBQUksc0NBQXNDLElBQUksWUFBWSxJQUFJLHNDQUFzQyxpQkFBaUIsV0FBVywyQkFBMkIsU0FBUyxlQUFlLDhCQUE4Qiw4QkFBOEIsbUJBQW1CLE1BQU0sMEJBQTBCLEdBQUcsYUFBYSxNQUFNLHFCQUFxQiw0R0FBNEcsc0JBQXNCLGtEQUFrRCxZQUFZLGdDQUFnQyxLQUFLLFVBQVUsWUFBWSxZQUFZLEtBQUssaUNBQWlDLHNFQUFzRSxNQUFNLEtBQUssdUJBQXVCLE1BQU0sa0JBQWtCLG1GQUFDLG1DQUFtQyxPQUFPLHFDQUFxQyxtRUFBQyxFQUFFLGdEQUFnRCxzQkFBc0IsdUdBQXVHLHdIQUF3SCxhQUFhLE9BQU8scUNBQXFDLG1FQUFDLEVBQUUsb0ZBQW9GLHNCQUFzQixtQkFBbUIsMEZBQTBGLHdDQUF3QyxXQUFXLG1FQUFDLEVBQUUsK0JBQStCLE9BQU8sa0JBQWtCLGlGQUFpRixzQkFBc0IsbUZBQUMsbUZBQW1GLDZEQUE2RCwySEFBMkgsMEVBQTBFLGFBQWEsWUFBWSxrQ0FBa0MsOEJBQThCLFVBQVUsbUZBQW1GLE1BQU0sSUFBSSwyR0FBMkcsUUFBUSxtRUFBQyxFQUFFLDBCQUEwQixRQUFRLHlCQUF5QixLQUFLLEdBQUcsYUFBYSxRQUFRLEtBQUssZUFBZSx3QkFBd0Isc0NBQXNDLGdCQUFnQixZQUFZLGlDQUFpQyxLQUFLLEtBQUssc0NBQXNDLFlBQVksRUFBRSxNQUFNLGlCQUFpQiwrQ0FBK0MsK0ZBQStGLE9BQU8sd0VBQW9nQiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvbGF5ZXJzL3N1cHBvcnQvcmFzdGVyRnVuY3Rpb25zL3Jhc3RlclByb2plY3Rpb25IZWxwZXIuanM/MGIxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yNy9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0XCIuLi8uLi8uLi9nZW9tZXRyeS5qc1wiO2ltcG9ydHtpc1NvbWUgYXMgZX1mcm9tXCIuLi8uLi8uLi9jb3JlL2FycmF5VXRpbHMuanNcIjtpbXBvcnQgdCBmcm9tXCIuLi8uLi8uLi9jb3JlL0Vycm9yLmpzXCI7aW1wb3J0e2dldE1ldGVyc1BlclVuaXRGb3JTUiBhcyBufWZyb21cIi4uLy4uLy4uL2NvcmUvdW5pdFV0aWxzLmpzXCI7aW1wb3J0e2UgYXMgaSxmIGFzIG8sZyBhcyByLGggYXMgcyxqIGFzIGF9ZnJvbVwiLi4vLi4vLi4vY2h1bmtzL3BlLmpzXCI7aW1wb3J0e2NhblByb2plY3RXaXRob3V0RW5naW5lIGFzIGwsaXNMb2FkZWQgYXMgYyxsb2FkIGFzIGYsZ2V0VHJhbnNmb3JtYXRpb24gYXMgdSxwcm9qZWN0IGFzIG19ZnJvbVwiLi4vLi4vLi4vZ2VvbWV0cnkvcHJvamVjdGlvbi5qc1wiO2ltcG9ydCB4IGZyb21cIi4uLy4uLy4uL2dlb21ldHJ5L0V4dGVudC5qc1wiO2ltcG9ydCBoIGZyb21cIi4uLy4uLy4uL2dlb21ldHJ5L1BvaW50LmpzXCI7aW1wb3J0IHAgZnJvbVwiLi4vLi4vLi4vZ2VvbWV0cnkvUG9seWdvbi5qc1wiO2ltcG9ydCBnIGZyb21cIi4uLy4uLy4uL2dlb21ldHJ5L1NwYXRpYWxSZWZlcmVuY2UuanNcIjt2YXIgeTtmdW5jdGlvbiBkKGUsdCxuKXtyZXR1cm4hbChlLHQsbil9ZnVuY3Rpb24gTShlLG4saSl7Y29uc3Qgbz1kKGUsbixpKTtpZihvJiYhYygpKXRocm93IG5ldyB0KFwicmFzdGVycHJvamVjdGlvbmhlbHBlci1wcm9qZWN0XCIsXCJwcm9qZWN0aW9uIGVuZ2luZSBpcyBub3QgbG9hZGVkXCIpO3JldHVybiBvfSFmdW5jdGlvbihlKXtlW2UuTm9uZT0wXT1cIk5vbmVcIixlW2UuTm9ydGg9MV09XCJOb3J0aFwiLGVbZS5Tb3V0aD0yXT1cIlNvdXRoXCIsZVtlLkJvdGg9M109XCJCb3RoXCJ9KHl8fCh5PXt9KSk7Y29uc3Qgdz0oZSx0LG4saT0wKT0+e2lmKDE9PT1uWzBdKXJldHVyblswLDBdO2xldCBvPTEscj0tMSxzPTEsYT0tMTtmb3IobGV0IGc9MDtnPGUubGVuZ3RoO2crPTIpaXNOYU4oZVtnXSl8fChvPW8+ZVtnXT9lW2ddOm8scj1yPmVbZ10/cjplW2ddLHM9cz5lW2crMV0/ZVtnKzFdOnMsYT1hPmVbZysxXT9hOmVbZysxXSk7Y29uc3R7Y29sczpsLHJvd3M6Y309dCxmPShyLW8pL2wvblswXSx1PShhLXMpL2MvblsxXSxtPTIqaTtsZXQgeD0wLGg9ITEscD1bMCwwXTtmb3IobGV0IGc9MDtnPGwtMztnKyspe2ZvcihsZXQgdD0wO3Q8Yy0zO3QrKyl7Y29uc3Qgbj1nKmMqMisyKnQsaT0oZVtuXStlW24rNF0rZVtuKzQqY10rZVtuKzQqYys0XSkvNCxvPShlW24rMV0rZVtuKzVdK2Vbbis0KmMrMV0rZVtuKzQqYys1XSkvNCxyPU1hdGguYWJzKChpLWVbbisyKmMrMl0pL2YpLHM9TWF0aC5hYnMoKG8tZVtuKzIqYyszXSkvdSk7aWYocitzPngmJih4PXIrcyxwPVtyLHNdKSxtJiZ4Pm0pe2g9ITA7YnJlYWt9fWlmKGgpYnJlYWt9cmV0dXJuIHB9LFI9ezMzOTU6MjAwMzc1MDguMzQyNzg5MjQ0LDM0MTA6MTczMzQxOTMuOTQzNjg2ODczLDM4NTc6MjAwMzc1MDguMzQyNzg4OTA1LDM5NzU6MTczNjc1MzAuNDQ1MTYxMzcyLDQwODc6MjAwMzc1MDguMzQyNzg5MjQ0LDQwODg6MjAwMTUxMDguNzg3MTY5MTQ3LDY5MzM6MTczNjc1MzAuNDQ1MTYxMzcyLDMyNjYyOjIwMDM3NTA4LjM0Mjc4OTI0NCw1MzAwMToyMDAxNTA4Ni43OTYwMjA1Nyw1MzAwMjoxMDAwNzU0My4zOTgwMTAyOSw1MzAwMzoyMDAxNTA4Ni43OTYwMjA1Nyw1MzAwNDoyMDAxNTA4Ni43OTYwMjA1Nyw1MzAxNjoxNDE1MjgwMy41OTk1MDM0NzQsNTMwMTc6MTczMzM1NzMuNjI0MzA0MzAyLDUzMDM0OjIwMDE1MDg2Ljc5NjAyMDU3LDUzMDc5OjIwMDE1MTE0LjM1MjE4NjM3NCw1MzA4MDoyMDAxNTExNC4zNTIxODYzNzQsNTQwMDE6MjAwMzc1MDguMzQyNzg5MjQ0LDU0MDAyOjEwMDE4NzU0LjE3MTM5NDYyNCw1NDAwMzoyMDAzNzUwOC4zNDI3ODkyNDQsNTQwMDQ6MjAwMzc1MDguMzQyNzg5MjQ0LDU0MDE2OjE0MTY4NjU4LjAyNzI2ODI5Miw1NDAxNzoxNzM2NzUzMC40NDUxNjEzNyw1NDAzNDoyMDAzNzUwOC4zNDI3ODkyNDQsNTQwNzk6MjAwMzc1MDguMzQyNzg5MjQ0LDU0MDgwOjIwMDM3NTA4LjM0Mjc4OTI0NCw1NDEwMDoyMDAzNzUwOC4zNDI3ODkyNDQsNTQxMDE6MjAwMzc1MDguMzQyNzg5MjQ0fSxTPTMyLFA9NCxiPVAsRz1uZXcgTWFwLE49bmV3IE1hcCxFPTUwMDthc3luYyBmdW5jdGlvbiBrKCl7YygpfHxhd2FpdCBmKCl9ZnVuY3Rpb24gVChlLHQsbil7TShlLnNwYXRpYWxSZWZlcmVuY2UsdCk7cmV0dXJuIG4/dSh0LGUuc3BhdGlhbFJlZmVyZW5jZSxlKTp1KGUuc3BhdGlhbFJlZmVyZW5jZSx0LGUpfWZ1bmN0aW9uIEMoZSx0LGksbz1udWxsKXtjb25zdCByPWUuc3BhdGlhbFJlZmVyZW5jZTtpZihyLmVxdWFscyh0KSlyZXR1cm4gZTtNKHIsdCxvKTtjb25zdCBzPWkuY2VudGVyLGE9bmV3IHgoe3htaW46cy54LWUueC8yLHhtYXg6cy54K2UueC8yLHltaW46cy55LWUueS8yLHltYXg6cy55K2UueS8yLHNwYXRpYWxSZWZlcmVuY2U6cn0pLGw9bShhLHQsbyksYz1LKHQpO2xldCBmO2lmKG51bGw9PWx8fG51bGwhPWMmJmwud2lkdGg+PWMpe2NvbnN0IGk9bihyKS9uKHQpO2Y9e3g6ZS54KmkseTplLnkqaX19ZWxzZSBmPXt4Omwud2lkdGgseTpsLmhlaWdodH07cmV0dXJuIGZ9ZnVuY3Rpb24gdihlLHQ9LjAxKXtyZXR1cm4gbihlKT90L24oZSk6MH1mdW5jdGlvbiBfKGUsdCxuPW51bGwsaT0hMCl7Y29uc3Qgbz1lLnNwYXRpYWxSZWZlcmVuY2U7aWYoby5lcXVhbHModCkpcmV0dXJuIGU7TShvLHQsbik7Y29uc3Qgcj1tKGUsdCxuKTtyZXR1cm4gaSYmcj8oaihbZV0sW3JdLG8sdCkscik6cn1mdW5jdGlvbiBqKGUsdCxuLGkpe2NvbnN0IG89RChuLCEwKSxyPUQoaSwhMCkscz12KG4sRSksYT12KGksRSk7aWYocyYmbnVsbCE9byYmbnVsbCE9cilmb3IobGV0IGw9MDtsPGUubGVuZ3RoO2wrKyl7Y29uc3Qgbj10W2xdO2lmKCFuKWNvbnRpbnVlO2NvbnN0e3g6aX09ZVtsXSx7eDpjfT1uO2M+PXJbMV0tYSYmTWF0aC5hYnMoaS1vWzBdKTxzP24ueC09clsxXS1yWzBdOmM8PXJbMF0rYSYmTWF0aC5hYnMoaS1vWzFdKTxzJiYobi54Kz1yWzFdLXJbMF0pfX1mdW5jdGlvbiB6KGUpe2NvbnN0e2luU1I6dCxvdXRTUjpuLGRhdHVtVHJhbnNmb3JtYXRpb246aSxwcmVmZXJQRTpvfT1lO2lmKHQuZXF1YWxzKG4pKXtjb25zdHtwb2ludHM6dH09QihlLG51bGwpO3JldHVybiB0fWlmKHQuaXNXZWJNZXJjYXRvciYmbi5pc1dHUzg0fHx0LmlzV0dTODQmJm4uaXNXZWJNZXJjYXRvcilyZXR1cm4gTyhlKTtpZihNKHQsbixpKSYmbyl7aWYodC5pc0dlb2dyYXBoaWMpcmV0dXJuIFcoZSk7aWYobnVsbCE9SSh0KSlyZXR1cm4gVyhlKX1yZXR1cm4gTChlKX1mdW5jdGlvbiBMKGUpe2NvbnN0e3BvaW50czp0fT1CKGUsbnVsbCkse2luU1I6bixvdXRTUjppLGRhdHVtVHJhbnNmb3JtYXRpb246b309ZSxyPXQubWFwKChlPT5uZXcgaChlWzBdLGVbMV0sbikpKSxzPW0ocixpLG8pO3JldHVybiBvJiZqKHIscyxuLGkpLHMubWFwKChlPT5lP1tlLngsZS55XTpbTmFOLE5hTl0pKX1mdW5jdGlvbiBXKGUpe2NvbnN0e2luU1I6dCxvdXRTUjpuLGRhdHVtVHJhbnNmb3JtYXRpb246YX09ZSxsPUkodCkse3BvaW50czpjLG1hc2s6Zn09QihlLGwpO2lmKCF0LmlzR2VvZ3JhcGhpYyl7Y29uc3QgZT10LndraWQ/aS5jb29yZHN5cyh0LndraWQpOmkuZnJvbVN0cmluZyh0LmlzR2VvZ3JhcGhpYz9vLlBFX1RZUEVfR0VPR0NTOm8uUEVfVFlQRV9QUk9KQ1MsdC53a3QpO3IucHJvalRvR2VvZyhlLGMubGVuZ3RoLGMpfWlmKG51bGwhPWEmJmEuc3RlcHMubGVuZ3RoKXtsZXQgZTtjb25zdCB0PTE3OS45OTU1O2lmKG4uaXNHZW9ncmFwaGljJiYoZT1jLm1hcCgoKFtlXSk9PmU+dD8xOmU8LXQ/LTE6MCkpKSxhLnN0ZXBzLmZvckVhY2goKGU9Pntjb25zdCB0PWUud2tpZD9pLmdlb2d0cmFuKGUud2tpZCk6aS5mcm9tU3RyaW5nKG8uUEVfVFlQRV9HRU9HVFJBTixlLndrdCk7cy5nZW9nVG9HZW9nKHQsYy5sZW5ndGgsYyxudWxsLGUuaXNJbnZlcnNlP28uUEVfVFJBTlNGT1JNXzJfVE9fMTpvLlBFX1RSQU5TRk9STV8xX1RPXzIpfSkpLGUpZm9yKGxldCBuPTA7bjxjLmxlbmd0aDtuKyspe2NvbnN0IGk9ZVtuXSxvPWNbbl1bMF0scj1vPnQ/MTpvPC10Py0xOjA7aSYmciYmaSE9PXImJihjW25dWzBdPWk+MD9vKzM2MDpvLTM2MCl9fWlmKCFuLmlzR2VvZ3JhcGhpYyl7Y29uc3QgZT1JKG4sITApLHQ9bnVsbCE9ZSYmZS5pc0VudmVsb3BlP1tlLmJib3hbMV0sZS5iYm94WzNdXTpbLTkwLDkwXTtGKGMsdCk7Y29uc3Qgcz1uLndraWQ/aS5jb29yZHN5cyhuLndraWQpOmkuZnJvbVN0cmluZyhuLmlzR2VvZ3JhcGhpYz9vLlBFX1RZUEVfR0VPR0NTOm8uUEVfVFlQRV9QUk9KQ1Msbi53a3QpO3IuZ2VvZ1RvUHJvaihzLGMubGVuZ3RoLGMpfWxldCB1PWM7aWYoZiYmYy5sZW5ndGghPT1mLmxlbmd0aCl7dT1bXTtmb3IobGV0IGU9MCx0PTA7ZTxmLmxlbmd0aDtlKyspZltlXT91LnB1c2goY1t0KytdKTp1LnB1c2goW05hTixOYU5dKX1yZXR1cm4gdX1mdW5jdGlvbiBPKGUpe2NvbnN0e2NvbHM6dCxyb3dzOm4seHJlczppLHlyZXM6byx1c2VQaXhlbENlbnRlcjpyLGluU1I6cyxvdXRTUjphfT1lO2xldHt4bWluOmwseW1heDpjfT1lO3ImJihsKz1pLzIsYy09by8yKTtjb25zdCBmPVtdLHU9W10seD1NYXRoLm1heCh0LG4pO2ZvcihsZXQgZz0wO2c8eDtnKyspe2NvbnN0IGU9bCtpKk1hdGgubWluKHQsZykscj1jLW8qTWF0aC5taW4obixnKSx4PW0obmV3IGgoe3g6ZSx5OnIsc3BhdGlhbFJlZmVyZW5jZTpzfSksYSk7Zzw9dCYmZi5wdXNoKHgueCksZzw9biYmdS5wdXNoKHgueSl9Y29uc3QgcD1bXTtmb3IobGV0IG09MDttPHQ7bSsrKWZvcihsZXQgZT0wO2U8bjtlKyspcC5wdXNoKFtmW21dLHVbZV1dKTtyZXR1cm4gcH1mdW5jdGlvbiBJKGUsdD0hMSl7bGV0IG49ZS53a2lkfHxlLndrdDtpZighbnx8ZS5pc0dlb2dyYXBoaWMpcmV0dXJuIG51bGw7aWYobj1TdHJpbmcobiksRy5oYXMobikpe2NvbnN0IGU9Ry5nZXQobik7cmV0dXJuIHQ/ZT8uZ2NzOmU/LnBjc31jb25zdCByPWUud2tpZD9pLmNvb3Jkc3lzKGUud2tpZCk6aS5mcm9tU3RyaW5nKGUuaXNHZW9ncmFwaGljP28uUEVfVFlQRV9HRU9HQ1M6by5QRV9UWVBFX1BST0pDUyxlLndrdCkscz1BKHIsdihlLDFlLTQpKSxhPUEociwwLCEwKTtyZXR1cm4gRy5zZXQobix7cGNzOnMsZ2NzOmF9KSx0P2E6c31mdW5jdGlvbiBBKGUsdD0wLG49ITEpe2NvbnN0IGk9YS5nZW5lcmF0ZShlKSxvPW4/ZS5ob3Jpem9uR2NzR2VuZXJhdGUoKTplLmhvcml6b25QY3NHZW5lcmF0ZSgpO2lmKCFpfHwhbz8ubGVuZ3RoKXJldHVybiBudWxsO2xldCByPSExLHM9by5maW5kKChlPT4xPT09ZS5nZXRJbmNsdXNpdmUoKSYmMT09PWUuZ2V0S2luZCgpKSk7aWYoIXMpe2lmKHM9by5maW5kKChlPT4xPT09ZS5nZXRJbmNsdXNpdmUoKSYmMD09PWUuZ2V0S2luZCgpKSksIXMpcmV0dXJuIG51bGw7cj0hMH1jb25zdCBsPW4/MDooMj09PWkuZ2V0Tm9ydGhQb2xlTG9jYXRpb24oKT8xOjApfCgyPT09aS5nZXRTb3V0aFBvbGVMb2NhdGlvbigpPzI6MCksYz1pLmlzUGFubmFibGVSZWN0YW5nbGUoKSxmPXMuZ2V0Q29vcmQoKTtpZihyKXJldHVybntpc0VudmVsb3BlOnIsaXNQYW5uYWJsZTpjLHZlcnRpY2VzOmYsY29lZjpudWxsLGJib3g6W2ZbMF1bMF0tdCxmWzBdWzFdLXQsZlsxXVswXSt0LGZbMV1bMV0rdF0scG9sZUxvY2F0aW9uOmx9O2xldCB1PTA7Y29uc3QgbT1bXTtsZXRbeCxoXT1mWzBdLFtwLGddPWZbMF07Zm9yKGxldCBhPTAseT1mLmxlbmd0aDthPHk7YSsrKXt1KyssdT09PXkmJih1PTApO2NvbnN0W2UsdF09ZlthXSxbbixpXT1mW3VdO2lmKGk9PT10KW0ucHVzaChbZSxuLHQsaSwyXSk7ZWxzZXtjb25zdCBvPShuLWUpLyhpLXR8fDFlLTQpLHI9ZS1vKnQ7dDxpP20ucHVzaChbbyxyLHQsaSwwXSk6bS5wdXNoKFtvLHIsaSx0LDFdKX14PXg8ZT94OmUsaD1oPHQ/aDp0LHA9cD5lP3A6ZSxnPWc+dD9nOnR9cmV0dXJue2lzRW52ZWxvcGU6ITEsaXNQYW5uYWJsZTpjLHZlcnRpY2VzOmYsY29lZjptLGJib3g6W3gsaCxwLGddLHBvbGVMb2NhdGlvbjpsfX1mdW5jdGlvbiBCKGUsdCl7Y29uc3Qgbj1bXSx7Y29sczppLHJvd3M6byx4cmVzOnIseXJlczpzLHVzZVBpeGVsQ2VudGVyOmF9PWU7bGV0e3htaW46bCx5bWF4OmN9PWU7aWYoYSYmKGwrPXIvMixjLT1zLzIpLG51bGw9PXQpe2ZvcihsZXQgZT0wO2U8aTtlKyspZm9yKGxldCB0PTA7dDxvO3QrKyluLnB1c2goW2wrciplLGMtcyp0XSk7cmV0dXJue3BvaW50czpufX1jb25zdCBmPW5ldyBVaW50OEFycmF5KGkqbyk7aWYodC5pc0VudmVsb3BlKXtjb25zdHtiYm94OltlLGEsdSxtXX09dDtmb3IobGV0IHg9MCxoPTA7eDxpO3grKyl7Y29uc3QgaT1sK3IqeCxwPXQuaXNQYW5uYWJsZXx8aT49ZSYmaTw9dTtmb3IobGV0IGU9MDtlPG87ZSsrLGgrKyl7Y29uc3QgdD1jLXMqZTtwJiZ0Pj1hJiZ0PD1tJiYobi5wdXNoKFtpLHRdKSxmW2hdPTEpfX1yZXR1cm57cG9pbnRzOm4sbWFzazpmfX1jb25zdCB1PXQuY29lZixtPVtdO2ZvcihsZXQgeD0wO3g8bzt4Kyspe2NvbnN0IGU9Yy1zKngsdD1bXSxuPVtdO2ZvcihsZXQgbz0wO288dS5sZW5ndGg7bysrKXtjb25zdFtpLHIscyxhLGxdPXVbb107aWYoZT09PXMmJnM9PT1hKXQucHVzaChpKSx0LnB1c2gociksbi5wdXNoKDIpLG4ucHVzaCgyKTtlbHNlIGlmKGU+PXMmJmU8PWEpe2NvbnN0IG89aSplK3I7dC5wdXNoKG8pLG4ucHVzaChsKX19bGV0IGk9dDtpZih0Lmxlbmd0aD4yKXtsZXQgZT0yPT09blswXT8wOm5bMF0sbz10WzBdO2k9W107Zm9yKGxldCByPTE7cjxuLmxlbmd0aDtyKyspMj09PW5bcl0mJnIhPT1uLmxlbmd0aC0xfHwobltyXSE9PWUmJihpLnB1c2goMD09PWU/TWF0aC5taW4obyx0W3ItMV0pOk1hdGgubWF4KG8sdFtyLTFdKSksZT1uW3JdLG89dFtyXSkscj09PW4ubGVuZ3RoLTEmJmkucHVzaCgwPT09bltyXT9NYXRoLm1pbihvLHRbcl0pOk1hdGgubWF4KG8sdFtyXSkpKTtpLnNvcnQoKChlLHQpPT5lLXQpKX1lbHNlIHRbMF0+dFsxXSYmKGk9W3RbMV0sdFswXV0pO20ucHVzaChpKX1mb3IobGV0IHg9MCxoPTA7eDxpO3grKyl7Y29uc3QgZT1sK3IqeDtmb3IobGV0IHQ9MDt0PG87dCsrLGgrKyl7Y29uc3QgaT1jLXMqdCxvPW1bdF07aWYoMj09PW8ubGVuZ3RoKWU+PW9bMF0mJmU8PW9bMV0mJihuLnB1c2goW2UsaV0pLGZbaF09MSk7ZWxzZSBpZihvLmxlbmd0aD4yKXtsZXQgdD0hMTtmb3IobGV0IG49MDtuPG8ubGVuZ3RoO24rPTIpaWYoZT49b1tuXSYmZTw9b1tuKzFdKXt0PSEwO2JyZWFrfXQmJihuLnB1c2goW2UsaV0pLGZbaF09MSl9fX1yZXR1cm57cG9pbnRzOm4sbWFzazpmfX1mdW5jdGlvbiBGKGUsdCl7Y29uc3RbbixpXT10O2ZvcihsZXQgbz0wO288ZS5sZW5ndGg7bysrKXtjb25zdCB0PWVbb11bMV07KHQ8bnx8dD5pKSYmKGVbb109W05hTixOYU5dKX19ZnVuY3Rpb24gWShlKXtjb25zdCB0PUsoZVswXS5zcGF0aWFsUmVmZXJlbmNlKTtpZihlLmxlbmd0aDwyfHxudWxsPT10KXJldHVybiBlWzBdO2NvbnN0IG49dihlWzBdLnNwYXRpYWxSZWZlcmVuY2UpO2lmKDE9PT0oZT1lLmZpbHRlcigoZT0+ZS53aWR0aD5uKSkpLmxlbmd0aClyZXR1cm4gZVswXTtsZXR7eG1pbjppLHhtYXg6byx5bWluOnIseW1heDpzfT1lWzBdO2ZvcihsZXQgYT0xO2E8ZS5sZW5ndGg7YSsrKXtjb25zdCBuPWVbYV07bz1uLnhtYXgrdCphLHI9TWF0aC5taW4ocixuLnltaW4pLHM9TWF0aC5tYXgocyxuLnltYXgpfXJldHVybiBuZXcgeCh7eG1pbjppLHhtYXg6byx5bWluOnIseW1heDpzLHNwYXRpYWxSZWZlcmVuY2U6ZVswXS5zcGF0aWFsUmVmZXJlbmNlfSl9ZnVuY3Rpb24gcSh0LG4saT1udWxsLG89ITApe2NvbnN0IHI9dC5zcGF0aWFsUmVmZXJlbmNlO2lmKHIuZXF1YWxzKG4pKXJldHVybiB0O2NvbnN0IHM9USh0KSxhPUsociwhMCksbD1LKG4pO2lmKDA9PT1zfHxudWxsPT1hfHxudWxsPT1sKXtjb25zdCBlPVgodCxuLGksbyk7aWYobnVsbD09YSYmbnVsbCE9bCYmTWF0aC5hYnMoZS53aWR0aC1sKTx2KG4pJiZjKCkpe2NvbnN0IGk9SShyKTtpZihudWxsIT1pJiZpLnBvbGVMb2NhdGlvbj09PXkuTm9uZSYmdC53aWR0aDwoaS5iYm94WzJdLWkuYmJveFswXSkvMilyZXR1cm4gVSh0LG4pfHxlfXJldHVybiBlfWNvbnN0IGY9dC5jbG9uZSgpLm5vcm1hbGl6ZSgpO2lmKDE9PT1mLmxlbmd0aCYmdC54bWF4PGEmJnQueG1heC1hLzI+dihyKSl7Y29uc3R7eG1pbjplLHhtYXg6bn09dDtmb3IobGV0IGk9MDtpPD1zO2krKyl7Y29uc3Qgbz0wPT09aT9lOi1hLzIsbD1pPT09cz9uLWEqaTphLzI7ZltpXT1uZXcgeCh7eG1pbjpvLHhtYXg6bCx5bWluOnQueW1pbix5bWF4OnQueW1heCxzcGF0aWFsUmVmZXJlbmNlOnJ9KX19cmV0dXJuIFkoZi5tYXAoKGU9PlgoZSxuLGksbykpKS5maWx0ZXIoZSkpfWZ1bmN0aW9uIEooZSx0LG4pe2lmKFwiZXh0ZW50XCI9PT1lLnR5cGUpe2NvbnN0e3htaW46dCx5bWluOm4seG1heDppLHltYXg6byxzcGF0aWFsUmVmZXJlbmNlOnJ9PWU7ZT1uZXcgcCh7cmluZ3M6W1tbdCxvXSxbaSxvXSxbaSxuXSxbdCxuXSxbdCxvXV1dLHNwYXRpYWxSZWZlcmVuY2U6cn0pfXJldHVybiBlLnNwYXRpYWxSZWZlcmVuY2UuZXF1YWxzKHQpP2U6KE0oZS5zcGF0aWFsUmVmZXJlbmNlLHQsbiksbShlLHQsbikpfWZ1bmN0aW9uIFUoZSx0KXtjb25zdCBuPUsodCk7aWYobnVsbD09bilyZXR1cm4gbnVsbDtsZXR7eG1pbjppLHltaW46byx4bWF4OnIseW1heDpzfT1lO2NvbnN0IGE9ZS5zcGF0aWFsUmVmZXJlbmNlLGw9bmV3IHAoe3NwYXRpYWxSZWZlcmVuY2U6YSxyaW5nczpbW1tpLG9dLFtyLG9dLFtyLHNdLFtpLHNdLFtpLG9dXV19KSxjPW0obCx0KTtpZigyIT09Yy5yaW5ncy5sZW5ndGh8fCFjLnJpbmdzWzBdLmxlbmd0aHx8IWMucmluZ3NbMV0ubGVuZ3RoKXJldHVybiBudWxsO2NvbnN0e3JpbmdzOmZ9PWMsdT12KGEpLGg9bmV3IHgoe3NwYXRpYWxSZWZlcmVuY2U6dH0pO2ZvcihsZXQgbT0wO208MjttKyspe2k9cj1mW21dWzBdWzBdLG89cz1mW21dWzBdWzFdO2ZvcihsZXQgZT0wO2U8ZlttXS5sZW5ndGg7ZSsrKWk9aT5mW21dW2VdWzBdP2ZbbV1bZV1bMF06aSxyPXI8ZlttXVtlXVswXT9mW21dW2VdWzBdOnIsbz1vPmZbbV1bZV1bMV0/ZlttXVtlXVsxXTpvLHM9czxmW21dW2VdWzFdP2ZbbV1bZV1bMV06cztpZigwPT09bSloLnltaW49byxoLnltYXg9cyxoLnhtaW49aSxoLnhtYXg9cjtlbHNlIGlmKGgueW1pbj1NYXRoLm1pbihoLnltaW4sbyksaC55bWF4PU1hdGgubWF4KGgueW1heCxzKSxNYXRoLmFicyhyLW4vMik8dSloLnhtaW49aSxoLnhtYXg9aC54bWF4K247ZWxzZXtpZighKE1hdGguYWJzKGkrbi8yKTx1KSlyZXR1cm4gbnVsbDtoLnhtYXg9citufX1yZXR1cm4gaH1mdW5jdGlvbiBYKGUsdCxuPW51bGwsaT0hMCxvPSEwKXtjb25zdCByPWUuc3BhdGlhbFJlZmVyZW5jZTtpZihyLmVxdWFscyh0KXx8IXQpcmV0dXJuIGU7TShyLHQsbik7Y29uc3Qgcz1tKGUsdCxuKTtpZihvJiZ0LmlzV2ViTWVyY2F0b3ImJnMmJihzLnltYXg9TWF0aC5taW4oMjAwMzc1MDguMzQyNzg3LHMueW1heCkscy55bWluPU1hdGgubWF4KC0yMDAzNzUwOC4zNDI3ODcscy55bWluKSxzLnltaW4+PXMueW1heCkpcmV0dXJuIG51bGw7aWYoIWl8fCFzKXJldHVybiBzO2NvbnN0IGE9RChyLCEwKSxsPUQodCwhMCk7aWYobnVsbD09YXx8bnVsbD09bClyZXR1cm4gcztjb25zdCBjPXYociwuMDAxKSxmPXYocixFKSx1PXYodCwuMDAxKTtpZihNYXRoLmFicyhzLnhtaW4tbFswXSk8dSYmTWF0aC5hYnMocy54bWF4LWxbMV0pPHUpe2NvbnN0IGk9TWF0aC5hYnMoZS54bWluLWFbMF0pLG89TWF0aC5hYnMoYVsxXS1lLnhtYXgpO2lmKGk8YyYmbz5mKXtzLnhtaW49bFswXTtjb25zdCBpPVtdO2kucHVzaChuZXcgaChlLnhtYXgsZS55bWluLHIpKSxpLnB1c2gobmV3IGgoZS54bWF4LChlLnltaW4rZS55bWF4KS8yLHIpKSxpLnB1c2gobmV3IGgoZS54bWF4LGUueW1heCxyKSk7Y29uc3Qgbz1pLm1hcCgoZT0+XyhlLHQsbikpKS5maWx0ZXIoKGU9PiFpc05hTihlPy54KSkpLm1hcCgoZT0+ZS54KSk7cy54bWF4PU1hdGgubWF4LmFwcGx5KG51bGwsbyl9aWYobzxjJiZpPmYpe3MueG1heD1sWzFdO2NvbnN0IGk9W107aS5wdXNoKG5ldyBoKGUueG1pbixlLnltaW4scikpLGkucHVzaChuZXcgaChlLnhtaW4sKGUueW1pbitlLnltYXgpLzIscikpLGkucHVzaChuZXcgaChlLnhtaW4sZS55bWF4LHIpKTtjb25zdCBvPWkubWFwKChlPT5fKGUsdCxuKSkpLmZpbHRlcigoZT0+IWlzTmFOKGU/LngpKSkubWFwKChlPT5lLngpKTtzLnhtaW49TWF0aC5taW4uYXBwbHkobnVsbCxvKX19ZWxzZXtjb25zdCBlPXYodCwuMDAxKTtNYXRoLmFicyhzLnhtaW4tbFswXSk8ZSYmKHMueG1pbj1sWzBdKSxNYXRoLmFicyhzLnhtYXgtbFsxXSk8ZSYmKHMueG1heD1sWzFdKX1yZXR1cm4gc31mdW5jdGlvbiBLKGUsdD0hMSl7aWYoIWUpcmV0dXJuIG51bGw7Y29uc3Qgbj10PzIwMDM3NTA4LjM0Mjc4NzoyMDAzNzUwOC4zNDI3ODg5MDU7cmV0dXJuIGUuaXNXZWJNZXJjYXRvcj8yKm46ZS53a2lkJiZlLmlzR2VvZ3JhcGhpYz8zNjA6MipSW2Uud2tpZF18fG51bGx9ZnVuY3Rpb24gRChlLHQ9ITEpe2lmKGUuaXNHZW9ncmFwaGljKXJldHVyblstMTgwLDE4MF07Y29uc3Qgbj1LKGUsdCk7cmV0dXJuIG51bGwhPW4/Wy1uLzIsbi8yXTpudWxsfWZ1bmN0aW9uIEgoZSx0LG4saSl7bGV0IG89KGUtdCkvbjtyZXR1cm4gby1NYXRoLmZsb29yKG8pIT0wP289TWF0aC5mbG9vcihvKTppJiYoby09MSksb31mdW5jdGlvbiBRKGUsdD0hMSl7Y29uc3Qgbj1LKGUuc3BhdGlhbFJlZmVyZW5jZSk7aWYobnVsbD09bilyZXR1cm4gMDtjb25zdCBpPXQ/MDotKG4vMiksbz12KGUuc3BhdGlhbFJlZmVyZW5jZSkscj0hdCYmTWF0aC5hYnMoZS54bWF4LW4vMik8bz9uLzI6ZS54bWF4LHM9IXQmJk1hdGguYWJzKGUueG1pbituLzIpPG8/LW4vMjplLnhtaW47cmV0dXJuIEgocixpLG4sITApLUgocyxpLG4sITEpfWZ1bmN0aW9uIFYoZSl7Y29uc3QgdD1lLnN0b3JhZ2VJbmZvLm9yaWdpbi54LG49SyhlLnNwYXRpYWxSZWZlcmVuY2UsITApO2lmKG51bGw9PW4pcmV0dXJue29yaWdpblg6dCxoYWxmV29ybGRXaWR0aDpudWxsLHB5cmFtaWRzSW5mbzpudWxsfTtjb25zdCBpPW4vMix7bmF0aXZlUGl4ZWxTaXplOm8sc3RvcmFnZUluZm86cixleHRlbnQ6c309ZSx7bWF4aW11bVB5cmFtaWRMZXZlbDphLGJsb2NrV2lkdGg6bCxweXJhbWlkU2NhbGluZ0ZhY3RvcjpjfT1yO2xldCBmPW8ueDtjb25zdCB1PVtdLG09bnVsbCE9ZS50cmFuc2Zvcm0mJlwiZ2NzLXNoaWZ0XCI9PT1lLnRyYW5zZm9ybS50eXBlLHg9dCsobT8wOmkpLGg9bT9uLXQ6aS10O2ZvcihsZXQgcD0wO3A8PWE7cCsrKXtjb25zdCBlPShzLnhtYXgtdCkvZi9sLG49ZS1NYXRoLmZsb29yKGUpPT0wP2U6TWF0aC5jZWlsKGUpLGk9aC9mL2wsbz1pLU1hdGguZmxvb3IoaSk9PTA/aTpNYXRoLmNlaWwoaSkscj1NYXRoLmZsb29yKHgvZi9sKSxhPU1hdGgucm91bmQoeC9mKSVsLG09KGwtTWF0aC5yb3VuZChoL2YpJWwpJWw7dS5wdXNoKHtyZXNvbHV0aW9uWDpmLGJsb2NrV2lkdGg6bCxkYXRzZXRDb2x1bW5Db3VudDpuLHdvcmxkQ29sdW1uQ291bnRGcm9tT3JpZ2luOm8sbGVmdE1hcmdpbjphLHJpZ2h0UGFkZGluZzptLG9yaWdpbkNvbHVtbk9mZnNldDpyfSksZio9Y31yZXR1cm57b3JpZ2luWDp0LGhhbGZXb3JsZFdpZHRoOmkscHlyYW1pZHNJbmZvOnUsaGFzR0NTU1NoaWZ0VHJhbnNmb3JtOm19fWZ1bmN0aW9uIFooZSl7aWYoIWV8fGUuaXNHZW9ncmFwaGljKXJldHVybiBlO2NvbnN0IHQ9U3RyaW5nKGUud2tpZHx8ZS53a3QpO2xldCBuO2lmKE4uaGFzKHQpKW49Ti5nZXQodCk7ZWxzZXtuPShlLndraWQ/aS5jb29yZHN5cyhlLndraWQpOmkuZnJvbVN0cmluZyhvLlBFX1RZUEVfUFJPSkNTLGUud2t0KSkuZ2V0R2VvZ2NzKCkuZ2V0Q29kZSgpLE4uc2V0KHQsbil9cmV0dXJuIG5ldyBnKHt3a2lkOm59KX1mdW5jdGlvbiAkKGUpe2NvbnN0IHQ9ZS5pc0FkYXB0aXZlJiZudWxsPT1lLnNwYWNpbmc7bGV0IG49ZS5zcGFjaW5nfHxbUyxTXSxpPWVlKGUpLG89e2NvbHM6aS5zaXplWzBdKzEscm93czppLnNpemVbMV0rMX07Y29uc3Qgcj1pLm91dG9mQm91bmRQb2ludENvdW50PjAmJmkub3V0b2ZCb3VuZFBvaW50Q291bnQ8aS5vZmZzZXRzLmxlbmd0aC8yO2xldCBzPWkub3V0b2ZCb3VuZFBvaW50Q291bnQ9PT1pLm9mZnNldHMubGVuZ3RoLzJ8fHQmJnI/WzAsMF06dyhpLm9mZnNldHMsbyxuLGIpO2NvbnN0IGE9KHNbMF0rc1sxXSkvMixsPWUucHJvamVjdGVkRXh0ZW50LnNwYXRpYWxSZWZlcmVuY2UsYz1lLnNyY0J1ZmZlckV4dGVudC5zcGF0aWFsUmVmZXJlbmNlO2lmKHQmJihyfHxhPmIpKXtkKGwsYyxlLmRhdHVtVHJhbnNmb3JtYXRpb24pJiYobC5pc0dlb2dyYXBoaWN8fEkobCkpLG49W1AsUF0saT1lZSh7Li4uZSxzcGFjaW5nOm59KSxvPXtjb2xzOmkuc2l6ZVswXSsxLHJvd3M6aS5zaXplWzFdKzF9LHM9dyhpLm9mZnNldHMsbyxuLGIpfWlmKGkuZXJyb3I9cyxuWzBdPjEmJihpLmNvZWZmaWNpZW50cz10ZShpLm9mZnNldHMsbyxyKSksZS5pbmNsdWRlR0NTR3JpZCYmIWwuaXNHZW9ncmFwaGljJiYhbC5pc1dlYk1lcmNhdG9yKWlmKGMuaXNHZW9ncmFwaGljKWkuZ2NzR3JpZD17b2Zmc2V0czppLm9mZnNldHMsY29lZmZpY2llbnRzOmkuY29lZmZpY2llbnRzLHNwYWNpbmc6bn07ZWxzZXtjb25zdCB0PUkobCk7aWYobnVsbCE9dCYmIXQuaXNFbnZlbG9wZSl7Y29uc3QgdD1aKGwpLHM9cShlLnByb2plY3RlZEV4dGVudCx0KSx7b2Zmc2V0czphfT1lZSh7Li4uZSxzcmNCdWZmZXJFeHRlbnQ6cyxzcGFjaW5nOm59KSxjPXRlKGEsbyxyKTtpLmdjc0dyaWQ9e29mZnNldHM6YSxjb2VmZmljaWVudHM6YyxzcGFjaW5nOm59fX1yZXR1cm4gaX1mdW5jdGlvbiBlZShlKXtjb25zdHtwcm9qZWN0ZWRFeHRlbnQ6dCxzcmNCdWZmZXJFeHRlbnQ6bixwaXhlbFNpemU6aSxkYXR1bVRyYW5zZm9ybWF0aW9uOm8scmFzdGVyVHJhbnNmb3JtOnJ9PWUscz10LnNwYXRpYWxSZWZlcmVuY2UsYT1uLnNwYXRpYWxSZWZlcmVuY2UsbD1NKHMsYSkse3htaW46Yyx5bWluOmYseG1heDp1LHltYXg6bX09dCx4PUsoYSkscD1udWxsIT14JiYoZS5oYXNXcmFwQXJvdW5kfHxcImdjcy1zaGlmdFwiPT09cj8udHlwZSksZz1lLnNwYWNpbmd8fFtTLFNdLHk9Z1swXSppLngsZD1nWzFdKmkueSx3PTE9PT1nWzBdLFI9TWF0aC5jZWlsKCh1LWMpL3ktLjEvZ1swXSkrKHc/MDoxKSxiPU1hdGguY2VpbCgobS1mKS9kLS4xL2dbMV0pKyh3PzA6MSksRz16KHtjb2xzOlIscm93czpiLHhtaW46Yyx5bWF4Om0seHJlczp5LHlyZXM6ZCxpblNSOnMsb3V0U1I6YSxkYXR1bVRyYW5zZm9ybWF0aW9uOm8scHJlZmVyUEU6Z1swXTw9UCx1c2VQaXhlbENlbnRlcjp3fSksTj1bXTtsZXQgayxUPTA7Y29uc3QgQz13Py0xOk5hTix7eG1pbjpfLHhtYXg6aix5bWF4Okwsd2lkdGg6VyxoZWlnaHQ6T309bixBPXYoYSxFKSxCPW51bGwhPXgmJl8+MCYmaj54LzI7bGV0IEY9ITE7aWYobCl7Y29uc3QgZT1JKHMpO0Y9bnVsbCE9ZSYmZS5wb2xlTG9jYXRpb24+MH1mb3IobGV0IE09MDtNPFI7TSsrKXtjb25zdCBlPVtdO2ZvcihsZXQgdD0wO3Q8Yjt0Kyspe2xldCBuPUdbTSpiK3RdO2lmKHAmJm5bMF0+aiYmblswXT54LzItQT9uWzBdLT14OnAmJjA9PT1NJiZuWzBdPDAmJkImJiFyJiYoblswXSs9eCksIW58fGlzTmFOKG5bMF0pfHxpc05hTihuWzFdKSlOLnB1c2goQyksTi5wdXNoKEMpLGUucHVzaChudWxsKSxUKys7ZWxzZXtpZihyKXtjb25zdCBlPXIuaW52ZXJzZVRyYW5zZm9ybShuZXcgaCh7eDpuWzBdLHk6blsxXSxzcGF0aWFsUmVmZXJlbmNlOmF9KSk7bj1bZS54LGUueV19ZS5wdXNoKG4pLE0+MCYmcCYma1t0XSYmblswXTxrW3RdWzBdJiYoblswXSs9eCxGJiZuWzBdPmomJm5bMF0+eCYmKG5bMF0tPXgpKSxOLnB1c2goKG5bMF0tXykvVyksTi5wdXNoKChMLW5bMV0pL08pfX1rPWV9cmV0dXJue29mZnNldHM6TixlcnJvcjpudWxsLGNvZWZmaWNpZW50czpudWxsLG91dG9mQm91bmRQb2ludENvdW50OlQsc3BhY2luZzpnLHNpemU6dz9bUixiXTpbUi0xLGItMV19fWZ1bmN0aW9uIHRlKGUsdCxuKXtjb25zdHtjb2xzOmkscm93czpvfT10LHI9bmV3IEZsb2F0MzJBcnJheSgoaS0xKSooby0xKSoyKjYpLHM9bmV3IEZsb2F0MzJBcnJheShbLTAsLTEsMSwtMSwxLC0wLDEsLTAsLTBdKSxhPW5ldyBGbG9hdDMyQXJyYXkoWy0xLDEsMCwwLC0xLDEsMSwwLDBdKTtmb3IobGV0IGw9MDtsPGktMTtsKyspe2ZvcihsZXQgdD0wO3Q8by0xO3QrKyl7bGV0IG49bCpvKjIrMip0O2NvbnN0IGM9ZVtuXSxmPWVbbisxXSx1PWVbbisyXSxtPWVbbiszXTtuKz0yKm87Y29uc3QgeD1lW25dLGg9ZVtuKzFdLHA9ZVtuKzJdLGc9ZVtuKzNdO2xldCB5PTAsZD0xMioodCooaS0xKStsKTtmb3IobGV0IGU9MDtlPDM7ZSsrKXJbZCsrXT1zW3krK10qYytzW3krK10qdStzW3krK10qcDt5PTA7Zm9yKGxldCBlPTA7ZTwzO2UrKylyW2QrK109c1t5KytdKmYrc1t5KytdKm0rc1t5KytdKmc7eT0wO2ZvcihsZXQgZT0wO2U8MztlKyspcltkKytdPWFbeSsrXSpjK2FbeSsrXSp4K2FbeSsrXSpwO3k9MDtmb3IobGV0IGU9MDtlPDM7ZSsrKXJbZCsrXT1hW3krK10qZithW3krK10qaCthW3krK10qZ31pZihuKWZvcihsZXQgZT0wO2U8ci5sZW5ndGg7ZSsrKWlzTmFOKHJbZV0pJiYocltlXT0tMSl9cmV0dXJuIHJ9ZnVuY3Rpb24gbmUoZSl7Y29uc3QgdD1lLmNsb25lKCkubm9ybWFsaXplKCk7cmV0dXJuIDE9PT10Lmxlbmd0aD90WzBdOlkodCl9ZnVuY3Rpb24gaWUoZSx0LGkpe2NvbnN0e3N0b3JhZ2VJbmZvOm8scGl4ZWxTaXplOnJ9PXQ7bGV0IHM9MCxhPSExO2NvbnN0e3B5cmFtaWRSZXNvbHV0aW9uczpsfT1vLGM9XCJtaXhlZFwiPT09by50aWxlSW5mby5mb3JtYXQ/LnRvTG93ZXJDYXNlKCk/TWF0aC5tYXgoMSxNYXRoLm1pbigzLG8udGlsZUluZm8uZHBpLzk2KSk6MSxmPShlLngrZS55KS8yL2M7aWYobnVsbCE9bCYmbC5sZW5ndGgpe2NvbnN0IGU9bFtsLmxlbmd0aC0xXSxvPShlLngrZS55KS8yLGM9KHIueCtyLnkpLzI7aWYoZjw9YylzPTA7ZWxzZSBpZihmPj1vKXM9bC5sZW5ndGgsYT1mL28+ODtlbHNle2xldCBlLHQ9Yztmb3IobGV0IG49MTtuPD1sLmxlbmd0aDtuKyspe2lmKGU9KGxbbi0xXS54K2xbbi0xXS55KS8yLGY8PWUpe2Y9PT1lP3M9bjpcImRvd25cIj09PWk/KHM9bi0xLGE9Zi90PjgpOnM9XCJ1cFwiPT09aXx8Zi10PmUtZnx8Zi90PjI/bjpuLTE7YnJlYWt9dD1lfX1jb25zdCB1PTA9PT1zP3I6bFtzLTFdO2lmKGEpe01hdGgubWluKHUueCx1LnkpKm4odC5zcGF0aWFsUmVmZXJlbmNlKT4xOTU2NyYmKGE9ITEpfXJldHVybntweXJhbWlkTGV2ZWw6cyxweXJhbWlkUmVzb2x1dGlvbjpuZXcgaCh7eDp1LngseTp1Lnksc3BhdGlhbFJlZmVyZW5jZTp0LnNwYXRpYWxSZWZlcmVuY2V9KSxleGNlc3NpdmVSZWFkaW5nOmF9fWNvbnN0IHU9TWF0aC5sb2coZS54L3IueCkvTWF0aC5MTjIsbT1NYXRoLmxvZyhlLnkvci55KS9NYXRoLkxOMix4PXQuc3RvcmFnZUluZm8ubWF4aW11bVB5cmFtaWRMZXZlbHx8MDtzPVwiZG93blwiPT09aT9NYXRoLmZsb29yKE1hdGgubWluKHUsbSkpOlwidXBcIj09PWk/TWF0aC5jZWlsKE1hdGgubWF4KHUsbSkpOk1hdGgucm91bmQoKHUrbSkvMiksczwwP3M9MDpzPngmJihhPXM+eCszLHM9eCk7Y29uc3QgcD0yKipzO3JldHVybntweXJhbWlkTGV2ZWw6cyxweXJhbWlkUmVzb2x1dGlvbjpuZXcgaCh7eDpwKnQubmF0aXZlUGl4ZWxTaXplLngseTpwKnQubmF0aXZlUGl4ZWxTaXplLnksc3BhdGlhbFJlZmVyZW5jZTp0LnNwYXRpYWxSZWZlcmVuY2V9KSxleGNlc3NpdmVSZWFkaW5nOmF9fWZ1bmN0aW9uIG9lKGUsdCxpKXtjb25zdCBvPWk/LnRpbGVTaXplPz81MTIscj1pPy5hbGlnbkdsb2JhbERhdGFzZXRXaXRoQUdPTD8/ITAscz0hIWk/LmxpbWl0VG9TcmNSZXNvbHV0aW9uLHtleHRlbnQ6YSxzcGF0aWFsUmVmZXJlbmNlOmwscGl4ZWxTaXplOmN9PWUsZj1DKG5ldyBoKHt4OmMueCx5OmMueSxzcGF0aWFsUmVmZXJlbmNlOmx9KSx0LGEpO2lmKG51bGw9PWYpcmV0dXJue3Byb2plY3RlZFBpeGVsU2l6ZTpudWxsLHNjYWxlczpudWxsLHNyY1Jlc29sdXRpb25zOm51bGwsaXNDdXN0b21UaWxpbmdTY2hlbWU6ITF9O2NvbnN0IHU9KGYueCtmLnkpLzIsbT1uKHQpLHg9dSptKjk2KjM5LjM3LHA9dC5pc0dlb2dyYXBoaWM/MjU2L28qMjk1ODI4NzYzLjc5NTg1NDc6MjU2L28qNTkxNjU3NTI3LjU5MTU1NTtsZXQgZz1cInZlY3Rvci1tYWdkaXJcIj09PWUuZGF0YVR5cGV8fFwidmVjdG9yLXV2XCI9PT1lLmRhdGFUeXBlO2NvbnN0IHk9cShhLHQpLGQ9TWF0aC5taW4oTWF0aC5jZWlsKE1hdGgubG9nKE1hdGgubWluKGUud2lkdGgsZS5oZWlnaHQpLzMyKS9NYXRoLkxOMiksTWF0aC5jZWlsKE1hdGgubG9nKHAvMi94KS9NYXRoLkxOMikpO2lmKCFnJiZyJiYodC5pc0dlb2dyYXBoaWN8fHQuaXNXZWJNZXJjYXRvcikmJihnPXkueG1pbip5LnhtYXg8MCwhZyYmZDwzKSl7Y29uc3QgZT1LKHQpO2lmKG51bGwhPWUpe2NvbnN0IHQ9MioqZCp1Km8sbj1NYXRoLmNlaWwoZS90KTtnPTE9PT1ufHwyPT09biYmZS8yLXkueG1heDx0fX1sZXQgTSx3PXg7Y29uc3QgUj0xLjAwMSxTPU1hdGgubWluKDIsTWF0aC5tYXgoMS40MTQsZS5zdG9yYWdlSW5mbz8ucHlyYW1pZFNjYWxpbmdGYWN0b3J8fDIpKTtpZihnKXt3PXA7Y29uc3QgZT10LmlzR2VvZ3JhcGhpYz8xMzQxMTA0NTA3NDQ2Mjg5ZS0yMTouMjk4NTgyMTQxNjQ3NjE2NjUsbj1lKig5NiptKjM5LjM3KSxpPXQuaXNHZW9ncmFwaGljPzQzMjY6Mzg1NztNPUMobmV3IGgoe3g6ZSx5OmUsc3BhdGlhbFJlZmVyZW5jZTp7d2tpZDppfX0pLGwseSksTS54Kj13L24sTS55Kj13L259ZWxzZXtNPXt4OmMueCx5OmMueX07bGV0IGU9MDtmb3IoO3c8cCooUi8yKSYmZTxkOyllKyssdyo9UyxNLngqPVMsTS55Kj1TO01hdGgubWF4KHcscCkvTWF0aC5taW4odyxwKTw9UiYmKHc9cCl9Y29uc3QgUD1bd10sYj1be3g6TS54LHk6TS55fV0sRz03MC41MzEwNzM1LE49TWF0aC5taW4oRyx4KS9SO2Zvcig7dz49Tjspdy89UyxNLngvPVMsTS55Lz1TLFAucHVzaCh3KSxiLnB1c2goe3g6TS54LHk6TS55fSk7aWYocyl7Y29uc3QgZT0uMDAxKmMueDtsZXQgdD1iLmZpbmRJbmRleCgodD0+dC54Pj1jLngtZSYmdC54PD1jLngrZSkpO3Q+LTE/KGIubGVuZ3RoPXQrMSxQLmxlbmd0aD10KzEpOih0PWIuZmluZEluZGV4KCh0PT50Lng8PWMueCtlKSksdD4wJiYoYi5sZW5ndGg9dCxQLmxlbmd0aD10KSl9cmV0dXJue3Byb2plY3RlZFBpeGVsU2l6ZTpmLHNjYWxlczpQLHNyY1Jlc29sdXRpb25zOmIsaXNDdXN0b21UaWxpbmdTY2hlbWU6IWd9fWV4cG9ydHtvZSBhcyBjb21wdXRlUHJvamVjdGVkU2NhbGVzLFMgYXMgZGVmYXVsdEdyaWRTcGFjaW5nLGIgYXMgZGVmYXVsdFByb2plY3Rpb25Ub2xlcmFuY2VJblBpeGVscyxUIGFzIGdldERlZmF1bHREYXR1bVRyYW5zZm9ybWF0aW9uRm9yRGF0YXNldCx6IGFzIGdldFByb2plY3RlZEdyaWRQb2ludHMsJCBhcyBnZXRQcm9qZWN0aW9uT2Zmc2V0R3JpZCxWIGFzIGdldFJhc3RlckRhdGFzZXRBbGlnbm1lbnRJbmZvLEsgYXMgZ2V0V29ybGRXaWR0aCxRIGFzIGdldFdvcmxkV3JhcENvdW50LGsgYXMgbG9hZCxQIGFzIG1pbmltdW1HcmlkU3BhY2luZyxxIGFzIHByb2plY3RFeHRlbnQsXyBhcyBwcm9qZWN0UG9pbnQsSiBhcyBwcm9qZWN0UG9seWdvbixDIGFzIHByb2plY3RSZXNvbHV0aW9uLGQgYXMgcmVxdWlyZVBFLG5lIGFzIHNuYXBFeHRlbnQsaWUgYXMgc25hcFB5cmFtaWR9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18486\n");

/***/ }),

/***/ 12646:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ a)\n/* harmony export */ });\n/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(36663);\n/* harmony import */ var _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82064);\n/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81977);\n/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7283);\n/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7753);\n/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39994);\n/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(40266);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet t=class extends _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_0__/* .JSONSupport */ .wq{get affectsPixelSize(){return!1}forwardTransform(r){return r}inverseTransform(r){return r}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_6__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__/* .property */ .Cb)()],t.prototype,\"affectsPixelSize\",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_6__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__/* .property */ .Cb)({json:{write:!0}})],t.prototype,\"spatialReference\",void 0),t=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_6__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_5__/* .subclass */ .j)(\"esri.layers.support.rasterTransforms.BaseRasterTransform\")],t);const a=t;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI2NDYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lZLG9CQUFvQix1RUFBQyxDQUFDLHVCQUF1QixTQUFTLG9CQUFvQixTQUFTLG9CQUFvQixXQUFXLHVEQUFDLEVBQUUsZ0dBQUMseUNBQXlDLHVEQUFDLEVBQUUsZ0dBQUMsRUFBRSxNQUFNLFVBQVUsNENBQTRDLHVEQUFDLEVBQUUsK0ZBQUMsaUVBQWlFLFVBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9sYXllcnMvc3VwcG9ydC9yYXN0ZXJUcmFuc2Zvcm1zL0Jhc2VSYXN0ZXJUcmFuc2Zvcm0uanM/NmZiNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yNy9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0e18gYXMgcn1mcm9tXCIuLi8uLi8uLi9jaHVua3MvdHNsaWIuZXM2LmpzXCI7aW1wb3J0e0pTT05TdXBwb3J0IGFzIHN9ZnJvbVwiLi4vLi4vLi4vY29yZS9KU09OU3VwcG9ydC5qc1wiO2ltcG9ydHtwcm9wZXJ0eSBhcyBlfWZyb21cIi4uLy4uLy4uL2NvcmUvYWNjZXNzb3JTdXBwb3J0L2RlY29yYXRvcnMvcHJvcGVydHkuanNcIjtpbXBvcnRcIi4uLy4uLy4uL2NvcmUvYWNjZXNzb3JTdXBwb3J0L2Vuc3VyZVR5cGUuanNcIjtpbXBvcnRcIi4uLy4uLy4uL2NvcmUvYXJyYXlVdGlscy5qc1wiO2ltcG9ydFwiLi4vLi4vLi4vY29yZS9oYXMuanNcIjtpbXBvcnR7c3ViY2xhc3MgYXMgb31mcm9tXCIuLi8uLi8uLi9jb3JlL2FjY2Vzc29yU3VwcG9ydC9kZWNvcmF0b3JzL3N1YmNsYXNzLmpzXCI7bGV0IHQ9Y2xhc3MgZXh0ZW5kcyBze2dldCBhZmZlY3RzUGl4ZWxTaXplKCl7cmV0dXJuITF9Zm9yd2FyZFRyYW5zZm9ybShyKXtyZXR1cm4gcn1pbnZlcnNlVHJhbnNmb3JtKHIpe3JldHVybiByfX07cihbZSgpXSx0LnByb3RvdHlwZSxcImFmZmVjdHNQaXhlbFNpemVcIixudWxsKSxyKFtlKHtqc29uOnt3cml0ZTohMH19KV0sdC5wcm90b3R5cGUsXCJzcGF0aWFsUmVmZXJlbmNlXCIsdm9pZCAwKSx0PXIoW28oXCJlc3JpLmxheWVycy5zdXBwb3J0LnJhc3RlclRyYW5zZm9ybXMuQmFzZVJhc3RlclRyYW5zZm9ybVwiKV0sdCk7Y29uc3QgYT10O2V4cG9ydHthIGFzIGRlZmF1bHR9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///12646\n");

/***/ }),

/***/ 2066:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ n)\n/* harmony export */ });\n/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(36663);\n/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81977);\n/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7283);\n/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7753);\n/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(39994);\n/* harmony import */ var _core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79438);\n/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(40266);\n/* harmony import */ var _BaseRasterTransform_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12646);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar a;let c=a=class extends _BaseRasterTransform_js__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z{constructor(){super(...arguments),this.type=\"gcs-shift\",this.tolerance=1e-8}forwardTransform(r){return\"point\"===(r=r.clone()).type?(r.x>180+this.tolerance&&(r.x-=360),r):(r.xmin>=180-this.tolerance?(r.xmax-=360,r.xmin-=360):r.xmax>180+this.tolerance&&(r.xmin=-180,r.xmax=180),r)}inverseTransform(r){return\"point\"===(r=r.clone()).type?(r.x<-this.tolerance&&(r.x+=360),r):(r.xmin<-this.tolerance&&(r.xmin+=360,r.xmax+=360),r)}clone(){return new a({tolerance:this.tolerance})}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_7__._)([(0,_core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_4__/* .enumeration */ .J)({GCSShiftXform:\"gcs-shift\"})],c.prototype,\"type\",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_7__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_0__/* .property */ .Cb)()],c.prototype,\"tolerance\",void 0),c=a=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_7__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_5__/* .subclass */ .j)(\"esri.layers.support.rasterTransforms.GCSShiftTransform\")],c);const n=c;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA2Ni5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ29jLE1BQU0sc0JBQXNCLHdFQUFDLENBQUMsY0FBYyw4REFBOEQsb0JBQW9CLHVMQUF1TCxvQkFBb0IsNkhBQTZILFFBQVEsY0FBYyx5QkFBeUIsSUFBSSx1REFBQyxFQUFFLHFHQUFDLEVBQUUsMEJBQTBCLDhCQUE4Qix1REFBQyxFQUFFLGdHQUFDLHdDQUF3Qyx1REFBQyxFQUFFLCtGQUFDLCtEQUErRCxVQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvbGF5ZXJzL3N1cHBvcnQvcmFzdGVyVHJhbnNmb3Jtcy9HQ1NTaGlmdFRyYW5zZm9ybS5qcz9iMmVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI3L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnR7XyBhcyByfWZyb21cIi4uLy4uLy4uL2NodW5rcy90c2xpYi5lczYuanNcIjtpbXBvcnR7cHJvcGVydHkgYXMgb31mcm9tXCIuLi8uLi8uLi9jb3JlL2FjY2Vzc29yU3VwcG9ydC9kZWNvcmF0b3JzL3Byb3BlcnR5LmpzXCI7aW1wb3J0XCIuLi8uLi8uLi9jb3JlL2FjY2Vzc29yU3VwcG9ydC9lbnN1cmVUeXBlLmpzXCI7aW1wb3J0XCIuLi8uLi8uLi9jb3JlL2FycmF5VXRpbHMuanNcIjtpbXBvcnRcIi4uLy4uLy4uL2NvcmUvaGFzLmpzXCI7aW1wb3J0e2VudW1lcmF0aW9uIGFzIGV9ZnJvbVwiLi4vLi4vLi4vY29yZS9hY2Nlc3NvclN1cHBvcnQvZGVjb3JhdG9ycy9lbnVtZXJhdGlvbi5qc1wiO2ltcG9ydHtzdWJjbGFzcyBhcyB0fWZyb21cIi4uLy4uLy4uL2NvcmUvYWNjZXNzb3JTdXBwb3J0L2RlY29yYXRvcnMvc3ViY2xhc3MuanNcIjtpbXBvcnQgcyBmcm9tXCIuL0Jhc2VSYXN0ZXJUcmFuc2Zvcm0uanNcIjt2YXIgYTtsZXQgYz1hPWNsYXNzIGV4dGVuZHMgc3tjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy50eXBlPVwiZ2NzLXNoaWZ0XCIsdGhpcy50b2xlcmFuY2U9MWUtOH1mb3J3YXJkVHJhbnNmb3JtKHIpe3JldHVyblwicG9pbnRcIj09PShyPXIuY2xvbmUoKSkudHlwZT8oci54PjE4MCt0aGlzLnRvbGVyYW5jZSYmKHIueC09MzYwKSxyKTooci54bWluPj0xODAtdGhpcy50b2xlcmFuY2U/KHIueG1heC09MzYwLHIueG1pbi09MzYwKTpyLnhtYXg+MTgwK3RoaXMudG9sZXJhbmNlJiYoci54bWluPS0xODAsci54bWF4PTE4MCkscil9aW52ZXJzZVRyYW5zZm9ybShyKXtyZXR1cm5cInBvaW50XCI9PT0ocj1yLmNsb25lKCkpLnR5cGU/KHIueDwtdGhpcy50b2xlcmFuY2UmJihyLngrPTM2MCkscik6KHIueG1pbjwtdGhpcy50b2xlcmFuY2UmJihyLnhtaW4rPTM2MCxyLnhtYXgrPTM2MCkscil9Y2xvbmUoKXtyZXR1cm4gbmV3IGEoe3RvbGVyYW5jZTp0aGlzLnRvbGVyYW5jZX0pfX07cihbZSh7R0NTU2hpZnRYZm9ybTpcImdjcy1zaGlmdFwifSldLGMucHJvdG90eXBlLFwidHlwZVwiLHZvaWQgMCkscihbbygpXSxjLnByb3RvdHlwZSxcInRvbGVyYW5jZVwiLHZvaWQgMCksYz1hPXIoW3QoXCJlc3JpLmxheWVycy5zdXBwb3J0LnJhc3RlclRyYW5zZm9ybXMuR0NTU2hpZnRUcmFuc2Zvcm1cIildLGMpO2NvbnN0IG49YztleHBvcnR7biBhcyBkZWZhdWx0fTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2066\n");

/***/ }),

/***/ 35952:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ y)\n/* harmony export */ });\n/* harmony import */ var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(36663);\n/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(91957);\n/* harmony import */ var _core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81977);\n/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7283);\n/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7753);\n/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39994);\n/* harmony import */ var _core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(79438);\n/* harmony import */ var _core_accessorSupport_decorators_reader_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(34248);\n/* harmony import */ var _core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(40266);\n/* harmony import */ var _core_accessorSupport_decorators_writer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(39835);\n/* harmony import */ var _BaseRasterTransform_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(12646);\n/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(67666);\n/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(91772);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar l;function a(e,r,o){const{x:t,y:s}=r;if(o<2){return{x:e[0]+t*e[2]+s*e[4],y:e[1]+t*e[3]+s*e[5]}}if(2===o){const r=t*t,o=s*s,i=t*s;return{x:e[0]+t*e[2]+s*e[4]+r*e[6]+i*e[8]+o*e[10],y:e[1]+t*e[3]+s*e[5]+r*e[7]+i*e[9]+o*e[11]}}const i=t*t,n=s*s,f=t*s,p=i*t,l=i*s,a=t*n,c=s*n;return{x:e[0]+t*e[2]+s*e[4]+i*e[6]+f*e[8]+n*e[10]+p*e[12]+l*e[14]+a*e[16]+c*e[18],y:e[1]+t*e[3]+s*e[5]+i*e[7]+f*e[9]+n*e[11]+p*e[13]+l*e[15]+a*e[17]+c*e[19]}}function c(e,r,o){const{xmin:t,ymin:s,xmax:i,ymax:n,spatialReference:f}=r;let l=[];if(o<2)l.push({x:t,y:n}),l.push({x:i,y:n}),l.push({x:t,y:s}),l.push({x:i,y:s});else{let e=10;for(let r=0;r<e;r++)l.push({x:t,y:s+(n-s)*r/(e-1)}),l.push({x:i,y:s+(n-s)*r/(e-1)});e=8;for(let r=1;r<=e;r++)l.push({x:t+(i-t)*r/e,y:s}),l.push({x:t+(i-t)*r/e,y:n})}l=l.map((r=>a(e,r,o)));const c=l.map((e=>e.x)),u=l.map((e=>e.y));return new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_11__/* [\"default\"] */ .Z({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:f})}function u(e){const[r,o,t,s,i,n]=e,f=t*n-i*s,p=i*s-t*n;return[(i*o-r*n)/f,(t*o-r*s)/p,n/f,s/p,-i/f,-t/p]}let m=l=class extends _BaseRasterTransform_js__WEBPACK_IMPORTED_MODULE_9__/* [\"default\"] */ .Z{constructor(){super(...arguments),this.polynomialOrder=1,this.type=\"polynomial\"}readForwardCoefficients(e,r){const{coeffX:o,coeffY:t}=r;if(!o?.length||!t?.length||o.length!==t.length)return null;const s=[];for(let i=0;i<o.length;i++)s.push(o[i]),s.push(t[i]);return s}writeForwardCoefficients(e,r,o){const t=[],s=[];for(let i=0;i<e?.length;i++)i%2==0?t.push(e[i]):s.push(e[i]);r.coeffX=t,r.coeffY=s}get inverseCoefficients(){let e=this._get(\"inverseCoefficients\");const r=this._get(\"forwardCoefficients\");return!e&&r&&this.polynomialOrder<2&&(e=u(r)),e}set inverseCoefficients(e){this._set(\"inverseCoefficients\",e)}readInverseCoefficients(e,r){const{inverseCoeffX:o,inverseCoeffY:t}=r;if(!o?.length||!t?.length||o.length!==t.length)return null;const s=[];for(let i=0;i<o.length;i++)s.push(o[i]),s.push(t[i]);return s}writeInverseCoefficients(e,r,o){const t=[],s=[];for(let i=0;i<e?.length;i++)i%2==0?t.push(e[i]):s.push(e[i]);r.inverseCoeffX=t,r.inverseCoeffY=s}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if(\"point\"===e.type){const r=a(this.forwardCoefficients,e,this.polynomialOrder);return new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if(\"point\"===e.type){const r=a(this.inverseCoefficients,e,this.polynomialOrder);return new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new l({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__/* .property */ .Cb)({json:{write:!0}})],m.prototype,\"polynomialOrder\",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__/* .property */ .Cb)()],m.prototype,\"forwardCoefficients\",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_reader_js__WEBPACK_IMPORTED_MODULE_6__/* .reader */ .r)(\"forwardCoefficients\",[\"coeffX\",\"coeffY\"])],m.prototype,\"readForwardCoefficients\",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_writer_js__WEBPACK_IMPORTED_MODULE_8__/* .writer */ .c)(\"forwardCoefficients\")],m.prototype,\"writeForwardCoefficients\",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__/* .property */ .Cb)({json:{write:!0}})],m.prototype,\"inverseCoefficients\",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_reader_js__WEBPACK_IMPORTED_MODULE_6__/* .reader */ .r)(\"inverseCoefficients\",[\"inverseCoeffX\",\"inverseCoeffY\"])],m.prototype,\"readInverseCoefficients\",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_writer_js__WEBPACK_IMPORTED_MODULE_8__/* .writer */ .c)(\"inverseCoefficients\")],m.prototype,\"writeInverseCoefficients\",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__/* .property */ .Cb)()],m.prototype,\"affectsPixelSize\",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_5__/* .enumeration */ .J)({PolynomialXform:\"polynomial\"})],m.prototype,\"type\",void 0),m=l=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_12__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__/* .subclass */ .j)(\"esri.layers.support.rasterTransforms.PolynomialTransform\")],m);const y=m;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU5NTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQzhzQixNQUFNLGtCQUFrQixNQUFNLFFBQVEsR0FBRyxRQUFRLE9BQU8sMkNBQTJDLFVBQVUsd0JBQXdCLE9BQU8sdUZBQXVGLGdEQUFnRCxPQUFPLHVKQUF1SixrQkFBa0IsTUFBTSwrQ0FBK0MsR0FBRyxTQUFTLGVBQWUsUUFBUSxVQUFVLFFBQVEsVUFBVSxRQUFRLFVBQVUsUUFBUSxFQUFFLEtBQUssU0FBUyxZQUFZLElBQUksWUFBWSxzQkFBc0IsVUFBVSxzQkFBc0IsRUFBRSxJQUFJLFlBQVksS0FBSyxZQUFZLGtCQUFrQixVQUFVLGtCQUFrQixFQUFFLHVCQUF1QiwwQ0FBMEMsV0FBVyxxRUFBQyxFQUFFLG1JQUFtSSxFQUFFLGNBQWMseUNBQXlDLGtEQUFrRCxzQkFBc0Isd0VBQUMsQ0FBQyxjQUFjLGtFQUFrRSw2QkFBNkIsTUFBTSxrQkFBa0IsR0FBRywyREFBMkQsV0FBVyxZQUFZLFdBQVcsOEJBQThCLFNBQVMsZ0NBQWdDLGdCQUFnQixZQUFZLFlBQVkscUNBQXFDLHNCQUFzQiwwQkFBMEIsdUNBQXVDLHlDQUF5QyxnREFBZ0QsMkJBQTJCLG1DQUFtQyw2QkFBNkIsTUFBTSxnQ0FBZ0MsR0FBRywyREFBMkQsV0FBVyxZQUFZLFdBQVcsOEJBQThCLFNBQVMsZ0NBQWdDLGdCQUFnQixZQUFZLFlBQVkscUNBQXFDLG9DQUFvQyx1QkFBdUIsOEJBQThCLG9CQUFvQixxQkFBcUIsMkRBQTJELFdBQVcsb0VBQUMsRUFBRSxnREFBZ0QsRUFBRSwwREFBMEQsb0JBQW9CLHFCQUFxQiwyREFBMkQsV0FBVyxvRUFBQyxFQUFFLGdEQUFnRCxFQUFFLDBEQUEwRCxRQUFRLGNBQWMscU1BQXFNLElBQUksd0RBQUMsRUFBRSxnR0FBQyxFQUFFLE1BQU0sVUFBVSx5Q0FBeUMsd0RBQUMsRUFBRSxnR0FBQyw4Q0FBOEMsd0RBQUMsRUFBRSwyRkFBQyx5RkFBeUYsd0RBQUMsRUFBRSwyRkFBQyxzRUFBc0Usd0RBQUMsRUFBRSxnR0FBQyxFQUFFLE1BQU0sVUFBVSwyQ0FBMkMsd0RBQUMsRUFBRSwyRkFBQyx1R0FBdUcsd0RBQUMsRUFBRSwyRkFBQyxzRUFBc0Usd0RBQUMsRUFBRSxnR0FBQyx5Q0FBeUMsd0RBQUMsRUFBRSxxR0FBQyxFQUFFLDZCQUE2QixrQ0FBa0Msd0RBQUMsRUFBRSwrRkFBQyxpRUFBaUUsVUFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2xheWVycy9zdXBwb3J0L3Jhc3RlclRyYW5zZm9ybXMvUG9seW5vbWlhbFRyYW5zZm9ybS5qcz9lNGQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI3L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnR7XyBhcyBlfWZyb21cIi4uLy4uLy4uL2NodW5rcy90c2xpYi5lczYuanNcIjtpbXBvcnRcIi4uLy4uLy4uL2dlb21ldHJ5LmpzXCI7aW1wb3J0e3Byb3BlcnR5IGFzIHJ9ZnJvbVwiLi4vLi4vLi4vY29yZS9hY2Nlc3NvclN1cHBvcnQvZGVjb3JhdG9ycy9wcm9wZXJ0eS5qc1wiO2ltcG9ydFwiLi4vLi4vLi4vY29yZS9hY2Nlc3NvclN1cHBvcnQvZW5zdXJlVHlwZS5qc1wiO2ltcG9ydFwiLi4vLi4vLi4vY29yZS9hcnJheVV0aWxzLmpzXCI7aW1wb3J0XCIuLi8uLi8uLi9jb3JlL2hhcy5qc1wiO2ltcG9ydHtlbnVtZXJhdGlvbiBhcyBvfWZyb21cIi4uLy4uLy4uL2NvcmUvYWNjZXNzb3JTdXBwb3J0L2RlY29yYXRvcnMvZW51bWVyYXRpb24uanNcIjtpbXBvcnR7cmVhZGVyIGFzIHR9ZnJvbVwiLi4vLi4vLi4vY29yZS9hY2Nlc3NvclN1cHBvcnQvZGVjb3JhdG9ycy9yZWFkZXIuanNcIjtpbXBvcnR7c3ViY2xhc3MgYXMgc31mcm9tXCIuLi8uLi8uLi9jb3JlL2FjY2Vzc29yU3VwcG9ydC9kZWNvcmF0b3JzL3N1YmNsYXNzLmpzXCI7aW1wb3J0e3dyaXRlciBhcyBpfWZyb21cIi4uLy4uLy4uL2NvcmUvYWNjZXNzb3JTdXBwb3J0L2RlY29yYXRvcnMvd3JpdGVyLmpzXCI7aW1wb3J0IG4gZnJvbVwiLi9CYXNlUmFzdGVyVHJhbnNmb3JtLmpzXCI7aW1wb3J0IGYgZnJvbVwiLi4vLi4vLi4vZ2VvbWV0cnkvUG9pbnQuanNcIjtpbXBvcnQgcCBmcm9tXCIuLi8uLi8uLi9nZW9tZXRyeS9FeHRlbnQuanNcIjt2YXIgbDtmdW5jdGlvbiBhKGUscixvKXtjb25zdHt4OnQseTpzfT1yO2lmKG88Mil7cmV0dXJue3g6ZVswXSt0KmVbMl0rcyplWzRdLHk6ZVsxXSt0KmVbM10rcyplWzVdfX1pZigyPT09byl7Y29uc3Qgcj10KnQsbz1zKnMsaT10KnM7cmV0dXJue3g6ZVswXSt0KmVbMl0rcyplWzRdK3IqZVs2XStpKmVbOF0rbyplWzEwXSx5OmVbMV0rdCplWzNdK3MqZVs1XStyKmVbN10raSplWzldK28qZVsxMV19fWNvbnN0IGk9dCp0LG49cypzLGY9dCpzLHA9aSp0LGw9aSpzLGE9dCpuLGM9cypuO3JldHVybnt4OmVbMF0rdCplWzJdK3MqZVs0XStpKmVbNl0rZiplWzhdK24qZVsxMF0rcCplWzEyXStsKmVbMTRdK2EqZVsxNl0rYyplWzE4XSx5OmVbMV0rdCplWzNdK3MqZVs1XStpKmVbN10rZiplWzldK24qZVsxMV0rcCplWzEzXStsKmVbMTVdK2EqZVsxN10rYyplWzE5XX19ZnVuY3Rpb24gYyhlLHIsbyl7Y29uc3R7eG1pbjp0LHltaW46cyx4bWF4OmkseW1heDpuLHNwYXRpYWxSZWZlcmVuY2U6Zn09cjtsZXQgbD1bXTtpZihvPDIpbC5wdXNoKHt4OnQseTpufSksbC5wdXNoKHt4OmkseTpufSksbC5wdXNoKHt4OnQseTpzfSksbC5wdXNoKHt4OmkseTpzfSk7ZWxzZXtsZXQgZT0xMDtmb3IobGV0IHI9MDtyPGU7cisrKWwucHVzaCh7eDp0LHk6cysobi1zKSpyLyhlLTEpfSksbC5wdXNoKHt4OmkseTpzKyhuLXMpKnIvKGUtMSl9KTtlPTg7Zm9yKGxldCByPTE7cjw9ZTtyKyspbC5wdXNoKHt4OnQrKGktdCkqci9lLHk6c30pLGwucHVzaCh7eDp0KyhpLXQpKnIvZSx5Om59KX1sPWwubWFwKChyPT5hKGUscixvKSkpO2NvbnN0IGM9bC5tYXAoKGU9PmUueCkpLHU9bC5tYXAoKGU9PmUueSkpO3JldHVybiBuZXcgcCh7eG1pbjpNYXRoLm1pbi5hcHBseShudWxsLGMpLHhtYXg6TWF0aC5tYXguYXBwbHkobnVsbCxjKSx5bWluOk1hdGgubWluLmFwcGx5KG51bGwsdSkseW1heDpNYXRoLm1heC5hcHBseShudWxsLHUpLHNwYXRpYWxSZWZlcmVuY2U6Zn0pfWZ1bmN0aW9uIHUoZSl7Y29uc3RbcixvLHQscyxpLG5dPWUsZj10Km4taSpzLHA9aSpzLXQqbjtyZXR1cm5bKGkqby1yKm4pL2YsKHQqby1yKnMpL3Asbi9mLHMvcCwtaS9mLC10L3BdfWxldCBtPWw9Y2xhc3MgZXh0ZW5kcyBue2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLnBvbHlub21pYWxPcmRlcj0xLHRoaXMudHlwZT1cInBvbHlub21pYWxcIn1yZWFkRm9yd2FyZENvZWZmaWNpZW50cyhlLHIpe2NvbnN0e2NvZWZmWDpvLGNvZWZmWTp0fT1yO2lmKCFvPy5sZW5ndGh8fCF0Py5sZW5ndGh8fG8ubGVuZ3RoIT09dC5sZW5ndGgpcmV0dXJuIG51bGw7Y29uc3Qgcz1bXTtmb3IobGV0IGk9MDtpPG8ubGVuZ3RoO2krKylzLnB1c2gob1tpXSkscy5wdXNoKHRbaV0pO3JldHVybiBzfXdyaXRlRm9yd2FyZENvZWZmaWNpZW50cyhlLHIsbyl7Y29uc3QgdD1bXSxzPVtdO2ZvcihsZXQgaT0wO2k8ZT8ubGVuZ3RoO2krKylpJTI9PTA/dC5wdXNoKGVbaV0pOnMucHVzaChlW2ldKTtyLmNvZWZmWD10LHIuY29lZmZZPXN9Z2V0IGludmVyc2VDb2VmZmljaWVudHMoKXtsZXQgZT10aGlzLl9nZXQoXCJpbnZlcnNlQ29lZmZpY2llbnRzXCIpO2NvbnN0IHI9dGhpcy5fZ2V0KFwiZm9yd2FyZENvZWZmaWNpZW50c1wiKTtyZXR1cm4hZSYmciYmdGhpcy5wb2x5bm9taWFsT3JkZXI8MiYmKGU9dShyKSksZX1zZXQgaW52ZXJzZUNvZWZmaWNpZW50cyhlKXt0aGlzLl9zZXQoXCJpbnZlcnNlQ29lZmZpY2llbnRzXCIsZSl9cmVhZEludmVyc2VDb2VmZmljaWVudHMoZSxyKXtjb25zdHtpbnZlcnNlQ29lZmZYOm8saW52ZXJzZUNvZWZmWTp0fT1yO2lmKCFvPy5sZW5ndGh8fCF0Py5sZW5ndGh8fG8ubGVuZ3RoIT09dC5sZW5ndGgpcmV0dXJuIG51bGw7Y29uc3Qgcz1bXTtmb3IobGV0IGk9MDtpPG8ubGVuZ3RoO2krKylzLnB1c2gob1tpXSkscy5wdXNoKHRbaV0pO3JldHVybiBzfXdyaXRlSW52ZXJzZUNvZWZmaWNpZW50cyhlLHIsbyl7Y29uc3QgdD1bXSxzPVtdO2ZvcihsZXQgaT0wO2k8ZT8ubGVuZ3RoO2krKylpJTI9PTA/dC5wdXNoKGVbaV0pOnMucHVzaChlW2ldKTtyLmludmVyc2VDb2VmZlg9dCxyLmludmVyc2VDb2VmZlk9c31nZXQgYWZmZWN0c1BpeGVsU2l6ZSgpe3JldHVybiB0aGlzLnBvbHlub21pYWxPcmRlcj4wfWZvcndhcmRUcmFuc2Zvcm0oZSl7aWYoXCJwb2ludFwiPT09ZS50eXBlKXtjb25zdCByPWEodGhpcy5mb3J3YXJkQ29lZmZpY2llbnRzLGUsdGhpcy5wb2x5bm9taWFsT3JkZXIpO3JldHVybiBuZXcgZih7eDpyLngseTpyLnksc3BhdGlhbFJlZmVyZW5jZTplLnNwYXRpYWxSZWZlcmVuY2V9KX1yZXR1cm4gYyh0aGlzLmZvcndhcmRDb2VmZmljaWVudHMsZSx0aGlzLnBvbHlub21pYWxPcmRlcil9aW52ZXJzZVRyYW5zZm9ybShlKXtpZihcInBvaW50XCI9PT1lLnR5cGUpe2NvbnN0IHI9YSh0aGlzLmludmVyc2VDb2VmZmljaWVudHMsZSx0aGlzLnBvbHlub21pYWxPcmRlcik7cmV0dXJuIG5ldyBmKHt4OnIueCx5OnIueSxzcGF0aWFsUmVmZXJlbmNlOmUuc3BhdGlhbFJlZmVyZW5jZX0pfXJldHVybiBjKHRoaXMuaW52ZXJzZUNvZWZmaWNpZW50cyxlLHRoaXMucG9seW5vbWlhbE9yZGVyKX1jbG9uZSgpe3JldHVybiBuZXcgbCh7cG9seW5vbWlhbE9yZGVyOnRoaXMucG9seW5vbWlhbE9yZGVyLGZvcndhcmRDb2VmZmljaWVudHM6dGhpcy5mb3J3YXJkQ29lZmZpY2llbnRzP1suLi50aGlzLmZvcndhcmRDb2VmZmljaWVudHNdOm51bGwsaW52ZXJzZUNvZWZmaWNpZW50czp0aGlzLmludmVyc2VDb2VmZmljaWVudHM/Wy4uLnRoaXMuaW52ZXJzZUNvZWZmaWNpZW50c106bnVsbH0pfX07ZShbcih7anNvbjp7d3JpdGU6ITB9fSldLG0ucHJvdG90eXBlLFwicG9seW5vbWlhbE9yZGVyXCIsdm9pZCAwKSxlKFtyKCldLG0ucHJvdG90eXBlLFwiZm9yd2FyZENvZWZmaWNpZW50c1wiLHZvaWQgMCksZShbdChcImZvcndhcmRDb2VmZmljaWVudHNcIixbXCJjb2VmZlhcIixcImNvZWZmWVwiXSldLG0ucHJvdG90eXBlLFwicmVhZEZvcndhcmRDb2VmZmljaWVudHNcIixudWxsKSxlKFtpKFwiZm9yd2FyZENvZWZmaWNpZW50c1wiKV0sbS5wcm90b3R5cGUsXCJ3cml0ZUZvcndhcmRDb2VmZmljaWVudHNcIixudWxsKSxlKFtyKHtqc29uOnt3cml0ZTohMH19KV0sbS5wcm90b3R5cGUsXCJpbnZlcnNlQ29lZmZpY2llbnRzXCIsbnVsbCksZShbdChcImludmVyc2VDb2VmZmljaWVudHNcIixbXCJpbnZlcnNlQ29lZmZYXCIsXCJpbnZlcnNlQ29lZmZZXCJdKV0sbS5wcm90b3R5cGUsXCJyZWFkSW52ZXJzZUNvZWZmaWNpZW50c1wiLG51bGwpLGUoW2koXCJpbnZlcnNlQ29lZmZpY2llbnRzXCIpXSxtLnByb3RvdHlwZSxcIndyaXRlSW52ZXJzZUNvZWZmaWNpZW50c1wiLG51bGwpLGUoW3IoKV0sbS5wcm90b3R5cGUsXCJhZmZlY3RzUGl4ZWxTaXplXCIsbnVsbCksZShbbyh7UG9seW5vbWlhbFhmb3JtOlwicG9seW5vbWlhbFwifSldLG0ucHJvdG90eXBlLFwidHlwZVwiLHZvaWQgMCksbT1sPWUoW3MoXCJlc3JpLmxheWVycy5zdXBwb3J0LnJhc3RlclRyYW5zZm9ybXMuUG9seW5vbWlhbFRyYW5zZm9ybVwiKV0sbSk7Y29uc3QgeT1tO2V4cG9ydHt5IGFzIGRlZmF1bHR9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35952\n");

/***/ }),

/***/ 78586:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  j: () => (/* binding */ f),\n  c: () => (/* binding */ i)\n});\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterTransforms/GCSShiftTransform.js\nvar GCSShiftTransform = __webpack_require__(2066);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/chunks/tslib.es6.js\nvar tslib_es6 = __webpack_require__(36663);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Logger.js\nvar Logger = __webpack_require__(13802);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/ensureType.js\nvar ensureType = __webpack_require__(7283);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/arrayUtils.js\nvar arrayUtils = __webpack_require__(7753);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/has.js\nvar has = __webpack_require__(39994);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Error.js\nvar Error = __webpack_require__(70375);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/enumeration.js\nvar enumeration = __webpack_require__(79438);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js\nvar subclass = __webpack_require__(40266);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterTransforms/BaseRasterTransform.js\nvar BaseRasterTransform = __webpack_require__(12646);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterTransforms/IdentityTransform.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar e;let p=e=class extends BaseRasterTransform/* default */.Z{constructor(){super(...arguments),this.type=\"identity\"}clone(){return new e}};(0,tslib_es6._)([(0,enumeration/* enumeration */.J)({IdentityXform:\"identity\"})],p.prototype,\"type\",void 0),p=e=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.support.rasterTransforms.IdentityTransform\")],p);const a=p;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/rasterTransforms/PolynomialTransform.js\nvar PolynomialTransform = __webpack_require__(35952);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/support/rasterTransforms/utils.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst o={GCSShiftXform:GCSShiftTransform/* default */.Z,IdentityXform:a,PolynomialXform:PolynomialTransform/* default */.Z},utils_e=Object.keys(o);function f(r){const t=r?.type;return!r||utils_e.includes(t)}function i(r){const t=r?.type;if(!t)return null;const n=o[r?.type];if(n){const t=new n;return t.read(r),t}return null}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzg1ODYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ21iLE1BQU0sc0JBQXNCLGtDQUFDLENBQUMsY0FBYyx5Q0FBeUMsUUFBUSxlQUFlLGVBQUMsRUFBRSxrQ0FBQyxFQUFFLHlCQUF5QixrQ0FBa0MsZUFBQyxFQUFFLDRCQUFDLCtEQUErRCxVQUErQjs7Ozs7QUNKbHNCO0FBQ0E7QUFDQTtBQUNBO0FBQ29ILFNBQVMsY0FBYyxnQ0FBQyxlQUFlLENBQUMsaUJBQWlCLGtDQUFDLENBQUMsQ0FBQyxPQUFDLGdCQUFnQixjQUFjLGdCQUFnQixVQUFVLE9BQUMsYUFBYSxjQUFjLGdCQUFnQixrQkFBa0IsbUJBQW1CLE1BQU0sY0FBYyxtQkFBbUIsWUFBaUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2xheWVycy9zdXBwb3J0L3Jhc3RlclRyYW5zZm9ybXMvSWRlbnRpdHlUcmFuc2Zvcm0uanM/Y2IzOCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2xheWVycy9zdXBwb3J0L3Jhc3RlclRyYW5zZm9ybXMvdXRpbHMuanM/ZWViNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yNy9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0e18gYXMgcn1mcm9tXCIuLi8uLi8uLi9jaHVua3MvdHNsaWIuZXM2LmpzXCI7aW1wb3J0XCIuLi8uLi8uLi9jb3JlL0xvZ2dlci5qc1wiO2ltcG9ydFwiLi4vLi4vLi4vY29yZS9hY2Nlc3NvclN1cHBvcnQvZW5zdXJlVHlwZS5qc1wiO2ltcG9ydFwiLi4vLi4vLi4vY29yZS9hcnJheVV0aWxzLmpzXCI7aW1wb3J0XCIuLi8uLi8uLi9jb3JlL2hhcy5qc1wiO2ltcG9ydFwiLi4vLi4vLi4vY29yZS9FcnJvci5qc1wiO2ltcG9ydHtlbnVtZXJhdGlvbiBhcyBvfWZyb21cIi4uLy4uLy4uL2NvcmUvYWNjZXNzb3JTdXBwb3J0L2RlY29yYXRvcnMvZW51bWVyYXRpb24uanNcIjtpbXBvcnR7c3ViY2xhc3MgYXMgc31mcm9tXCIuLi8uLi8uLi9jb3JlL2FjY2Vzc29yU3VwcG9ydC9kZWNvcmF0b3JzL3N1YmNsYXNzLmpzXCI7aW1wb3J0IHQgZnJvbVwiLi9CYXNlUmFzdGVyVHJhbnNmb3JtLmpzXCI7dmFyIGU7bGV0IHA9ZT1jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMudHlwZT1cImlkZW50aXR5XCJ9Y2xvbmUoKXtyZXR1cm4gbmV3IGV9fTtyKFtvKHtJZGVudGl0eVhmb3JtOlwiaWRlbnRpdHlcIn0pXSxwLnByb3RvdHlwZSxcInR5cGVcIix2b2lkIDApLHA9ZT1yKFtzKFwiZXNyaS5sYXllcnMuc3VwcG9ydC5yYXN0ZXJUcmFuc2Zvcm1zLklkZW50aXR5VHJhbnNmb3JtXCIpXSxwKTtjb25zdCBhPXA7ZXhwb3J0e2EgYXMgZGVmYXVsdH07XG4iLCIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yNy9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0IHIgZnJvbVwiLi9HQ1NTaGlmdFRyYW5zZm9ybS5qc1wiO2ltcG9ydCB0IGZyb21cIi4vSWRlbnRpdHlUcmFuc2Zvcm0uanNcIjtpbXBvcnQgbiBmcm9tXCIuL1BvbHlub21pYWxUcmFuc2Zvcm0uanNcIjtjb25zdCBvPXtHQ1NTaGlmdFhmb3JtOnIsSWRlbnRpdHlYZm9ybTp0LFBvbHlub21pYWxYZm9ybTpufSxlPU9iamVjdC5rZXlzKG8pO2Z1bmN0aW9uIGYocil7Y29uc3QgdD1yPy50eXBlO3JldHVybiFyfHxlLmluY2x1ZGVzKHQpfWZ1bmN0aW9uIGkocil7Y29uc3QgdD1yPy50eXBlO2lmKCF0KXJldHVybiBudWxsO2NvbnN0IG49b1tyPy50eXBlXTtpZihuKXtjb25zdCB0PW5ldyBuO3JldHVybiB0LnJlYWQociksdH1yZXR1cm4gbnVsbH1leHBvcnR7ZiBhcyBpc1RyYW5zZm9ybVN1cHBvcnRlZCxpIGFzIHJlYWRUcmFuc2Zvcm19O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///78586\n");

/***/ })

}]);