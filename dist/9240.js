"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([[9240],{

/***/ 60814:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bU: () => (/* binding */ X),\n/* harmony export */   fC: () => (/* binding */ p),\n/* harmony export */   tp: () => (/* binding */ b),\n/* harmony export */   v7: () => (/* binding */ Y)\n/* harmony export */ });\n/* unused harmony exports convertGeohash32ToXY, decodeBase32Char, decodeGeohash, encodeBase32Char, getRelativeGeohash, unpackXBits, unpackYBits */\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst t=16,n=8,o=4,e=2,r=1,c=new Float64Array(2),f=new Float64Array(2),l=(/* unused pure expression or super */ null && (-90)),u=90,h=(/* unused pure expression or super */ null && (-180)),s=180,i=\"0123456789bcdefghjkmnpqrstuvwxyz\";function a(t){return t<=57?t-48:t<=104?t-88:t<=107?t-89:t<=110?t-90:t-91}function g(t){return i[t]}function A(t){return(t[0]+t[1])/2}function d(t,n,o){return t[0]=n,t[1]=o,t}function M(t,n){const o=A(t),e=n,r=!n;t[0]=r*t[0]+e*o,t[1]=r*o+e*t[1]}function w(t,n){const o=n>A(t);return M(t,o),o}function y(i,g){const w=d(c,l,u),y=d(f,h,s);for(let c=0;c<g.length;c++){const f=a(g.charCodeAt(c));c%2==0?(M(y,!!(t&f)),M(y,!!(o&f)),M(y,!!(r&f)),M(w,!!(n&f)),M(w,!!(e&f))):(M(w,!!(t&f)),M(w,!!(o&f)),M(w,!!(r&f)),M(y,!!(n&f)),M(y,!!(e&f)))}return i[0]=A(w),i[1]=A(y),i}function C(t,n){let o=0,e=0,r=30,c=30;for(let f=0;f<n.length;f++){const t=a(n.charCodeAt(f)),l=f%2==0;r-=l?3:2,c-=l?2:3,o|=F(t,l)<<r,e|=j(t,l)<<c}return{geohashX:o,geohashY:e}}function X(t,n){let o=-90,e=90,r=-180,c=180;for(let f=0;f<n;f++){const n=Math.ceil((f+1)/2),l=Math.floor((f+1)/2),u=1-f%2,h=30-(3*n+2*l),s=30-(2*n+3*l),i=3*u+2*(1-u),a=2*u+3*(1-u),g=3*u+7*(1-u)<<s,A=(7*u+3*(1-u)<<h&t.geohashX)>>h,d=(g&t.geohashY)>>s;for(let t=i-1;t>=0;t--){const n=(r+c)/2,o=A&1<<t?1:0;r=(1-o)*r+o*n,c=(1-o)*n+o*c}for(let t=a-1;t>=0;t--){const n=(o+e)/2,r=d&1<<t?1:0;o=(1-r)*o+r*n,e=(1-r)*n+r*e}}return[r,o,c,e]}function Y(t,n,o,e){e%2&&(e+=1);let r=0,c=0,f=-90,l=90,u=-180,h=180;for(let s=0;s<e/2;s++){for(let t=0;t<5;t++){const n=(u+h)/2,e=o>n?1:0;r|=e<<29-(t+5*s),u=(1-e)*u+e*n,h=(1-e)*n+e*h}for(let t=0;t<5;t++){const o=(f+l)/2,e=n>o?1:0;c|=e<<29-(t+5*s),f=(1-e)*f+e*o,l=(1-e)*o+e*l}}t.geohashX=r,t.geohashY=c}function b(t,n,o,e,r){r%2&&(r+=1);let c=0,f=0,l=-90,u=90,h=-180,s=180;for(let i=0;i<r/2;i++){for(let t=0;t<5;t++){const n=(h+s)/2,o=e>n?1:0;c|=o<<29-(t+5*i),h=(1-o)*h+o*n,s=(1-o)*n+o*s}for(let t=0;t<5;t++){const n=(l+u)/2,e=o>n?1:0;f|=e<<29-(t+5*i),l=(1-e)*l+e*n,u=(1-e)*n+e*u}}t[2*n]=c,t[2*n+1]=f}function p(t,n,o){let e=\"\";const r=d(c,-90,90),l=d(f,-180,180);for(let c=0;c<o;c++){let o=0;!(c%2)?(o|=w(l,n)<<4,o|=w(r,t)<<3,o|=w(l,n)<<2,o|=w(r,t)<<1,o|=w(l,n)<<0):(o|=w(r,t)<<4,o|=w(l,n)<<3,o|=w(r,t)<<2,o|=w(l,n)<<1,o|=w(r,t)<<0),e+=g(o)}return e}function x(t,n,c){return c?t&r|(n&r)<<1|(t&e)<<1|(n&e)<<2|(t&o)<<2:n&r|(t&r)<<1|(n&e)<<1|(t&e)<<2|(n&o)<<2}function F(c,f){return f?r&c|(o&c)>>1|(t&c)>>2:(e&c)>>1|(n&c)>>2}function j(c,f){return f?(e&c)>>1|(n&c)>>2:r&c|(o&c)>>1|(t&c)>>2}function k(c,f,l){const u=!((c.length-1)%2),h=c.substring(0,c.length-1),s=a(c.charCodeAt(c.length-1));let i=0,A=0,d=0,M=0;u?(i=8,A=4,d=r&s|(o&s)>>1|(t&s)>>2,M=(e&s)>>1|(n&s)>>2):(i=4,A=8,M=r&s|(o&s)>>1|(t&s)>>2,d=(e&s)>>1|(n&s)>>2);const w=d+f,y=M+l,C=Math.floor(w/i),X=Math.floor(y/A),Y=g(x(w-C*i,y-X*A,u));return c.length>1&&(C||X)?k(h,C,X)+Y:h+Y}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjA4MTQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLG1EQUFHLFVBQVEsb0RBQUksOENBQTRDLGNBQWMsMkRBQTJELGNBQWMsWUFBWSxjQUFjLG9CQUFvQixrQkFBa0IsdUJBQXVCLGdCQUFnQixzQkFBc0IsZ0NBQWdDLGdCQUFnQixlQUFlLGdCQUFnQixnQkFBZ0IsNEJBQTRCLFlBQVksV0FBVyxLQUFLLDJCQUEyQiw2SUFBNkksNkJBQTZCLGdCQUFnQixzQkFBc0IsWUFBWSxXQUFXLEtBQUssb0NBQW9DLDRDQUE0QyxPQUFPLHVCQUF1QixnQkFBZ0IsNEJBQTRCLFlBQVksSUFBSSxLQUFLLHlMQUF5TCxjQUFjLEtBQUssS0FBSyw2QkFBNkIsNEJBQTRCLGNBQWMsS0FBSyxLQUFLLDZCQUE2Qiw2QkFBNkIsZ0JBQWdCLG9CQUFvQixZQUFZLG9DQUFvQyxZQUFZLE1BQU0sS0FBSyxZQUFZLElBQUksS0FBSywwQkFBMEIsNkNBQTZDLFlBQVksSUFBSSxLQUFLLDBCQUEwQiw4Q0FBOEMsMEJBQTBCLHNCQUFzQixZQUFZLG9DQUFvQyxZQUFZLE1BQU0sS0FBSyxZQUFZLElBQUksS0FBSywwQkFBMEIsNkNBQTZDLFlBQVksSUFBSSxLQUFLLDBCQUEwQiw4Q0FBOEMsb0JBQW9CLGtCQUFrQixTQUFTLG9DQUFvQyxZQUFZLElBQUksS0FBSyxRQUFRLHFKQUFxSixTQUFTLGtCQUFrQix5RkFBeUYsZ0JBQWdCLGlEQUFpRCxnQkFBZ0IsaURBQWlELGtCQUFrQixvRkFBb0Ysb0JBQW9CLDhHQUE4Ryw0RUFBNEUseUNBQWlSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9nZW9oYXNoL2dlb2hhc2hVdGlscy5qcz9lNzhmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI3L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5jb25zdCB0PTE2LG49OCxvPTQsZT0yLHI9MSxjPW5ldyBGbG9hdDY0QXJyYXkoMiksZj1uZXcgRmxvYXQ2NEFycmF5KDIpLGw9LTkwLHU9OTAsaD0tMTgwLHM9MTgwLGk9XCIwMTIzNDU2Nzg5YmNkZWZnaGprbW5wcXJzdHV2d3h5elwiO2Z1bmN0aW9uIGEodCl7cmV0dXJuIHQ8PTU3P3QtNDg6dDw9MTA0P3QtODg6dDw9MTA3P3QtODk6dDw9MTEwP3QtOTA6dC05MX1mdW5jdGlvbiBnKHQpe3JldHVybiBpW3RdfWZ1bmN0aW9uIEEodCl7cmV0dXJuKHRbMF0rdFsxXSkvMn1mdW5jdGlvbiBkKHQsbixvKXtyZXR1cm4gdFswXT1uLHRbMV09byx0fWZ1bmN0aW9uIE0odCxuKXtjb25zdCBvPUEodCksZT1uLHI9IW47dFswXT1yKnRbMF0rZSpvLHRbMV09cipvK2UqdFsxXX1mdW5jdGlvbiB3KHQsbil7Y29uc3Qgbz1uPkEodCk7cmV0dXJuIE0odCxvKSxvfWZ1bmN0aW9uIHkoaSxnKXtjb25zdCB3PWQoYyxsLHUpLHk9ZChmLGgscyk7Zm9yKGxldCBjPTA7YzxnLmxlbmd0aDtjKyspe2NvbnN0IGY9YShnLmNoYXJDb2RlQXQoYykpO2MlMj09MD8oTSh5LCEhKHQmZikpLE0oeSwhIShvJmYpKSxNKHksISEociZmKSksTSh3LCEhKG4mZikpLE0odywhIShlJmYpKSk6KE0odywhISh0JmYpKSxNKHcsISEobyZmKSksTSh3LCEhKHImZikpLE0oeSwhIShuJmYpKSxNKHksISEoZSZmKSkpfXJldHVybiBpWzBdPUEodyksaVsxXT1BKHkpLGl9ZnVuY3Rpb24gQyh0LG4pe2xldCBvPTAsZT0wLHI9MzAsYz0zMDtmb3IobGV0IGY9MDtmPG4ubGVuZ3RoO2YrKyl7Y29uc3QgdD1hKG4uY2hhckNvZGVBdChmKSksbD1mJTI9PTA7ci09bD8zOjIsYy09bD8yOjMsb3w9Rih0LGwpPDxyLGV8PWoodCxsKTw8Y31yZXR1cm57Z2VvaGFzaFg6byxnZW9oYXNoWTplfX1mdW5jdGlvbiBYKHQsbil7bGV0IG89LTkwLGU9OTAscj0tMTgwLGM9MTgwO2ZvcihsZXQgZj0wO2Y8bjtmKyspe2NvbnN0IG49TWF0aC5jZWlsKChmKzEpLzIpLGw9TWF0aC5mbG9vcigoZisxKS8yKSx1PTEtZiUyLGg9MzAtKDMqbisyKmwpLHM9MzAtKDIqbiszKmwpLGk9Myp1KzIqKDEtdSksYT0yKnUrMyooMS11KSxnPTMqdSs3KigxLXUpPDxzLEE9KDcqdSszKigxLXUpPDxoJnQuZ2VvaGFzaFgpPj5oLGQ9KGcmdC5nZW9oYXNoWSk+PnM7Zm9yKGxldCB0PWktMTt0Pj0wO3QtLSl7Y29uc3Qgbj0ocitjKS8yLG89QSYxPDx0PzE6MDtyPSgxLW8pKnIrbypuLGM9KDEtbykqbitvKmN9Zm9yKGxldCB0PWEtMTt0Pj0wO3QtLSl7Y29uc3Qgbj0obytlKS8yLHI9ZCYxPDx0PzE6MDtvPSgxLXIpKm8rcipuLGU9KDEtcikqbityKmV9fXJldHVybltyLG8sYyxlXX1mdW5jdGlvbiBZKHQsbixvLGUpe2UlMiYmKGUrPTEpO2xldCByPTAsYz0wLGY9LTkwLGw9OTAsdT0tMTgwLGg9MTgwO2ZvcihsZXQgcz0wO3M8ZS8yO3MrKyl7Zm9yKGxldCB0PTA7dDw1O3QrKyl7Y29uc3Qgbj0odStoKS8yLGU9bz5uPzE6MDtyfD1lPDwyOS0odCs1KnMpLHU9KDEtZSkqdStlKm4saD0oMS1lKSpuK2UqaH1mb3IobGV0IHQ9MDt0PDU7dCsrKXtjb25zdCBvPShmK2wpLzIsZT1uPm8/MTowO2N8PWU8PDI5LSh0KzUqcyksZj0oMS1lKSpmK2UqbyxsPSgxLWUpKm8rZSpsfX10Lmdlb2hhc2hYPXIsdC5nZW9oYXNoWT1jfWZ1bmN0aW9uIGIodCxuLG8sZSxyKXtyJTImJihyKz0xKTtsZXQgYz0wLGY9MCxsPS05MCx1PTkwLGg9LTE4MCxzPTE4MDtmb3IobGV0IGk9MDtpPHIvMjtpKyspe2ZvcihsZXQgdD0wO3Q8NTt0Kyspe2NvbnN0IG49KGgrcykvMixvPWU+bj8xOjA7Y3w9bzw8MjktKHQrNSppKSxoPSgxLW8pKmgrbypuLHM9KDEtbykqbitvKnN9Zm9yKGxldCB0PTA7dDw1O3QrKyl7Y29uc3Qgbj0obCt1KS8yLGU9bz5uPzE6MDtmfD1lPDwyOS0odCs1KmkpLGw9KDEtZSkqbCtlKm4sdT0oMS1lKSpuK2UqdX19dFsyKm5dPWMsdFsyKm4rMV09Zn1mdW5jdGlvbiBwKHQsbixvKXtsZXQgZT1cIlwiO2NvbnN0IHI9ZChjLC05MCw5MCksbD1kKGYsLTE4MCwxODApO2ZvcihsZXQgYz0wO2M8bztjKyspe2xldCBvPTA7IShjJTIpPyhvfD13KGwsbik8PDQsb3w9dyhyLHQpPDwzLG98PXcobCxuKTw8MixvfD13KHIsdCk8PDEsb3w9dyhsLG4pPDwwKToob3w9dyhyLHQpPDw0LG98PXcobCxuKTw8MyxvfD13KHIsdCk8PDIsb3w9dyhsLG4pPDwxLG98PXcocix0KTw8MCksZSs9ZyhvKX1yZXR1cm4gZX1mdW5jdGlvbiB4KHQsbixjKXtyZXR1cm4gYz90JnJ8KG4mcik8PDF8KHQmZSk8PDF8KG4mZSk8PDJ8KHQmbyk8PDI6biZyfCh0JnIpPDwxfChuJmUpPDwxfCh0JmUpPDwyfChuJm8pPDwyfWZ1bmN0aW9uIEYoYyxmKXtyZXR1cm4gZj9yJmN8KG8mYyk+PjF8KHQmYyk+PjI6KGUmYyk+PjF8KG4mYyk+PjJ9ZnVuY3Rpb24gaihjLGYpe3JldHVybiBmPyhlJmMpPj4xfChuJmMpPj4yOnImY3wobyZjKT4+MXwodCZjKT4+Mn1mdW5jdGlvbiBrKGMsZixsKXtjb25zdCB1PSEoKGMubGVuZ3RoLTEpJTIpLGg9Yy5zdWJzdHJpbmcoMCxjLmxlbmd0aC0xKSxzPWEoYy5jaGFyQ29kZUF0KGMubGVuZ3RoLTEpKTtsZXQgaT0wLEE9MCxkPTAsTT0wO3U/KGk9OCxBPTQsZD1yJnN8KG8mcyk+PjF8KHQmcyk+PjIsTT0oZSZzKT4+MXwobiZzKT4+Mik6KGk9NCxBPTgsTT1yJnN8KG8mcyk+PjF8KHQmcyk+PjIsZD0oZSZzKT4+MXwobiZzKT4+Mik7Y29uc3Qgdz1kK2YseT1NK2wsQz1NYXRoLmZsb29yKHcvaSksWD1NYXRoLmZsb29yKHkvQSksWT1nKHgody1DKmkseS1YKkEsdSkpO3JldHVybiBjLmxlbmd0aD4xJiYoQ3x8WCk/ayhoLEMsWCkrWTpoK1l9ZXhwb3J0e0MgYXMgY29udmVydEdlb2hhc2gzMlRvWFksYSBhcyBkZWNvZGVCYXNlMzJDaGFyLHkgYXMgZGVjb2RlR2VvaGFzaCxYIGFzIGRlY29kZUdlb2hhc2hYWSxnIGFzIGVuY29kZUJhc2UzMkNoYXIscCBhcyBlbmNvZGVHZW9oYXNoLGsgYXMgZ2V0UmVsYXRpdmVHZW9oYXNoLGIgYXMgc2V0R2VvaGFzaEJ1ZixZIGFzIHNldEdlb2hhc2hYWSxGIGFzIHVucGFja1hCaXRzLGogYXMgdW5wYWNrWUJpdHN9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///60814\n");

/***/ }),

/***/ 89240:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ LinkChartLayer_S)\n});\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/chunks/tslib.es6.js\nvar tslib_es6 = __webpack_require__(36663);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry.js\nvar geometry = __webpack_require__(91957);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Collection.js + 1 modules\nvar Collection = __webpack_require__(6865);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Error.js\nvar core_Error = __webpack_require__(70375);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Logger.js\nvar Logger = __webpack_require__(13802);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/promiseUtils.js\nvar promiseUtils = __webpack_require__(78668);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js\nvar property = __webpack_require__(81977);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/ensureType.js\nvar ensureType = __webpack_require__(7283);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/arrayUtils.js\nvar arrayUtils = __webpack_require__(7753);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/has.js\nvar has = __webpack_require__(39994);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js\nvar subclass = __webpack_require__(40266);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geohash/geohashUtils.js\nvar geohashUtils = __webpack_require__(60814);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/Layer.js + 1 modules\nvar Layer = __webpack_require__(38481);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js\nvar featureConversionUtils = __webpack_require__(12065);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js\nvar OptimizedGeometry = __webpack_require__(15540);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/Accessor.js + 4 modules\nvar Accessor = __webpack_require__(74396);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/sql.js\nvar sql = __webpack_require__(84684);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Polygon.js\nvar Polygon = __webpack_require__(89542);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/projection.js + 1 modules\nvar projection = __webpack_require__(92376);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js\nvar spatialReferenceUtils = __webpack_require__(35925);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/graphics/OptimizedFeature.js\nvar OptimizedFeature = __webpack_require__(59958);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/knowledgeGraph/SessionMemoryStorage.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst SessionMemoryStorage_r=\"ESRI__DESTINATION_ID\",i=\"ESRI__ORIGIN_ID\";class SessionMemoryStorage_s{constructor(){this._featureLookup=new Map}static getInstance(){return SessionMemoryStorage_s.instance||(SessionMemoryStorage_s.instance=new SessionMemoryStorage_s),SessionMemoryStorage_s.instance}static resetInstance(){SessionMemoryStorage_s.instance&&(SessionMemoryStorage_s.instance=null)}deleteFromStore(e){e.forEach((e=>{this._featureLookup.delete(e)}))}readFromStoreByList(e){const t=[];return e.forEach((e=>{const r=this.readFromStoreById(e);r&&t.push(r)})),t}readFromStoreById(e){return this._featureLookup.get(e)??null}writeToStore(s,o,n){const p=[];return s.forEach((s=>{if(!s||!s.id)return;s.properties||(s.properties=[]);let a,u=null;if(n&&(u=s.properties[n]?(0,featureConversionUtils/* convertFromGeometry */.GH)(s.properties[n]):null),\"originId\"in s&&\"destinationId\"in s&&(s.properties[i]=s.originId,s.properties[SessionMemoryStorage_r]=s.destinationId),s.properties[o]=s.id,s.id&&this._featureLookup.has(s.id)&&this._featureLookup.get(s.id).attributes){const e=this._featureLookup.get(s.id);a=new OptimizedFeature/* OptimizedFeature */.u_(u?JSON.parse(JSON.stringify(u)):e?.geometry?JSON.parse(JSON.stringify(e.geometry)):null,JSON.parse(JSON.stringify(Object.assign(e.attributes,s.properties))),null,s.properties[o])}else a=new OptimizedFeature/* OptimizedFeature */.u_(u?JSON.parse(JSON.stringify(u)):null,s.properties,null,s.properties[o]);this._featureLookup.set(s.id,a),p.push(a)})),p}}\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/kernel.js\nvar kernel = __webpack_require__(88256);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/request.js\nvar request = __webpack_require__(66341);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryResult.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet t=class extends Accessor/* default */.Z{constructor(r){super(r),this.resultRows=[]}};(0,tslib_es6._)([(0,property/* property */.Cb)()],t.prototype,\"resultRows\",void 0),t=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.GraphQueryResult\")],t);const GraphQueryResult_c=t;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryStreamingResult.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet GraphQueryStreamingResult_t=class extends Accessor/* default */.Z{constructor(r){super(r),this.resultRowsStream=new ReadableStream}};(0,tslib_es6._)([(0,property/* property */.Cb)()],GraphQueryStreamingResult_t.prototype,\"resultRowsStream\",void 0),GraphQueryStreamingResult_t=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.GraphQueryResult\")],GraphQueryStreamingResult_t);const c=GraphQueryStreamingResult_t;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/JSONSupport.js + 1 modules\nvar JSONSupport = __webpack_require__(82064);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/SpatialReference.js\nvar SpatialReference = __webpack_require__(14685);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/FieldIndex.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet s=class extends JSONSupport/* JSONSupport */.wq{constructor(o){super(o),this.name=null,this.unique=null,this.ascending=null,this.description=null,this.fieldNames=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],s.prototype,\"name\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],s.prototype,\"unique\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],s.prototype,\"ascending\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],s.prototype,\"description\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:[String],json:{write:!0}})],s.prototype,\"fieldNames\",void 0),s=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.FieldIndex\")],s);const FieldIndex_i=s;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/GraphProperty.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet GraphProperty_i=class extends JSONSupport/* JSONSupport */.wq{constructor(t){super(t),this.name=null,this.alias=null,this.fieldType=null,this.geometryType=null,this.hasM=null,this.hasZ=null,this.nullable=null,this.editable=null,this.required=null,this.defaultVisibility=null,this.systemMaintained=null,this.role=null,this.defaultValue=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],GraphProperty_i.prototype,\"name\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],GraphProperty_i.prototype,\"alias\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],GraphProperty_i.prototype,\"fieldType\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],GraphProperty_i.prototype,\"geometryType\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],GraphProperty_i.prototype,\"hasM\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],GraphProperty_i.prototype,\"hasZ\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],GraphProperty_i.prototype,\"nullable\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],GraphProperty_i.prototype,\"editable\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],GraphProperty_i.prototype,\"required\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],GraphProperty_i.prototype,\"defaultVisibility\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],GraphProperty_i.prototype,\"systemMaintained\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],GraphProperty_i.prototype,\"role\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Object,json:{type:String,write:{writer:(t,e)=>{e.defaultValue=null!=t?t.toString():null}}}})],GraphProperty_i.prototype,\"defaultValue\",void 0),GraphProperty_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.GraphProperty\")],GraphProperty_i);const GraphProperty_s=GraphProperty_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/GraphObjectType.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet GraphObjectType_i=class extends JSONSupport/* JSONSupport */.wq{constructor(r){super(r),this.name=null,this.alias=null,this.role=null,this.strict=null,this.properties=null,this.fieldIndexes=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],GraphObjectType_i.prototype,\"name\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],GraphObjectType_i.prototype,\"alias\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],GraphObjectType_i.prototype,\"role\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],GraphObjectType_i.prototype,\"strict\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:[GraphProperty_s],json:{write:!0}})],GraphObjectType_i.prototype,\"properties\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:[FieldIndex_i],json:{write:!0}})],GraphObjectType_i.prototype,\"fieldIndexes\",void 0),GraphObjectType_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.GraphObjectType\")],GraphObjectType_i);const l=GraphObjectType_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/EntityType.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet e=class extends l{constructor(r){super(r)}};e=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.EntityType\")],e);const EntityType_t=e;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/RelationshipType.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet RelationshipType_t=class extends l{constructor(r){super(r),this.endPoints=[]}};(0,tslib_es6._)([(0,property/* property */.Cb)()],RelationshipType_t.prototype,\"endPoints\",void 0),RelationshipType_t=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.RelationshipType\")],RelationshipType_t);const p=RelationshipType_t;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/DataModel.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet DataModel_l=class extends JSONSupport/* JSONSupport */.wq{constructor(t){super(t),this.timestamp=null,this.spatialReference=null,this.strict=null,this.objectIdField=null,this.globalIdField=null,this.arcgisManaged=null,this.identifierInfo=null,this.searchIndexes=null,this.entityTypes=null,this.relationshipTypes=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:Date,json:{type:Number,write:{writer:(t,e)=>{e.timestamp=t?.getTime()}}}})],DataModel_l.prototype,\"timestamp\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:SpatialReference/* default */.Z,json:{write:!0}})],DataModel_l.prototype,\"spatialReference\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],DataModel_l.prototype,\"strict\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],DataModel_l.prototype,\"objectIdField\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],DataModel_l.prototype,\"globalIdField\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],DataModel_l.prototype,\"arcgisManaged\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],DataModel_l.prototype,\"identifierInfo\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],DataModel_l.prototype,\"searchIndexes\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:[EntityType_t],json:{write:!0}})],DataModel_l.prototype,\"entityTypes\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:[p],json:{write:!0}})],DataModel_l.prototype,\"relationshipTypes\",void 0),DataModel_l=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.DataModel\")],DataModel_l);const DataModel_n=DataModel_l;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/ServiceDefinition.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet ServiceDefinition_i=class extends JSONSupport/* JSONSupport */.wq{constructor(t){super(t),this.capabilities=[],this.supportsSearch=!1,this.supportedQueryFormats=[],this.allowGeometryUpdates=!1,this.searchMaxRecordCount=null,this.serviceCapabilities=null,this.maxRecordCount=null,this.description=\"\",this.copyrightText=\"\",this.units=\"\",this.spatialReference=null,this.currentVersion=null,this.dateFieldsTimeReference=null,this.serviceItemId=\"\",this.supportsDocuments=!1,this.dataEditingNotSupported=!1,this.schemaEditingNotSupported=!1}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:[String],json:{write:!0}})],ServiceDefinition_i.prototype,\"capabilities\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],ServiceDefinition_i.prototype,\"supportsSearch\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:[String],json:{write:!0}})],ServiceDefinition_i.prototype,\"supportedQueryFormats\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],ServiceDefinition_i.prototype,\"allowGeometryUpdates\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{write:!0}})],ServiceDefinition_i.prototype,\"searchMaxRecordCount\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Object,json:{write:!0}})],ServiceDefinition_i.prototype,\"serviceCapabilities\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{write:!0}})],ServiceDefinition_i.prototype,\"maxRecordCount\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],ServiceDefinition_i.prototype,\"description\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],ServiceDefinition_i.prototype,\"copyrightText\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],ServiceDefinition_i.prototype,\"units\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Object,json:{write:!0}})],ServiceDefinition_i.prototype,\"spatialReference\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Number,json:{write:!0}})],ServiceDefinition_i.prototype,\"currentVersion\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Object,json:{write:!0}})],ServiceDefinition_i.prototype,\"dateFieldsTimeReference\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],ServiceDefinition_i.prototype,\"serviceItemId\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],ServiceDefinition_i.prototype,\"supportsDocuments\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],ServiceDefinition_i.prototype,\"dataEditingNotSupported\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Boolean,json:{write:!0}})],ServiceDefinition_i.prototype,\"schemaEditingNotSupported\",void 0),ServiceDefinition_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.ServiceDefinition\")],ServiceDefinition_i);const ServiceDefinition_s=ServiceDefinition_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/KnowledgeGraph.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet KnowledgeGraph_p=class extends JSONSupport/* JSONSupport */.wq{constructor(o){super(o),this.dataModel=null,this.serviceDefinition=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],KnowledgeGraph_p.prototype,\"url\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:DataModel_n,json:{write:!0}})],KnowledgeGraph_p.prototype,\"dataModel\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:ServiceDefinition_s,json:{write:!0}})],KnowledgeGraph_p.prototype,\"serviceDefinition\",void 0),KnowledgeGraph_p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.KnowledgeGraph\")],KnowledgeGraph_p);const KnowledgeGraph_c=KnowledgeGraph_p;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/assets.js\nvar assets = __webpack_require__(36567);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/knowledgeWasmAccess.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst knowledgeWasmAccess_t=\"esri/rest/knowledgeGraph/wasmInterface/\";let knowledgeWasmAccess_s,knowledgeWasmAccess_n=null;async function knowledgeWasmAccess_r(){const e=knowledgeWasmAccess_n??knowledgeWasmAccess_s;if(e)return e;const t=(0,has/* default */.Z)(\"wasm-simd\");return knowledgeWasmAccess_s=o(t),knowledgeWasmAccess_s}async function o(s){if(s){const{default:s}=await __webpack_require__.e(/* import() */ 5169).then(__webpack_require__.bind(__webpack_require__, 15169)).then((e=>e.a));return s({locateFile:s=>(0,assets/* getAssetUrl */.V)(knowledgeWasmAccess_t+s)})}const{default:n}=await __webpack_require__.e(/* import() */ 2611).then(__webpack_require__.bind(__webpack_require__, 83095)).then((e=>e.a));return n({locateFile:s=>(0,assets/* getAssetUrl */.V)(knowledgeWasmAccess_t+s)})}const a={setWasmInterfacePromise:e=>knowledgeWasmAccess_n=e,restoreWasmInterfacePromise:()=>knowledgeWasmAccess_n=null};\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Multipoint.js\nvar Multipoint = __webpack_require__(74304);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Point.js + 1 modules\nvar Point = __webpack_require__(67666);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Polyline.js\nvar Polyline = __webpack_require__(90819);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Geometry.js\nvar Geometry = __webpack_require__(20031);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/queryToWasmEncodedFactories.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction queryToWasmEncodedFactories_a(e,t){const n=new t.ArrayValue;return n.deleteLater(),e.forEach((e=>{n.add_value(m(e,t))})),n}function queryToWasmEncodedFactories_l(e,t){const n=new t.ObjectValue;n.deleteLater();for(const[o,r]of Object.entries(e))n.set_key_value(o,m(r,t));return n}function queryToWasmEncodedFactories_s(i,a){if(i instanceof Multipoint/* default */.Z)return f(i,a);if(i instanceof Point/* default */.Z)return g(i,a);if(i instanceof Polyline/* default */.Z||i instanceof Polygon/* default */.Z)return queryToWasmEncodedFactories_c(i,a);throw new core_Error/* default */.Z(\"knowledge-graph:unsupported-geometry\",\"Only Point, Multipoint, Polyline, and Polygon geometry are supported by ArcGIS Knowledge\",{geometry:i})}function u(e,t){t.input_quantization_parameters={xy_resolution:e.xyResolution,x_false_origin:e.xFalseOrigin,y_false_origin:e.yFalseOrigin,z_resolution:e.zResolution,z_false_origin:e.zFalseOrigin,m_resolution:e.mResolution,m_false_origin:e.mFalseOrigin}}function y(t,n,o){if(!t.extent)throw new core_Error/* default */.Z(\"knowledge-graph:illegal-output-quantization\",\"The Output quantization provided to the encoder had an illegal value as part of its extent\",t.extent);if(!t.quantizeMode)throw new core_Error/* default */.Z(\"knowledge-graph:illegal-output-quantization\",\"The Output quantization contained an illegal mode setting\",t.quantizeMode);if(!t.tolerance)throw new core_Error/* default */.Z(\"knowledge-graph:illegal-output-quantization\",\"The Output quantization contained an illegal tolerance setting\",t.quantizeMode);n.output_quantization_parameters={extent:{xmax:t.extent.xmax,ymax:t.extent.ymax,xmin:t.extent.xmin,ymin:t.extent.ymin},quantize_mode:o.esriQuantizeMode[t.quantizeMode],tolerance:t.tolerance}}function m(e,t){if(null==e)return\"\";if(\"object\"!=typeof e)return e;if(e instanceof Date)return e;if(e instanceof Geometry/* default */.Z)return queryToWasmEncodedFactories_s(e,t);if(Array.isArray(e)){const n=new t.ArrayValue;return n.deleteLater(),e.forEach((e=>{n.add_value(m(e,t))})),n}return queryToWasmEncodedFactories_l(e,t)}function queryToWasmEncodedFactories_c(e,t){const n=new t.GeometryValue;n.deleteLater(),n.has_z=e.hasZ,n.has_m=e.hasM;const i=[],a=[];let l=[];e instanceof Polyline/* default */.Z?(n.geometry_type=t.esriGeometryType.esriGeometryPolyline,l=e.paths):e instanceof Polygon/* default */.Z&&(n.geometry_type=t.esriGeometryType.esriGeometryPolygon,l=e.rings);let s=0,u=0;return l.forEach((e=>{let t=0;e.forEach((e=>{t++,e.forEach((e=>{i[u]=e,u++}))})),a[s]=t,s++})),n.coords=new Float64Array(i),n.lengths=new Uint32Array(a),n}function f(e,t){const n=new t.GeometryValue;n.deleteLater(),n.geometry_type=n.geometry_type=t.esriGeometryType.esriGeometryMultipoint,n.has_z=e.hasZ,n.has_m=e.hasM;const o=[],r=[];r[0]=e.points.length;let i=0;return e.points.forEach((e=>{e.forEach((e=>{o[i]=e,i++}))})),n.coords=new Float64Array(o),n.lengths=new Uint32Array(r),n}function g(e,t){const n=new t.GeometryValue;n.deleteLater(),n.geometry_type=t.esriGeometryType.esriGeometryPoint,n.has_z=e.hasZ,n.has_m=e.hasM;const o=[],r=[];r[0]=1,o[0]=e.x,o[1]=e.y;let i=2;return e.hasZ&&(o[i]=e.z,i++),e.hasM&&(o[i]=e.m,i++),n.coords=new Float64Array(o),n.lengths=new Uint32Array(r),n}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/GraphObject.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet GraphObject_t=class extends JSONSupport/* JSONSupport */.wq{constructor(r){super(r),this.properties=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({json:{write:!0}})],GraphObject_t.prototype,\"properties\",void 0),GraphObject_t=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.GraphObject\")],GraphObject_t);const GraphObject_p=GraphObject_t;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/GraphNamedObject.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet GraphNamedObject_s=class extends GraphObject_p{constructor(r){super(r),this.typeName=null,this.id=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],GraphNamedObject_s.prototype,\"typeName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],GraphNamedObject_s.prototype,\"id\",void 0),GraphNamedObject_s=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.GraphNamedObject\")],GraphNamedObject_s);const GraphNamedObject_p=GraphNamedObject_s;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/Entity.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet Entity_p=class extends GraphNamedObject_p{constructor(r){super(r),this.layoutGeometry=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:Point/* default */.Z,json:{write:!0}})],Entity_p.prototype,\"layoutGeometry\",void 0),Entity_p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.Entity\")],Entity_p);const Entity_c=Entity_p;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/Relationship.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet Relationship_i=class extends GraphNamedObject_p{constructor(o){super(o),this.originId=null,this.destinationId=null,this.layoutGeometry=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],Relationship_i.prototype,\"originId\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:String,json:{write:!0}})],Relationship_i.prototype,\"destinationId\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:Polyline/* default */.Z,json:{write:!0}})],Relationship_i.prototype,\"layoutGeometry\",void 0),Relationship_i=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.Relationship.Relationship\")],Relationship_i);const Relationship_p=Relationship_i;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/updateToWasmEncodedFactories.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction updateToWasmEncodedFactories_r(i,n){if(!i.typeName)throw new core_Error/* default */.Z(\"knowledge-graph:no-type-name\",\"You must indicate the entity/relationship named object type to apply edits\");if(i instanceof Entity_c){const e=new n.EntityValue;e.deleteLater(),e.type_name=i.typeName;for(const[t,o]of Object.entries(i.properties))e.set_key_value(t,updateToWasmEncodedFactories_a(o,n));return i.id&&e.set_id(i.id),e}if(i instanceof Relationship_p){const e=new n.RelationshipValue;e.deleteLater(),e.type_name=i.typeName;for(const[t,o]of Object.entries(i.properties))e.set_key_value(t,updateToWasmEncodedFactories_a(o,n));return i.id&&e.set_id(i.id),i.originId&&i.destinationId&&e.set_related_entity_ids(i.originId,i.destinationId),e}throw new core_Error/* default */.Z(\"knowledge-graph:applyEdits-encoding-failure\",\"Could not determine the type of a named graph object passed to the encoder\")}function updateToWasmEncodedFactories_s(e){return{xy_resolution:e.xyResolution,x_false_origin:e.xFalseOrigin,y_false_origin:e.yFalseOrigin,z_resolution:e.zResolution,z_false_origin:e.zFalseOrigin,m_resolution:e.mResolution,m_false_origin:e.mFalseOrigin}}function updateToWasmEncodedFactories_a(e,t){return null==e?\"\":\"object\"!=typeof e||e instanceof Date?e:e instanceof Geometry/* default */.Z?queryToWasmEncodedFactories_s(e,t):\"\"}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/SearchIndex.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet SearchIndex_t=class extends Accessor/* default */.Z{constructor(r){super(r),this.name=null,this.supportedCategory=null,this.analyzers=[],this.searchProperties=new Map}};(0,tslib_es6._)([(0,property/* property */.Cb)()],SearchIndex_t.prototype,\"name\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],SearchIndex_t.prototype,\"supportedCategory\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],SearchIndex_t.prototype,\"analyzers\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],SearchIndex_t.prototype,\"searchProperties\",void 0),SearchIndex_t=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.SearchIndex\")],SearchIndex_t);const SearchIndex_p=SearchIndex_t;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmDataModelWrapperInterfaces.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar WasmDataModelWrapperInterfaces_e,WasmDataModelWrapperInterfaces_r,WasmDataModelWrapperInterfaces_i,WasmDataModelWrapperInterfaces_t,WasmDataModelWrapperInterfaces_o,WasmDataModelWrapperInterfaces_s,WasmDataModelWrapperInterfaces_y;!function(e){e[e.Regular=0]=\"Regular\",e[e.Provenance=1]=\"Provenance\",e[e.Document=2]=\"Document\"}(WasmDataModelWrapperInterfaces_e||(WasmDataModelWrapperInterfaces_e={})),function(e){e[e.esriFieldTypeSmallInteger=0]=\"esriFieldTypeSmallInteger\",e[e.esriFieldTypeInteger=1]=\"esriFieldTypeInteger\",e[e.esriFieldTypeSingle=2]=\"esriFieldTypeSingle\",e[e.esriFieldTypeDouble=3]=\"esriFieldTypeDouble\",e[e.esriFieldTypeString=4]=\"esriFieldTypeString\",e[e.esriFieldTypeDate=5]=\"esriFieldTypeDate\",e[e.esriFieldTypeOID=6]=\"esriFieldTypeOID\",e[e.esriFieldTypeGeometry=7]=\"esriFieldTypeGeometry\",e[e.esriFieldTypeBlob=8]=\"esriFieldTypeBlob\",e[e.esriFieldTypeRaster=9]=\"esriFieldTypeRaster\",e[e.esriFieldTypeGUID=10]=\"esriFieldTypeGUID\",e[e.esriFieldTypeGlobalID=11]=\"esriFieldTypeGlobalID\",e[e.esriFieldTypeXML=12]=\"esriFieldTypeXML\",e[e.esriFieldTypeBigInteger=13]=\"esriFieldTypeBigInteger\"}(WasmDataModelWrapperInterfaces_r||(WasmDataModelWrapperInterfaces_r={})),function(e){e[e.esriGeometryNull=0]=\"esriGeometryNull\",e[e.esriGeometryPoint=1]=\"esriGeometryPoint\",e[e.esriGeometryMultipoint=2]=\"esriGeometryMultipoint\",e[e.esriGeometryPolyline=3]=\"esriGeometryPolyline\",e[e.esriGeometryPolygon=4]=\"esriGeometryPolygon\",e[e.esriGeometryEnvelope=5]=\"esriGeometryEnvelope\",e[e.esriGeometryAny=6]=\"esriGeometryAny\",e[e.esriGeometryMultiPatch=7]=\"esriGeometryMultiPatch\"}(WasmDataModelWrapperInterfaces_i||(WasmDataModelWrapperInterfaces_i={})),function(e){e[e.esriMethodHintUNSPECIFIED=0]=\"esriMethodHintUNSPECIFIED\",e[e.esriUUIDESRI=1]=\"esriUUIDESRI\",e[e.esriUUIDRFC4122=2]=\"esriUUIDRFC4122\"}(WasmDataModelWrapperInterfaces_t||(WasmDataModelWrapperInterfaces_t={})),function(e){e[e.esriTypeUNSPECIFIED=0]=\"esriTypeUNSPECIFIED\",e[e.esriTypeEntity=1]=\"esriTypeEntity\",e[e.esriTypeRelationship=2]=\"esriTypeRelationship\",e[e.esriTypeBoth=4]=\"esriTypeBoth\"}(WasmDataModelWrapperInterfaces_o||(WasmDataModelWrapperInterfaces_o={})),function(e){e[e.esriGraphPropertyUNSPECIFIED=0]=\"esriGraphPropertyUNSPECIFIED\",e[e.esriGraphPropertyRegular=1]=\"esriGraphPropertyRegular\",e[e.esriGraphPropertyDocumentName=2]=\"esriGraphPropertyDocumentName\",e[e.esriGraphPropertyDocumentTitle=3]=\"esriGraphPropertyDocumentTitle\",e[e.esriGraphPropertyDocumentUrl=4]=\"esriGraphPropertyDocumentUrl\",e[e.esriGraphPropertyDocumentText=5]=\"esriGraphPropertyDocumentText\",e[e.esriGraphPropertyDocumentKeywords=6]=\"esriGraphPropertyDocumentKeywords\",e[e.esriGraphPropertyDocumentContentType=7]=\"esriGraphPropertyDocumentContentType\",e[e.esriGraphPropertyDocumentMetadata=8]=\"esriGraphPropertyDocumentMetadata\",e[e.esriGraphPropertyDocumentFileExtension=9]=\"esriGraphPropertyDocumentFileExtension\"}(WasmDataModelWrapperInterfaces_s||(WasmDataModelWrapperInterfaces_s={})),function(e){e[e.esriIdentifierInfoTypeUNSPECIFIED=0]=\"esriIdentifierInfoTypeUNSPECIFIED\",e[e.esriIdentifierInfoTypeDatabaseNative=1]=\"esriIdentifierInfoTypeDatabaseNative\",e[e.esriIdentifierInfoTypeUniformProperty=2]=\"esriIdentifierInfoTypeUniformProperty\"}(WasmDataModelWrapperInterfaces_y||(WasmDataModelWrapperInterfaces_y={}));\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToDataModelFactories.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction _(i){return i.deleteLater(),new DataModel_n({timestamp:i.timestamp,spatialReference:new SpatialReference/* default */.Z(i.spatial_reference),strict:i.strict,objectIdField:i.objectid_property,globalIdField:i.globalid_property,arcgisManaged:i.arcgis_managed,identifierInfo:{identifierMappingInfo:{identifierInfoType:WasmDataModelWrapperInterfaces_y[i.identifier_info?.identifier_mapping_info?.identifier_info_type?.value],databaseNativeIdentifier:i.identifier_info?.identifier_mapping_info?.database_native_identifier,uniformPropertyIdentifier:{identifierPropertyName:i.identifier_info?.identifier_mapping_info?.uniform_property_identifier?.identifier_property_name}},identifierGenerationInfo:{uuidMethodHint:WasmDataModelWrapperInterfaces_t[i.identifier_info?.identifier_generation_info?.uuid_method_hint?.value]}},searchIndexes:M(i.search_indexes),entityTypes:j(i.entity_types),relationshipTypes:x(i.relationship_types)})}function wasmToDataModelFactories_c(e){return e.deleteLater(),new EntityType_t(b(e))}function wasmToDataModelFactories_g(e){return e.deleteLater(),new FieldIndex_i({name:e.name,unique:e.unique,ascending:e.ascending,description:e.description,fieldNames:I(e.fields)})}function h(e){return e.deleteLater(),new r(b(e))}function b(e){return{name:e.name,alias:e.alias,role:WasmDataModelWrapperInterfaces_e[e.role.value]?WasmDataModelWrapperInterfaces_e[e.role.value]:null,strict:e.strict,properties:T(e.properties),fieldIndexes:w(e.field_indexes)}}function v(e){return e.deleteLater(),new GraphProperty_s({alias:e.alias,name:e.name,fieldType:WasmDataModelWrapperInterfaces_r[e.field_type.value]?WasmDataModelWrapperInterfaces_r[e.field_type.value]:null,geometryType:WasmDataModelWrapperInterfaces_i[e.geometry_type.value]?WasmDataModelWrapperInterfaces_i[e.geometry_type.value]:null,hasM:e.has_m,hasZ:e.has_z,nullable:e.nullable,editable:e.editable,required:e.required,defaultVisibility:e.default_visibility,systemMaintained:e.system_maintained,role:WasmDataModelWrapperInterfaces_s[e.role.value],defaultValue:e.default_value})}function z(e){e.deleteLater();const t=b(e),i=[];for(let n=0;n<e.end_points.size();n++){const t=e.end_points.get(n);i.push({originEntityType:t.origin_entity_type,destinationEntityType:t.dest_entity_type})}return new p(Object.assign({endPoints:i},t))}function j(e){const t=[];for(let i=0;i<e.size();i++)t.push(wasmToDataModelFactories_c(e.get(i)));return t}function I(e){const t=[];for(let i=0;i<e.size();i++)t.push(e.get(i));return t}function T(e){const t=[];for(let i=0;i<e.size();i++)t.push(v(e.get(i)));return t}function w(e){const t=[];for(let i=0;i<e.size();i++)t.push(wasmToDataModelFactories_g(e.get(i)));return t}function x(e){const t=[];for(let i=0;i<e.size();i++)t.push(z(e.get(i)));return t}function M(e){const t=[];for(let i=0;i<e.size();i++){const i=new SearchIndex_p,n=e.get(0);i.name=n.name,i.supportedCategory=WasmDataModelWrapperInterfaces_o[n.supported_category.value];const r=n.analyzers.size();for(let e=0;e<r;e++)i.analyzers.push({name:n.analyzers.get(e).name});for(let e=0;e<n.search_properties.keys().size();e++){const t=n.search_properties.keys().get(e),r=n.search_properties.get(t),a=[];for(let e=0;e<r.property_names.size();e++)a.push(r.property_names.get(e));i.searchProperties.set(t,{propertyNames:a})}t.push(i)}return t}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/ObjectValue.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet ObjectValue_e=class extends GraphObject_p{constructor(r){super(r)}};ObjectValue_e=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.ObjectValue\")],ObjectValue_e);const ObjectValue_t=ObjectValue_e;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/Path.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet Path_p=class extends JSONSupport/* JSONSupport */.wq{constructor(r){super(r),this.path=null}};(0,tslib_es6._)([(0,property/* property */.Cb)({type:[GraphObject_p],json:{write:!0}})],Path_p.prototype,\"path\",void 0),Path_p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.Path\")],Path_p);const Path_c=Path_p;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/KnowledgeWasmInterface.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar E;!function(E){E[E.ESRI_GEOMETRY_NULL=0]=\"ESRI_GEOMETRY_NULL\",E[E.ESRI_GEOMETRY_POINT=1]=\"ESRI_GEOMETRY_POINT\",E[E.ESRI_GEOMETRY_MULTIPOINT=2]=\"ESRI_GEOMETRY_MULTIPOINT\",E[E.ESRI_GEOMETRY_POLYLINE=3]=\"ESRI_GEOMETRY_POLYLINE\",E[E.ESRI_GEOMETRY_POLYGON=4]=\"ESRI_GEOMETRY_POLYGON\",E[E.ESRI_GEOMETRY_ENVELOPE=5]=\"ESRI_GEOMETRY_ENVELOPE\",E[E.ESRI_GEOMETRY_ANY=6]=\"ESRI_GEOMETRY_ANY\",E[E.ESRI_GEOMETRY_MULTI_PATCH=7]=\"ESRI_GEOMETRY_MULTI_PATCH\"}(E||(E={}));\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmQueryWrapperInterfaces.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nvar WasmQueryWrapperInterfaces_T,A;!function(T){T[T.OBJECT=0]=\"OBJECT\",T[T.ENTITY=1]=\"ENTITY\",T[T.RELATIONSHIP=2]=\"RELATIONSHIP\",T[T.PATH=3]=\"PATH\",T[T.ARRAY=4]=\"ARRAY\"}(WasmQueryWrapperInterfaces_T||(WasmQueryWrapperInterfaces_T={})),function(T){T[T.view=0]=\"view\",T[T.edit=1]=\"edit\"}(A||(A={}));\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToGeometryFactories.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction wasmToGeometryFactories_l(o){const e={},r=wasmToGeometryFactories_c(o,e),n=o.lengths,s=o.coords,l=n[0];e.points=[];let m=0;for(let t=0;t<l;t++){const o=[];for(let t=0;t<r;t++)o[t]=s[m],m++;e.points.push(o)}return new Multipoint/* default */.Z(e)}function wasmToGeometryFactories_m(o){const t={};let r=2;wasmToGeometryFactories_c(o,t);const n=o.coords;return t.x=n[0],t.y=n[1],o.has_z&&(t.z=n[r],r++),o.has_m&&(t.m=n[r]),new Point/* default */.Z(t)}function wasmToGeometryFactories_i(o){return new Polyline/* default */.Z(wasmToGeometryFactories_a(o))}function wasmToGeometryFactories_f(o){return new Polygon/* default */.Z(wasmToGeometryFactories_a(o))}function wasmToGeometryFactories_a(t){const e={},r=wasmToGeometryFactories_c(t,e),n=t.lengths,l=t.coords;let m=\"\";if(t.geometry_type.value===E.ESRI_GEOMETRY_POLYGON)m=\"rings\";else{if(t.geometry_type.value!==E.ESRI_GEOMETRY_POLYLINE)throw new core_Error/* default */.Z(\"KnowledgeGraph:illegal-geometry-type\",\"Illegal Geometry type for multipath conversion\");m=\"paths\"}e[m]=[];let i=0;return n.forEach((o=>{const t=[];for(let e=0;e<o;e++){const o=[];for(let t=0;t<r;t++)o[t]=l[i],i++;t.push(o)}e[m].push(t)})),e}function wasmToGeometryFactories_c(o,t){let e=2;return o.has_z?(t.hasZ=o.has_z,e++):t.hasZ=!1,o.has_m?(t.hasM=o.has_m,e++):t.hasM=!1,e}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToQueryResponseObjFactories.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst wasmToQueryResponseObjFactories_=Logger/* default */.Z.getLogger(\"esri.rest.knowledgeGraph.WasmToQueryResponseObjConstructors\"),d={decodedWasmObjToQueryResponseObj:(e,t)=>{if(null==e)return null;if(\"object\"!=typeof e)return e;if(\"getDate\"in e)return e;if(\"geometry_type\"in e)switch(e.geometry_type.value){case null:return null;case E.ESRI_GEOMETRY_POINT:return wasmToGeometryFactories_m(e);case E.ESRI_GEOMETRY_MULTIPOINT:return wasmToGeometryFactories_l(e);case E.ESRI_GEOMETRY_POLYLINE:return wasmToGeometryFactories_i(e);case E.ESRI_GEOMETRY_POLYGON:return wasmToGeometryFactories_f(e);case E.ESRI_GEOMETRY_ENVELOPE:case E.ESRI_GEOMETRY_MULTI_PATCH:return wasmToQueryResponseObjFactories_.warnOnce(\"Envelope and Multipatch are not supported on knowledge entities, but one of those geometry types was detected. Result interpreted as null\"),null;case E.ESRI_GEOMETRY_NULL:case E.ESRI_GEOMETRY_ANY:default:return wasmToQueryResponseObjFactories_.warnOnce(\"Unknown or blank geometry type returned - Result interpreted as null\"),null}else{if(!(\"object_value_type\"in e))return wasmToQueryResponseObjFactories_.warnOnce(\"A decoded value came back of a type that is not supported. Result interpreted as null\"),null;switch(e.object_value_type.value){case WasmQueryWrapperInterfaces_T.OBJECT:return wasmToQueryResponseObjFactories_g(e,t);case WasmQueryWrapperInterfaces_T.ENTITY:return wasmToQueryResponseObjFactories_f(e,t);case WasmQueryWrapperInterfaces_T.RELATIONSHIP:return wasmToQueryResponseObjFactories_j(e,t);case WasmQueryWrapperInterfaces_T.PATH:return R(e,t);case WasmQueryWrapperInterfaces_T.ARRAY:return wasmToQueryResponseObjFactories_m(e,t);default:return wasmToQueryResponseObjFactories_.warnOnce(\"Unknown graph object type detected!  Result interpreted as null\"),null}}}};function wasmToQueryResponseObjFactories_m(e,t){const n=[],r=e.count();for(let o=0;o<r;o++){const r=e.get_value_at(o);n.push(wasmToQueryResponseObjFactories_E(r,t))}return n}function wasmToQueryResponseObjFactories_E(e,t){return d.decodedWasmObjToQueryResponseObj(e,t)}function wasmToQueryResponseObjFactories_f(e,n){const r=e.type_name,o=O(e,n),s=e.get_id();return new Entity_c(Object.assign({typeName:r,id:s},o))}function wasmToQueryResponseObjFactories_y(e,t){return new n(O(e,t))}function O(e,t){const n={},r=e.key_count();for(let o=0;o<r;o++)n[e.get_key_at(o)]=wasmToQueryResponseObjFactories_E(e.get_value_at(o),t);return{properties:n}}function wasmToQueryResponseObjFactories_g(e,t){return new ObjectValue_t(O(e,t))}function R(e,t){const n=e.entity_count(),r=e.relationship_count(),s=[];for(let o=0;o<n;o++)s.push(wasmToQueryResponseObjFactories_f(e.get_entity_at(o),t)),o<r&&s.push(wasmToQueryResponseObjFactories_j(e.get_relationship_at(o),t));return new Path_c({path:s})}function wasmToQueryResponseObjFactories_j(e,t){const n=e.type_name,r=O(e,t);return new Relationship_p(Object.assign({typeName:n,id:e.get_id(),originId:e.get_origin_entity_id(),destinationId:e.get_destination_entity_id()},r))}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/GraphApplyEditsResult.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet GraphApplyEditsResult_e=class extends Accessor/* default */.Z{constructor(r){super(r),this.hasError=null,this.error=null,this.editResults=[]}};(0,tslib_es6._)([(0,property/* property */.Cb)()],GraphApplyEditsResult_e.prototype,\"hasError\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],GraphApplyEditsResult_e.prototype,\"error\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],GraphApplyEditsResult_e.prototype,\"editResults\",void 0),GraphApplyEditsResult_e=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.GraphApplyEdits\")],GraphApplyEditsResult_e);const GraphApplyEditsResult_p=GraphApplyEditsResult_e;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToUpdateResponseFactories.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction wasmToUpdateResponseFactories_e(e){const o=new GraphApplyEditsResult_p;o.hasError=e.has_error(),o.hasError&&(o.error={errorCode:e.error.error_code,errorMessage:e.error.error_message});const t=e.get_edit_results_count();for(let r=0;r<t;r++){const t=e.get_edit_results_at(r),s=e.get_edit_results_type_name_at(r),_=[],d=[],a=[],u=t.get_add_results_count(),l=t.get_update_results_count(),g=t.get_delete_results_count();for(let r=0;r<u;r++){const e=t.get_add_result_at(r);_.push({id:e.id,error:{errorCode:e.error.error_code,errorMessage:e.error.error_message}})}for(let r=0;r<l;r++){const e=t.get_update_result_at(r);d.push({id:e.id,error:{errorCode:e.error.error_code,errorMessage:e.error.error_message}})}for(let r=0;r<g;r++){const e=t.get_delete_result_at(r);a.push({id:e.id,error:{errorCode:e.error.error_code,errorMessage:e.error.error_message}})}o.editResults.push({typeName:s,adds:_,updates:d,deletes:a})}return o}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraphService.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst k={fetchKnowledgeGraph:async e=>{const t=new KnowledgeGraph_c({url:e}),r=[];return r.push(S(t)),r.push(Q(t)),await Promise.all(r),t},refreshDataModel:async e=>{e.dataModel=await W(e)},refreshServiceDefinition:async e=>{const r=(await (0,request[\"default\"])(e.url,{query:{f:\"json\"}})).data;return r.capabilities=r?.capabilities?.split(\",\"),r.supportedQueryFormats=r?.supportedQueryFormats?.split(\",\"),e.serviceDefinition=new ServiceDefinition_s(r),e.serviceDefinition},executeQueryStreaming:async(e,t,a)=>{const n=`${e.url}/graph/query`;await knowledgeGraphService_A(e);const i=await knowledgeGraphService_R(n,a);i.data.body=await C(t,e);const d=await q(i.data.url,i.data);if(e.dataModel)return new c({resultRowsStream:await knowledgeGraphService_I(d,e.dataModel)});throw new core_Error/* default */.Z(\"knowledge-graph:undefined-data-model\",\"The KnowledgeGraph supplied did not have a data model\")},executeApplyEdits:async(e,t,a)=>{if(e.serviceDefinition?.dataEditingNotSupported)throw new core_Error/* default */.Z(\"knowledge-graph:data-editing-not-supported\",\"The Knowledge Graph Service definition indicated that data editing is not supported\");const n=`${e.url}/graph/applyEdits`;await knowledgeGraphService_A(e);const o=await knowledgeGraphService_R(n,a);o.data.body=await D(t,e);return P(await q(o.data.url,o.data))},executeQuery:async(e,a,o)=>{const i=`${e.url}/graph/query`,d=await (0,request[\"default\"])(i,{responseType:\"array-buffer\",query:{f:\"pbf\",openCypherQuery:a.openCypherQuery,...o?.query},signal:o?.signal,timeout:o?.timeout}),p=d.getHeader?.(\"content-type\"),c=d.data;if(p?.includes(\"application/x-protobuf\")){const t=new((await knowledgeWasmAccess_r()).GraphQueryDecoder);if(t.deleteLater(),e.dataModel)return new GraphQueryResult_c({resultRows:L(t,c,e.dataModel)});throw new core_Error/* default */.Z(\"knowledge-graph:undefined-data-model\",\"The KnowledgeGraph supplied did not have a data model\")}throw new core_Error/* default */.Z(\"knowledge-graph:unexpected-server-response\",\"server returned an unexpected response\",{responseType:p,data:d.data})},executeSearch:async(e,a,o)=>{const i=a.typeCategoryFilter,d=`${e.url}/graph/search`,p=await (0,request[\"default\"])(d,{responseType:\"array-buffer\",query:{f:\"pbf\",searchQuery:`\"${a.searchQuery}\"`,typeCategoryFilter:i,...o?.query},signal:o?.signal,timeout:o?.timeout}),c=p.getHeader?.(\"content-type\"),l=p.data;if(c?.includes(\"application/x-protobuf\")){const t=new((await knowledgeWasmAccess_r()).GraphQueryDecoder);if(t.deleteLater(),e.dataModel)return new GraphQueryResult_c({resultRows:L(t,l,e.dataModel)});throw new core_Error/* default */.Z(\"knowledge-graph:undefined-data-model\",\"The KnowledgeGraph supplied did not have a data model\")}throw new core_Error/* default */.Z(\"knowledge-graph:unexpected-server-response\",\"server returned an unexpected response\",{responseType:c,data:p.data})},executeSearchStreaming:async(e,t,a)=>{const n=`${e.url}/graph/search`;await knowledgeGraphService_A(e);const i=await knowledgeGraphService_R(n,a);i.data.body=await F(t);const d=await q(i.data.url,i.data);if(e.dataModel)return new c({resultRowsStream:await knowledgeGraphService_I(d,e.dataModel)});throw new core_Error/* default */.Z(\"knowledge-graph:undefined-data-model\",\"The KnowledgeGraph supplied did not have a data model\")},_fetchWrapper:async(e,t)=>fetch(e,t)};async function knowledgeGraphService_b(e,t,r){return k.executeApplyEdits(e,t,r)}async function knowledgeGraphService_v(e,t,r){return k.executeQuery(e,t,r)}async function knowledgeGraphService_x(e,t,r){return k.executeQueryStreaming(e,t,r)}async function G(e,t,r){return k.executeSearch(e,t,r)}async function knowledgeGraphService_E(e,t,r){return k.executeSearchStreaming(e,t,r)}async function knowledgeGraphService_T(e){return k.fetchKnowledgeGraph(e)}async function S(e){return k.refreshDataModel(e)}async function Q(e){return k.refreshServiceDefinition(e)}async function q(e,t){return k._fetchWrapper(e,t)}async function knowledgeGraphService_A(t){const r=kernel.id?.findCredential(t.url);r||(t.dataModel?await W(t):await S(t))}function knowledgeGraphService_M(e,t,a){if(0!==e.error_code)throw new core_Error/* default */.Z(t,a,{errorCode:e.error_code,errorMessage:e.error_message})}function knowledgeGraphService_j(e,t,r,a){null==t?r.set_param_key_value(e,\"\"):\"object\"!=typeof t||t instanceof Date?r.set_param_key_value(e,t):t instanceof Geometry/* default */.Z?r.set_param_key_value(e,queryToWasmEncodedFactories_s(t,a)):t instanceof Array?r.set_param_key_value(e,queryToWasmEncodedFactories_a(t,a)):r.set_param_key_value(e,queryToWasmEncodedFactories_l(t,a))}async function D(e,t){if(t.dataModel||await S(t),!t.dataModel)throw new core_Error/* default */.Z(\"knowledge-graph:data-model-undefined\",\"Encoding could not proceed because a data model was not provided and it could not be determined from the service\");const a=await knowledgeWasmAccess_r(),n=!!e.options?.cascadeDelete,o=new a.GraphApplyEditsEncoder(a.SpatialReferenceUtil.WGS84(),e.options?.inputQuantizationParameters?updateToWasmEncodedFactories_s(e.options?.inputQuantizationParameters):a.InputQuantizationUtil.WGS84_lossless());o.deleteLater(),o.cascade_delete=n;try{let t;e.entityAdds?.forEach((e=>{t=o.add_entity(updateToWasmEncodedFactories_r(e,a)),knowledgeGraphService_M(t,\"knowledge-graph:applyEdits-encoding-failed\",\"Attempting to encode the applyEdits - an entity failed to be added to the encoder\")})),e.relationshipAdds?.forEach((e=>{if(!e.originId||!e.destinationId)throw new core_Error/* default */.Z(\"knowledge-graph:relationship-origin-destination-missing\",\"When adding a new relationship, you must provide both an origin and destination id on the appropriate class property\");t=o.add_relationship(updateToWasmEncodedFactories_r(e,a)),knowledgeGraphService_M(t,\"knowledge-graph:applyEdits-encoding-failed\",\"Attempting to encode the applyEdits - a relationship failed to be added to the encoder\")})),e.entityUpdates?.forEach((e=>{if(!e.id)throw new core_Error/* default */.Z(\"knowledge-graph:entity-id-missing\",\"When updating an entity or relationship, you must specify the id on the class level property\");t=o.update_entity(updateToWasmEncodedFactories_r(e,a)),knowledgeGraphService_M(t,\"knowledge-graph:applyEdits-encoding-failed\",\"Attempting to encode the applyEdits - an entity failed to be added to the encoder\")})),e.relationshipUpdates?.forEach((e=>{if(!e.id)throw new core_Error/* default */.Z(\"knowledge-graph:relationship-id-missing\",\"When updating an entity or relationship, you must specify the id on the class level property\");t=o.update_relationship(updateToWasmEncodedFactories_r(e,a)),knowledgeGraphService_M(t,\"knowledge-graph:applyEdits-encoding-failed\",\"Attempting to encode the applyEdits - a relationship failed to be added to the encoder\")})),e.entityDeletes?.forEach((e=>{if(!e.typeName)throw new core_Error/* default */.Z(\"knowledge-graph:no-type-name\",\"You must indicate the entity/relationship named object type to apply edits - delete\");const t=o.make_delete_helper(e.typeName,!0);t.deleteLater(),e.ids?.forEach((e=>{t.delete_by_id(e)}))})),e.relationshipDeletes?.forEach((e=>{if(!e.typeName)throw new core_Error/* default */.Z(\"knowledge-graph:no-type-name\",\"You must indicate the entity/relationship named object type to apply edits - delete\");const t=o.make_delete_helper(e.typeName,!1);e.ids?.forEach((e=>{t.delete_by_id(e)}))})),o.encode()}catch(d){throw new core_Error/* default */.Z(\"knowledge-graph:applyEdits-encoding-failed\",\"Attempting to encode the applyEdits failed\",{error:d})}const i=o.get_encoding_result();return knowledgeGraphService_M(i.error,\"knowledge-graph:applyEdits-encoding-failed\",\"Attempting to encode the applyEdits failed\"),i.get_byte_buffer()}async function C(e,t){const a=await knowledgeWasmAccess_r(),n=new a.GraphQueryRequestEncoder;if(n.deleteLater(),n.output_spatial_reference=a.SpatialReferenceUtil.WGS84(),n.open_cypher_query=e.openCypherQuery,e.bindParameters)for(const[r,d]of Object.entries(e.bindParameters))knowledgeGraphService_j(r,d,n,a);if(e.bindGeometryQuantizationParameters)u(e.bindGeometryQuantizationParameters,n);else{if(t.dataModel||await S(t),4326!==t.dataModel?.spatialReference?.wkid)throw new core_Error/* default */.Z(\"knowledge-graph:SR-quantization-mismatch\",\"If the DataModel indicates a coordinate system other than WGS84, inputQuantizationParameters must be provided to the query encoder\");n.input_quantization_parameters=a.InputQuantizationUtil.WGS84_lossless()}e.outputQuantizationParameters&&y(e.outputQuantizationParameters,n,a);try{n.encode()}catch(i){throw new core_Error/* default */.Z(\"knowledge-graph:query-encoding-failed\",\"Attempting to encode the query failed\",{error:i})}const o=n.get_encoding_result();if(0!==o.error.error_code)throw new core_Error/* default */.Z(\"knowledge-graph:query-encoding-failed\",\"Attempting to encode the query failed\",{errorCode:o.error.error_code,errorMessage:o.error.error_message});return o.get_byte_buffer()}async function F(e){const t=await knowledgeWasmAccess_r(),a=new t.GraphSearchRequestEncoder;if(a.deleteLater(),a.search_query=e.searchQuery,a.type_category_filter=t.esriNamedTypeCategory[e.typeCategoryFilter],!0===e.returnSearchContext&&(a.return_search_context=e.returnSearchContext),null!=e.start&&e.start>0&&(a.start_index=e.start),null!=e.num&&(a.max_num_results=e.num),null!=e.idsFilter&&Array.isArray(e.idsFilter)&&e.idsFilter.length>0)try{a.set_ids_filter(queryToWasmEncodedFactories_a(e.idsFilter,t))}catch(o){throw new core_Error/* default */.Z(\"knowledge-graph:ids-format-error\",\"Attempting to set ids filter failed.  This is usually caused by an incorrectly formatted UUID string\",{error:o})}e.namedTypesFilter?.forEach((e=>{a.add_named_type_filter(e)}));try{a.encode()}catch(o){throw new core_Error/* default */.Z(\"knowledge-graph:search-encoding-failed\",\"Attempting to encode the search failed\",{error:o})}const n=a.get_encoding_result();if(0!==n.error.error_code)throw new core_Error/* default */.Z(\"knowledge-graph:search-encoding-failed\",\"Attempting to encode the search failed\",{errorCode:n.error.error_code,errorMessage:n.error.error_message});return n.get_byte_buffer()}async function knowledgeGraphService_R(e,r){return (0,request[\"default\"])(e,{responseType:\"native-request-init\",method:\"post\",query:{f:\"pbf\",...r?.query},body:\"x\",headers:{\"Content-Type\":\"application/octet-stream\"},signal:r?.signal,timeout:r?.timeout})}async function P(e){const t=e.headers.get(\"content-type\");if(t?.includes(\"application/x-protobuf\")){const t=await e.arrayBuffer(),r=new((await knowledgeWasmAccess_r()).GraphApplyEditsDecoder);return r.deleteLater(),r.decode(new Uint8Array(t)),wasmToUpdateResponseFactories_e(r)}throw new core_Error/* default */.Z(\"knowledge-graph:unexpected-server-response\",\"server returned an unexpected response\",{responseType:t,data:e.text()})}function L(e,t,a){e.push_buffer(new Uint8Array(t));const n=[];let o=0;for(;e.next_row();){o||(o=e.get_header_keys().size());const t=new Array(o);for(let r=0;r<o;r++){const n=e.get_value(r);t[r]=wasmToQueryResponseObjFactories_E(n,a)}n.push(t)}if(e.has_error())throw new core_Error/* default */.Z(\"knowledge-graph:stream-decoding-error\",\"One or more result rows were not successfully decoded\",{errorCode:e.error.error_code,errorMessage:e.error.error_message});return n}async function knowledgeGraphService_I(e,t){const n=e.headers.get(\"content-type\");if(e.headers.get(\"content-length\")&&Logger/* default */.Z.getLogger(\"esri.rest.knowledgeGraph.knowledgeGraphService\").warnOnce(\"Found `Content-Length` header when expecting a streaming HTTP response! Please investigate whether all intermediate HTTP proxies and/or load balancers are configured such that they don't forcefully buffer the entire response before returning it to the client. A valid HTTP streaming response should use Chunked Transfer Encoding and not have a Content Length defined.\"),n?.includes(\"application/x-protobuf\")){const a=e.body?.getReader(),n=new((await knowledgeWasmAccess_r()).GraphQueryDecoder);return n.deleteLater(),new ReadableStream({async start(e){try{return o()}catch(i){a?.releaseLock(),e.error(new core_Error/* default */.Z(\"knowledge-graph:stream-decoding-error\",\"The server returned a valid response, but there was an error decoding the response stream\",{error:i})),e.close()}function o(){return a?.read().then((({done:i,value:d})=>{if(i){let t;if(n.has_error()&&(t=new core_Error/* default */.Z(\"knowledge-graph:stream-decoding-error\",\"One or more result rows were not successfully decoded\",{errorCode:n.error.error_code,errorMessage:n.error.error_message})),a.releaseLock(),t)throw e.error(t),t;return void e.close()}const s=L(n,d,t);return s.length>0&&e.enqueue(s),o()}))}}})}throw new core_Error/* default */.Z(\"knowledge-graph:unexpected-server-response\",\"server returned an unexpected response\",{responseType:n,data:e.text()})}async function W(e){const a=`${e.url}/dataModel/queryDataModel`,n=await (0,request[\"default\"])(a,{responseType:\"array-buffer\",query:{f:\"pbf\"}}),o=n.getHeader?.(\"content-type\"),i=n.data;if(o?.includes(\"application/x-protobuf\")){const e=(await knowledgeWasmAccess_r()).decode_data_model_from_protocol_buffer(new Uint8Array(i));if(!e)throw new core_Error/* default */.Z(\"knowledge-graph:data-model-decode-failure\",\"The server responded to the data model query, but the response failed to be decoded.  This typically occurs when the Knowledge JS API (4.26 or later) is used with an unsupported backend (11.0 or earlier)\");return _(e)}throw new core_Error/* default */.Z(\"knowledge-graph:unexpected-server-response\",\"server returned an unexpected response\",{responseType:o,data:n.data})}\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/GraphQuery.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet GraphQuery_p=class extends Accessor/* default */.Z{constructor(r){super(r),this.openCypherQuery=\"\"}};(0,tslib_es6._)([(0,property/* property */.Cb)()],GraphQuery_p.prototype,\"openCypherQuery\",void 0),GraphQuery_p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.GraphQuery\")],GraphQuery_p);const GraphQuery_t=GraphQuery_p;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryStreaming.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet GraphQueryStreaming_s=class extends GraphQuery_t{constructor(r){super(r),this.bindParameters=null,this.bindGeometryQuantizationParameters=null,this.outputQuantizationParameters=null}};(0,tslib_es6._)([(0,property/* property */.Cb)()],GraphQueryStreaming_s.prototype,\"bindParameters\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],GraphQueryStreaming_s.prototype,\"bindGeometryQuantizationParameters\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],GraphQueryStreaming_s.prototype,\"outputQuantizationParameters\",void 0),GraphQueryStreaming_s=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.GraphQueryStreaming\")],GraphQueryStreaming_s);const GraphQueryStreaming_a=GraphQueryStreaming_s;\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/rest/support/Query.js + 1 modules\nvar Query = __webpack_require__(14626);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphLayerDataManager.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst KnowledgeGraphLayerDataManager_f=\"ESRI__ID\",KnowledgeGraphLayerDataManager_g=\"ESRI__ORIGIN_ID\",KnowledgeGraphLayerDataManager_b=\"ESRI__DESTINATION_ID\",KnowledgeGraphLayerDataManager_T=\"ESRI__LAYOUT_GEOMETRY\",KnowledgeGraphLayerDataManager_w=12,KnowledgeGraphLayerDataManager_D=Logger/* default */.Z.getLogger(\"esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager\");let KnowledgeGraphLayerDataManager_M=class extends Accessor/* default */.Z{constructor(e){super(e),this.inclusionModeDefinition={generateAllSublayers:!0,namedTypeDefinitions:new Map},this.entityTypeNames=new Set,this.relationshipTypeNames=new Set,this.geographicLookup=new Map,this.sublayerCaches=new Map,this._processingCacheUpdatesLookup=new Map,this._memberIdTypeLookup=new Map;const t=new Map;e.knowledgeGraph.dataModel.entityTypes?.forEach((i=>{i.name&&(t.set(i.name,\"entity\"),this._processingCacheUpdatesLookup.set(i.name,[]),e.inclusionModeDefinition&&!e.inclusionModeDefinition?.generateAllSublayers||this.entityTypeNames.add(i.name),i.properties?.forEach((e=>{e.geometryType&&\"esriGeometryNull\"!==e.geometryType&&this.geographicLookup.set(i.name,{name:e.name??\"\",geometryType:e.geometryType})})))})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((i=>{i.name&&(t.set(i.name,\"relationship\"),this._processingCacheUpdatesLookup.set(i.name,[]),e.inclusionModeDefinition&&!e.inclusionModeDefinition?.generateAllSublayers||this.relationshipTypeNames.add(i.name),i.properties?.forEach((e=>{e.geometryType&&\"esriGeometryNull\"!==e.geometryType&&this.geographicLookup.set(i.name,{name:e.name??\"\",geometryType:e.geometryType})})))})),e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((i,n)=>{if(\"entity\"===t.get(n))this.entityTypeNames.add(n);else{if(\"relationship\"!==t.get(n))return KnowledgeGraphLayerDataManager_D.warn(`A named type, ${n}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(n);this.relationshipTypeNames.add(n)}const o=new Map;i.members?.forEach((e=>{this._memberIdTypeLookup.set(e.id,n);const t=this.getById(e.id);t&&o.set(e.id,t)})),this.sublayerCaches.set(n,o)}))}addToLayerInclusionSet(e){e.forEach((({typeName:e,id:t})=>{if(!this.inclusionModeDefinition)throw new core_Error/* default */.Z(\"knowledge-graph:layer-data-manager\",\"You cannot add to a layer's exclusion list if it was not created with an exclusion list originally\");if(this.inclusionModeDefinition.namedTypeDefinitions.has(e)){if(this.inclusionModeDefinition.namedTypeDefinitions.has(e)){const n=this.inclusionModeDefinition.namedTypeDefinitions.get(e);if(n.useAllData)throw new core_Error/* default */.Z(\"knowledge-graph:layer-data-manager\",\"You cannot add members to an exclusion list for a sublayer where the sublayer is set to always retrieve its entire data set\");n.members||(n.members=new Map),n.members.set(t,{id:t}),this._memberIdTypeLookup.set(t,e)}}else{const i=new Map;i.set(t,{id:t}),this.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:i}),this._memberIdTypeLookup.set(t,e)}}))}getById(e){return SessionMemoryStorage_s.getInstance().readFromStoreById(e)}async getData(e,t,i){if(t.objectType.name&&this.inclusionModeDefinition?.namedTypeDefinitions&&this.inclusionModeDefinition.namedTypeDefinitions.size>0&&!this.inclusionModeDefinition.namedTypeDefinitions.has(t.objectType.name))return[];let n;if(n=e||new Query/* default */.Z({where:\"1=1\",outFields:[\"*\"]}),\"link-chart\"===t.parentCompositeLayer.type){const e=t.parentCompositeLayer,i=this._processingCacheUpdatesLookup.get(t.objectType.name??\"\"),o=n.outFields,s=n.geometry;let r=\"\",p=\"\";s&&s.extent&&(r=(0,geohashUtils/* encodeGeohash */.fC)(s.extent.ymin,s.extent.xmin,KnowledgeGraphLayerDataManager_w),p=(0,geohashUtils/* encodeGeohash */.fC)(s.extent.ymax,s.extent.xmax,KnowledgeGraphLayerDataManager_w)),o&&1===o.length&&o[0]===KnowledgeGraphLayerDataManager_f&&\"1=1\"===n.where||await Promise.all(i??[]);const m=this.sublayerCaches.has(t.objectType.name??\"\")?Array.from(this.sublayerCaches.get(t.objectType.name)?.values()):[],d=[];return m.forEach((i=>{if(i.geometry=e.linkChartDiagramLookup.get(i.attributes[t.objectIdField]),i.attributes[KnowledgeGraphLayerDataManager_T]=i.geometry,r&&p){const n=e.linkChartGeohashLookup.get(i.attributes[t.objectIdField]);n?n>=r&&n<=p&&d.push(i):d.push(i)}else d.push(i)})),d}return this.retrieveDataFromService(n,t,i)}async getConnectedRecordIds(e){const t=[],i=[],n=new Map;return e.forEach((e=>{if(this._memberIdTypeLookup.has(e)){const t=this._memberIdTypeLookup.get(e);if(!this.entityTypeNames.has(t))return;n.has(t)?n.get(t)?.push(e):n.set(t,[e])}})),n.forEach(((e,n)=>{const o=`MATCH (n:${n})-[r]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`,s=new Promise((i=>{(async()=>{const i=(await knowledgeGraphService_x(this.knowledgeGraph,new GraphQueryStreaming_a({openCypherQuery:o,bindParameters:{ids:e}}))).resultRowsStream.getReader();try{for(;;){const{done:e,value:n}=await i.read();if(e)break;for(let i=0;i<n.length;i++){const e=n[i];t.push({id:e[0],typeName:e[1]}),t.push({id:e[2],typeName:e[3]})}}}catch(n){if(\"AbortError\"!==n.name)throw n;KnowledgeGraphLayerDataManager_D.info(\"Request aborted as expected\")}})().then((()=>{i()}))}));i.push(s)})),await Promise.all(i),t}async refreshCacheContent(e,t,n,o=!0){const s=SessionMemoryStorage_s.getInstance(),r=[],a=new Map,p=new Map;this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&p.set(e.name,e)})),this.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&p.set(e.name,e)})),e||this.inclusionModeDefinition?e?e.forEach((e=>{if(this._memberIdTypeLookup.has(e)){const t=this._memberIdTypeLookup.get(e);a.has(t)?a.get(t)?.push(e):a.set(t,[e])}})):this.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e.useAllData?a.set(t,null):e.members&&e.members.forEach((e=>{a.has(t)&&null!==a.get(t)?a.get(t)?.push(e.id):a.set(t,[e.id])}))})):(this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&a.set(e.name,null)})),this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&a.set(e.name,null)})));for(const[m,d]of a){const e=new Promise((e=>{const r=async()=>{const e=new Set,r=[];let a,l=\"\",h=!1;if(t||p.get(m)?.properties?.forEach((t=>{t.name&&e.add(t.name)})),n&&this.geographicLookup.has(m)){const t=this.geographicLookup.get(m)?.name;t&&e.add(t)}if(this.entityTypeNames.has(m))l=`MATCH (n:${m}) ${d?\"WHERE id(n) IN $ids \":\"\"}return ID(n)`,e.forEach((e=>{l+=`, n.${e}`,r.push(e)}));else{if(!this.relationshipTypeNames.has(m))throw new core_Error/* default */.Z(\"knowledge-graph:layer-data-manager\",`The graph type of ${m} could not be determined. Was this type set in the KG data model and inclusion definition?`);h=!0,l=`MATCH ()-[n:${m}]->() ${d?\"WHERE id(n) IN $ids \":\"\"}return ID(n), id(startNode(n)), id(endNode(n))`,e.forEach((e=>{l+=`, n.${e}`,r.push(e)}))}a=new GraphQueryStreaming_a(d?{openCypherQuery:l,bindParameters:{ids:d}}:{openCypherQuery:l});const u=(await knowledgeGraphService_x(this.knowledgeGraph,a)).resultRowsStream.getReader();for(;;){const{done:e,value:t}=await u.read();if(e)break;const i=[];for(let o=0;o<t.length;o++){const e=t[o];let n=0,s=0;const a={properties:{}};for(a.id=e[n],n++,s++,h&&(a.originId=e[n],n++,s++,a.destinationId=e[n],n++,s++);n<e.length;n++)a.properties[r[n-s]]=e[n];i.push(a)}const n=s.writeToStore(i,KnowledgeGraphLayerDataManager_f,this.geographicLookup.get(m)?.name);this.sublayerCaches.has(m)||this.sublayerCaches.set(m,new Map),o&&!this.inclusionModeDefinition?.namedTypeDefinitions.has(m)&&this.inclusionModeDefinition?.namedTypeDefinitions.set(m,{useAllData:!1,members:new Map}),o&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(m).members&&(this.inclusionModeDefinition.namedTypeDefinitions.get(m).members=new Map);const a=this.sublayerCaches.get(m);n.forEach((e=>{a?.set(e.attributes[KnowledgeGraphLayerDataManager_f],e),o&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(m).members.has(e.attributes[KnowledgeGraphLayerDataManager_f])&&(this.inclusionModeDefinition?.namedTypeDefinitions.get(m).members.set(e.attributes[KnowledgeGraphLayerDataManager_f],{id:e.attributes[KnowledgeGraphLayerDataManager_f]}),this._memberIdTypeLookup.set(e.attributes[KnowledgeGraphLayerDataManager_f],m))}))}};r().then((()=>{e(null)}))}));r.push(e),this._processingCacheUpdatesLookup.get(m)?.push(e)}await Promise.all(r)}removeFromLayer(e){const t=new Set;e.forEach((e=>{this._memberIdTypeLookup.get(e)&&t.add(this._memberIdTypeLookup.get(e)),this._memberIdTypeLookup.delete(e),this.inclusionModeDefinition?.namedTypeDefinitions.forEach((t=>{t.members?.has(e)&&t.members.delete(e)}))})),t.forEach((t=>{this.sublayerCaches.get(t)?.forEach(((i,n)=>{e.includes(n)&&this.sublayerCaches.get(t)?.delete(n)}))}))}async retrieveDataFromService(e,t,i){const n=SessionMemoryStorage_s.getInstance(),s=new Set,r=[];let a,u=\"\",g=[];const b=\"relationship\"===t.graphType,T=this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData,w=t.parentCompositeLayer.sublayerIdsCache.get(t.objectType.name);let D=!T&&w?Array.from(w).sort():null;if(this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData)this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData&&null!=e.objectIds&&(D=e.objectIds);else if(null!=e.objectIds&&D&&D.length>0){const t=e.objectIds;e.objectIds=D.filter((e=>t.includes(e)))}else if(null!=e.objectIds)D=e.objectIds;else{if(this.inclusionModeDefinition?.namedTypeDefinitions.has(t.objectType.name)&&(!this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members||this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members?.size<1))return e.objectIds=[],[];e.objectIds=D}if(null!=e.outFields){const i=e.outFields;i.includes(\"*\")?t.fields.forEach((e=>{s.add(e.name)})):i.forEach((e=>{e!==KnowledgeGraphLayerDataManager_f&&e!==t.geometryFieldName&&s.add(e)}))}if(null!=e.geometry){const i=e.geometry;let n;if(i?.extent?.spatialReference&&!i.spatialReference?.isWGS84?(await (0,projection.initializeProjection)(i.extent.spatialReference,spatialReferenceUtils/* WGS84 */.Zn),n=(0,projection/* project */.iV)(i.extent,spatialReferenceUtils/* WGS84 */.Zn)):n=i.extent,null!=e.where&&\"1=1\"!==e.where){const i=await (0,sql/* parseWhereClause */.E)(e.where.toUpperCase(),t.fieldsIndex);t.fields.forEach((e=>{i.fieldNames.includes(e.name)&&s.add(e.name)}))}u=b?`Match ()-[n:${t.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))`:`Match (n:${t.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n)`,t.geometryFieldName&&s.add(t.geometryFieldName),s.forEach((e=>{u+=`, n.${e}`,r.push(e)})),a=new GraphQueryStreaming_a({openCypherQuery:u,bindParameters:{param_filter_geom:new Polygon/* default */.Z({rings:[[[n.xmin,n.ymin],[n.xmin,n.ymax],[n.xmax,n.ymax],[n.xmax,n.ymin],[n.xmin,n.ymin]]]})}})}else{let i=\"\";if(null!=e.where&&\"1=1\"!==e.where){const n=await (0,sql/* parseWhereClause */.E)(e.where,t.fieldsIndex);t.fields.forEach((e=>{n.fieldNames.includes(e.name)&&s.add(e.name)}));const r=[\"column-reference\",\"string\",\"number\",\"binary-expression\"],a=[\"=\",\"<\",\"<=\",\"<>\",\">\",\">=\",\"AND\",\"OR\",\"LIKE\"];let p=!1;const m=e=>{if(\"column-reference\"===e.type)return`n.${e.column}`;if(\"string\"===e.type)return`'${e.value}'`;if(\"number\"===e.type)return`${e.value}`;if(\"binary-expression\"===e.type&&r.includes(e.left.type)&&r.includes(e.right.type)&&a.includes(e.operator))return`${m(e.left)} ${e.operator} ${m(e.right)}`;if(\"binary-expression\"===e.type&&\"LIKE\"===e.operator){let t=\"\";if(\"function\"===e.left.type&&\"column-reference\"===e.left.args.value[0].type)t+=`lower(n.${e.left.args.value[0].column})`;else{if(\"column-reference\"!==e.left.type)return p=!0,\"\";t+=`lower(n.${e.left.column})`}if(t+=\" CONTAINS (\",\"string\"!==e.right.type)return p=!0,\"\";{let i=e.right.value;\"%\"===i.charAt(0)&&(i=i.slice(1)),\"%\"===i.charAt(i.length-1)&&(i=i.slice(0,-1)),t+=`'${i.toLowerCase()}')`}return t}return p=!0,\"\"};i=m(n.parseTree),p&&(i=\"\")}let n=\"\";n=b?`Match ()-[n:${t.objectType.name}]->()`:`Match (n:${t.objectType.name})`;let p=!1;D&&(p=!0,n+=\" WHERE ID(n) IN $ids\"),i&&(n+=p?\" AND\":\" WHERE\",n+=` ${i}`),n+=\" return ID(n)\",b&&(n+=\", id(startNode(n)), id(endNode(n))\"),e.returnGeometry&&t.geometryFieldName&&s.add(t.geometryFieldName),s.forEach((e=>{n+=`, n.${e}`,r.push(e)})),a=new GraphQueryStreaming_a(D?{openCypherQuery:n,bindParameters:{ids:D}}:{openCypherQuery:n})}const M=(await knowledgeGraphService_x(t.parentCompositeLayer.dataManager.knowledgeGraph,a,i)).resultRowsStream.getReader();for(;;){const{done:e,value:i}=await M.read();if(e)break;const o=[];for(let t=0;t<i.length;t++){const e=i[t];let n=0,s=0;const a={properties:{}};for(a.id=e[n],n++,s++,b&&(a.originId=e[n],n++,s++,a.destinationId=e[n],n++,s++);n<e.length;n++)a.properties[r[n-s]]=e[n];o.push(a)}g=g.concat(n.writeToStore(o,KnowledgeGraphLayerDataManager_f,t.parentCompositeLayer.dataManager.geographicLookup.get(t.objectType.name)?.name))}return g}};(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphLayerDataManager_M.prototype,\"knowledgeGraph\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphLayerDataManager_M.prototype,\"inclusionModeDefinition\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphLayerDataManager_M.prototype,\"entityTypeNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphLayerDataManager_M.prototype,\"relationshipTypeNames\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphLayerDataManager_M.prototype,\"geographicLookup\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphLayerDataManager_M.prototype,\"sublayerCaches\",void 0),KnowledgeGraphLayerDataManager_M=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager\")],KnowledgeGraphLayerDataManager_M);\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/PopupTemplate.js + 3 modules\nvar PopupTemplate = __webpack_require__(80020);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/ClassBreaksRenderer.js\nvar ClassBreaksRenderer = __webpack_require__(86004);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/DictionaryRenderer.js\nvar DictionaryRenderer = __webpack_require__(45510);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/DotDensityRenderer.js + 1 modules\nvar DotDensityRenderer = __webpack_require__(16192);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/HeatmapRenderer.js + 1 modules\nvar HeatmapRenderer = __webpack_require__(71297);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/PieChartRenderer.js + 2 modules\nvar PieChartRenderer = __webpack_require__(878);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/Renderer.js\nvar Renderer = __webpack_require__(22836);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/SimpleRenderer.js\nvar SimpleRenderer = __webpack_require__(50172);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/UniqueValueRenderer.js + 3 modules\nvar UniqueValueRenderer = __webpack_require__(72043);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/support/jsonUtils.js\nvar jsonUtils = __webpack_require__(72506);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/renderers/support/types.js\nvar types = __webpack_require__(54021);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/workers/workers.js + 4 modules\nvar workers = __webpack_require__(47109);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/graphics/data/FeatureStore.js + 1 modules\nvar FeatureStore = __webpack_require__(4811);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js + 5 modules\nvar QueryEngine = __webpack_require__(54718);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js\nvar clientSideDefaults = __webpack_require__(40400);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/fieldProperties.js\nvar fieldProperties = __webpack_require__(89076);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayerBase.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst KnowledgeGraphSublayerBase_t=(0,fieldProperties/* defineFieldProperties */.v)(),KnowledgeGraphSublayerBase_p=o=>{let p=class extends o{constructor(){super(...arguments),this.fields=[],this.fieldsIndex=null}};return (0,tslib_es6._)([(0,property/* property */.Cb)(KnowledgeGraphSublayerBase_t.fields)],p.prototype,\"fields\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)(KnowledgeGraphSublayerBase_t.fieldsIndex)],p.prototype,\"fieldsIndex\",void 0),p=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.knowledgeGraphLayer.KnowledgeGraphSublayerBase\")],p),p};\n\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/mixins/BlendLayer.js\nvar BlendLayer = __webpack_require__(27668);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/mixins/FeatureReductionLayer.js + 3 modules\nvar FeatureReductionLayer = __webpack_require__(91420);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/mixins/RefreshableLayer.js + 1 modules\nvar RefreshableLayer = __webpack_require__(12478);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/mixins/ScaleRangeLayer.js\nvar ScaleRangeLayer = __webpack_require__(95874);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/Field.js\nvar Field = __webpack_require__(12512);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/layers/support/fieldUtils.js\nvar fieldUtils = __webpack_require__(14845);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/rest/support/FeatureSet.js\nvar FeatureSet = __webpack_require__(51211);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/support/popupUtils.js\nvar popupUtils = __webpack_require__(10171);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/core/workers/RemoteClient.js + 1 modules\nvar RemoteClient = __webpack_require__(56481);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/Extent.js\nvar Extent = __webpack_require__(91772);\n// EXTERNAL MODULE: ./node_modules/@arcgis/core/geometry/support/typeUtils.js\nvar typeUtils = __webpack_require__(59659);\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayer.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet KnowledgeGraphSublayer_M=class extends((0,FeatureReductionLayer/* FeatureReductionLayer */.M)(KnowledgeGraphSublayerBase_p((0,BlendLayer/* BlendLayer */.h)((0,ScaleRangeLayer/* ScaleRangeLayer */.M)((0,RefreshableLayer/* RefreshableLayer */.Q)(Layer/* default */.Z)))))){constructor(e){if(super(e),this.capabilities=(0,clientSideDefaults/* createCapabilities */.MS)(!1,!1),this.definitionExpression=\"\",this.displayField=\"\",this.elevationInfo=null,this.geometryType=null,this.geometryFieldName=null,this.graphType=null,this.hasM=!1,this.hasZ=!1,this.labelsVisible=null,this.labelingInfo=null,this.objectIdField=KnowledgeGraphLayerDataManager_f,this.objectType=null,this.parentCompositeLayer=null,this.popupTemplate=null,this.source={openPorts:()=>this.load().then((()=>{const e=new MessageChannel;return new RemoteClient/* default */.Z(e.port1,{channel:e,client:{queryFeatures:(e,t={})=>{const r=Query/* default */.Z.fromJSON(e);return this.queryFeaturesJSON(r,t)}}},(()=>null)),[e.port2]}))},this.type=\"knowledge-graph-sublayer\",\"link-chart\"===e.parentCompositeLayer.type)\"relationship\"===e.graphType?this.geometryType=\"polyline\":this.geometryType=\"point\",this.geometryFieldName=KnowledgeGraphLayerDataManager_T;else if(e.parentCompositeLayer.dataManager.geographicLookup.get(e.objectType.name)?.geometryType&&\"esriGeometryNull\"!==e.parentCompositeLayer.dataManager.geographicLookup.get(e.objectType.name)?.geometryType){const t=e.parentCompositeLayer.dataManager.geographicLookup.get(e.objectType.name);this.geometryFieldName=t?.name??null,this.geometryType=t?.geometryType?typeUtils/* featureGeometryTypeKebabDictionary */.M.fromJSON(t.geometryType):null;const r=t?.name,o=r?e.objectType.properties?.[r]:null;o?(this.hasM=o.hasM??!1,this.hasZ=o.hasZ??!1):(this.hasM=!1,this.hasZ=!1)}else this.geometryType=null;e.objectType.properties?.forEach((e=>{let t=null,r=e.fieldType;\"esriFieldTypeOID\"===r&&(r=\"esriFieldTypeInteger\"),this.fields.push(Field/* default */.Z.fromJSON({name:e.name,type:r,alias:e.alias,defaultValue:t,editable:e.editable,nullable:e.nullable}))})),this.fields.push(Field/* default */.Z.fromJSON({name:this.objectIdField,type:\"esriFieldTypeString\",alias:this.objectIdField,editable:!1})),this._set(\"fields\",[...this.fields]),e.parentCompositeLayer.dataManager.knowledgeGraph.dataModel?.spatialReference&&(this.spatialReference=e.parentCompositeLayer.dataManager.knowledgeGraph.dataModel.spatialReference),\"link-chart\"===e.parentCompositeLayer.type?\"relationship\"===e.graphType?this.renderer=(0,jsonUtils/* fromJSON */.i)((0,clientSideDefaults/* createDrawingInfo */.bU)(typeUtils/* featureGeometryTypeKebabDictionary */.M.toJSON(\"polyline\")).renderer):this.renderer=(0,jsonUtils/* fromJSON */.i)((0,clientSideDefaults/* createDrawingInfo */.bU)(typeUtils/* featureGeometryTypeKebabDictionary */.M.toJSON(\"point\")).renderer):this.renderer=(0,jsonUtils/* fromJSON */.i)((0,clientSideDefaults/* createDrawingInfo */.bU)(typeUtils/* featureGeometryTypeKebabDictionary */.M.toJSON(this.geometryType)).renderer)}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){(0,fieldUtils/* fixRendererFields */.YN)(e,this.fieldsIndex),this._set(\"renderer\",e)}createPopupTemplate(e){return (0,popupUtils/* createPopupTemplate */.eZ)(this,e)}createQuery(){return new Query/* default */.Z({where:\"1=1\",outFields:[\"*\"]})}getField(e){for(let t=0;t<this.fields.length;t++)if(this.fields[t].name===e)return this.fields[t];throw new Error(\"Field not found\")}getFieldDomain(e,t){return null}async queryFeatures(e,t){const{resolvedQuery:r,queryEngine:o}=await this._setupQueryObjects(e),s=FeatureSet/* default */.Z.fromJSON(await o.executeQuery(r.toJSON(),t?.signal));return s.features.forEach((e=>{e.sourceLayer=this})),s}async queryFeaturesJSON(e,t){const{resolvedQuery:r,queryEngine:o}=await this._setupQueryObjects(e);return await o.executeQuery(r.toJSON(),t?.signal)}async queryFeatureCount(e,t){const{resolvedQuery:r,queryEngine:o}=await this._setupQueryObjects(e);return o.executeQueryForCount(r.toJSON(),t?.signal)}async queryExtent(e={},t){const r={...e,returnGeometry:!0},{resolvedQuery:o,queryEngine:s}=await this._setupQueryObjects(r),i=await s.executeQueryForExtent(o.toJSON(),t?.signal);let a;return a=null!=i.extent?.xmin&&null!=i.extent?.xmax&&null!=i.extent?.ymin&&null!=i.extent?.ymax?new Extent/* default */.Z(i.extent):new Extent/* default */.Z,{count:i.count,extent:a}}async queryObjectIds(e,t){const r=Query/* default */.Z.from(e);let o;if(\"link-chart\"===this.parentCompositeLayer.type&&this._cachedQueryEngine)o=this._cachedQueryEngine;else{const e=await this.parentCompositeLayer.dataManager.getData(r,this,t);o=this.loadQueryEngine(e)}return o.executeQueryForIds(r.toJSON(),t?.signal)}loadQueryEngine(e){const t=new FeatureStore/* default */.Z({geometryType:typeUtils/* featureGeometryTypeKebabDictionary */.M.toJSON(this.geometryType),hasM:this.hasM,hasZ:this.hasZ}),r=new QueryEngine/* QueryEngine */.q({fields:this.fields.map((e=>e.toJSON())),geometryType:typeUtils/* featureGeometryTypeKebabDictionary */.M.toJSON(this.geometryType),hasM:this.hasM,hasZ:this.hasZ,objectIdField:this.objectIdField,spatialReference:this.spatialReference.toJSON(),timeInfo:null,featureStore:t});return r.featureStore.addMany(e),r}async refreshCachedQueryEngine(){const e=await this.parentCompositeLayer.dataManager.getData(new Query/* default */.Z({where:\"1=1\",outFields:[KnowledgeGraphLayerDataManager_f]}),this);this._cachedQueryEngine=this.loadQueryEngine(e)}async _setupQueryObjects(e,t){const r=Query/* default */.Z.from(e),o=r.geometry;let s;if(o&&!o.spatialReference?.isWGS84&&(await (0,projection.initializeProjection)(o.spatialReference,spatialReferenceUtils/* WGS84 */.Zn),r.geometry=(0,projection/* project */.iV)(o instanceof Polygon/* default */.Z||o instanceof Polyline/* default */.Z?o:o.extent,spatialReferenceUtils/* WGS84 */.Zn)),\"link-chart\"===this.parentCompositeLayer.type&&this._cachedQueryEngine)s=this._cachedQueryEngine;else{const e=await this.parentCompositeLayer.dataManager.getData(r,this,t);s=this.loadQueryEngine(e)}return{resolvedQuery:r,queryEngine:s}}};(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"capabilities\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({readOnly:!0})],KnowledgeGraphSublayer_M.prototype,\"defaultPopupTemplate\",null),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"definitionExpression\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"displayField\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"elevationInfo\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"geometryType\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"geometryFieldName\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"graphType\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"hasM\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"hasZ\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"labelsVisible\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"labelingInfo\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"objectIdField\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"objectType\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"parentCompositeLayer\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({type:PopupTemplate/* default */.Z,json:{name:\"popupInfo\",write:!0}})],KnowledgeGraphSublayer_M.prototype,\"popupTemplate\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({types:types/* rendererTypes */.A,json:{write:{target:\"layerDefinition.drawingInfo.renderer\"}}})],KnowledgeGraphSublayer_M.prototype,\"renderer\",null),(0,tslib_es6._)([(0,property/* property */.Cb)()],KnowledgeGraphSublayer_M.prototype,\"source\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{read:!1}})],KnowledgeGraphSublayer_M.prototype,\"type\",void 0),KnowledgeGraphSublayer_M=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.knowledgeGraph.KnowledgeGraphSublayer\")],KnowledgeGraphSublayer_M);const KnowledgeGraphSublayer_C=KnowledgeGraphSublayer_M;\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/libs/linkchartlayout/LinkChartLayout.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nlet LinkChartLayout_e,LinkChartLayout_r=null;function LinkChartLayout_a(){return!!LinkChartLayout_r}function LinkChartLayout_n(){return LinkChartLayout_e||(LinkChartLayout_e=__webpack_require__.e(/* import() */ 5672).then(__webpack_require__.bind(__webpack_require__, 25672)).then((t=>t.l)).then((({default:e})=>e({locateFile:e=>(0,assets/* getAssetUrl */.V)(`esri/libs/linkchartlayout/${e}`)}))).then((t=>{LinkChartLayout_s(t)})),LinkChartLayout_e)}function LinkChartLayout_s(t){LinkChartLayout_r=t}var LinkChartLayout_o;function LinkChartLayout_u(t,e,a,n,s,o){const u=a.length,y=s.length,l=Float64Array.BYTES_PER_ELEMENT,i=Uint32Array.BYTES_PER_ELEMENT,c=Uint8Array.BYTES_PER_ELEMENT,E=16,p=E-1+u*(c+2*l)+y*(2*i),f=LinkChartLayout_r._malloc(p);try{const c=f+E-f%E,p=c+u*l,b=p+u*l,A=b+y*i,P=A+y*i,_=()=>[LinkChartLayout_r.HEAPF64.subarray(c>>3,(c>>3)+u),LinkChartLayout_r.HEAPF64.subarray(p>>3,(p>>3)+u),LinkChartLayout_r.HEAPU32.subarray(b>>2,(b>>2)+y),LinkChartLayout_r.HEAPU32.subarray(A>>2,(A>>2)+y),LinkChartLayout_r.HEAPU8.subarray(P,P+u)],[C,H,d,m,F]=_();C.set(a),H.set(n),d.set(s),m.set(o),F.set(e);const h=t(u,P,c,p,y,b,A),[B,L,R,T,g]=_();return a.set(B),n.set(L),s.set(R),o.set(T),e.set(g),h}finally{LinkChartLayout_r._free(f)}}!function(t){t[t.None=0]=\"None\",t[t.IsMovable=1]=\"IsMovable\",t[t.IsGeographic=2]=\"IsGeographic\",t[t.IsRoot=4]=\"IsRoot\"}(LinkChartLayout_o||(LinkChartLayout_o={}));const LinkChartLayout_y=2,LinkChartLayout_l=1,LinkChartLayout_i=-1;var LinkChartLayout_c,LinkChartLayout_E,LinkChartLayout_p,LinkChartLayout_f,LinkChartLayout_b,LinkChartLayout_A,LinkChartLayout_P,LinkChartLayout_;function LinkChartLayout_C(t,e,a,n,s,o,u,y,l,i,c,E,p,f,b){const A=e.length,P=Float64Array.BYTES_PER_ELEMENT,_=Uint32Array.BYTES_PER_ELEMENT,C=16,H=C-1+t*(8*P)+A*(3*_),d=LinkChartLayout_r._malloc(H);try{const H=d+C-d%C,m=H+t*P,F=m+t*P,h=F+t*P,B=h+t*P,L=B+t*P,R=L+t*P,T=R+t*P,g=T+t*P,N=g+A*_,U=N+A*_,M=()=>[LinkChartLayout_r.HEAPF64.subarray(H>>3,(H>>3)+t),LinkChartLayout_r.HEAPF64.subarray(m>>3,(m>>3)+t),LinkChartLayout_r.HEAPF64.subarray(F>>3,(F>>3)+t),LinkChartLayout_r.HEAPF64.subarray(h>>3,(h>>3)+t),LinkChartLayout_r.HEAPF64.subarray(B>>3,(B>>3)+t),LinkChartLayout_r.HEAPF64.subarray(L>>3,(L>>3)+t),LinkChartLayout_r.HEAPF64.subarray(R>>3,(R>>3)+t),LinkChartLayout_r.HEAPF64.subarray(T>>3,(T>>3)+t),LinkChartLayout_r.HEAPU32.subarray(g>>2,(g>>2)+A),LinkChartLayout_r.HEAPU32.subarray(N>>2,(N>>2)+A),LinkChartLayout_r.HEAPU32.subarray(U>>2,(U>>2)+A)],[I,S,v,Y,z,G,D,j,k,w,x]=M();I.set(y),S.set(l),v.set(i),Y.set(c),z.set(E),G.set(p),D.set(f),j.set(b),k.set(e),w.set(a),x.set(n);const $=LinkChartLayout_r.computeCentrality(t,A,g,N,U,s,o,u,H,m,F,h,B,L,R,T),[q,J,K,O,Q,V,W,X,Z,tt,et]=M();return y.set(q),l.set(J),i.set(K),c.set(O),E.set(Q),p.set(V),f.set(W),b.set(X),e.set(Z),a.set(tt),n.set(et),$}finally{LinkChartLayout_r._free(d)}}!function(t){function e(){return LinkChartLayout_r.getMinIdealEdgeLength()}function a(t,e,a,n,s,o=LinkChartLayout_y,c=LinkChartLayout_l,E=LinkChartLayout_i){return LinkChartLayout_u(((t,e,a,n,s,u,y)=>LinkChartLayout_r.applyForceDirectedLayout(t,e,a,n,s,u,y,o,c,E)),t,e,a,n,s)}t.getMinIdealEdgeLength=e,t.apply=a}(LinkChartLayout_c||(LinkChartLayout_c={})),function(t){function e(t,e,a,n,s,o=LinkChartLayout_y,c=LinkChartLayout_l,E=LinkChartLayout_i){return LinkChartLayout_u(((t,e,a,n,s,u,y)=>LinkChartLayout_r.applyCommunityLayout(t,e,a,n,s,u,y,o,c,E)),t,e,a,n,s)}t.apply=e}(LinkChartLayout_E||(LinkChartLayout_E={})),function(t){function e(t,e,a,n,s){return LinkChartLayout_u(LinkChartLayout_r.applySimpleLayout,t,e,a,n,s)}t.apply=e}(LinkChartLayout_p||(LinkChartLayout_p={})),function(t){function e(t,e,a,n,s){return LinkChartLayout_u(LinkChartLayout_r.applyHierarchicalLayout,t,e,a,n,s)}t.apply=e}(LinkChartLayout_f||(LinkChartLayout_f={})),function(t){function e(t,e,a,n,s){return LinkChartLayout_u(LinkChartLayout_r.applyRadialTreeLayout,t,e,a,n,s)}t.apply=e}(LinkChartLayout_b||(LinkChartLayout_b={})),function(t){function e(t,e,a,n,s){return LinkChartLayout_u(LinkChartLayout_r.applySmartTreeLayout,t,e,a,n,s)}t.apply=e}(LinkChartLayout_A||(LinkChartLayout_A={})),function(t){t[t.Undirected=0]=\"Undirected\",t[t.Directed=1]=\"Directed\",t[t.Reversed=2]=\"Reversed\"}(LinkChartLayout_P||(LinkChartLayout_P={})),function(t){t[t.ByCC_Raw=0]=\"ByCC_Raw\",t[t.ByCC_NormalizeGlobally=1]=\"ByCC_NormalizeGlobally\",t[t.ByCC_NormalizeByCC=2]=\"ByCC_NormalizeByCC\"}(LinkChartLayout_||(LinkChartLayout_={}));\n\n;// CONCATENATED MODULE: ./node_modules/@arcgis/core/layers/LinkChartLayer.js\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst LinkChartLayer_v=(e,t,a)=>(e.has(t)||e.set(t,a()),e.get(t));let LinkChartLayer_j=class extends((0,BlendLayer/* BlendLayer */.h)((0,ScaleRangeLayer/* ScaleRangeLayer */.M)(Layer/* default */.Z))){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this._currentLinkChartConfig={layoutMode:\"RADIAL_TREE\",xScaleFactor:1,yScaleFactor:1},this._graphTypeLookup=new Map,this.layers=new Collection/* default */.Z,this.linkChartDiagramLookup=new Map,this.linkChartExtent=new Extent/* default */.Z({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.linkChartGeohashLookup=new Map,this.sublayerIdsCache=new Map,this.tables=new Collection/* default */.Z,this.type=\"link-chart\",this._originalInclusionList=e.inclusionModeDefinition,e.dataPreloadedInLocalCache&&!e.inclusionModeDefinition)throw new core_Error/* default */.Z(\"knowledge-graph:linkchart-layer-constructor\",\"If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it\")}normalizeCtorArgs(e){return{url:e.url,title:e.title,dataPreloadedInLocalCache:e.dataPreloadedInLocalCache,defaultLinkChartConfig:e.defaultLinkChartConfig}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split(\"/\");this.title=e[e.length-2]}const t=new Set;let o=[],n=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new core_Error/* default */.Z(\"knowledge-graph:composite-layer-constructor\",\"If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined\");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.inclusionModeDefinition?.generateAllSublayers?(o=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((a,r)=>{if(!this._graphTypeLookup.get(r))return Logger/* default */.Z.getLogger(this).warn(`A named type, ${r}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(r);this._graphTypeLookup.get(r)instanceof p||\"strictOrigin\"in this._graphTypeLookup.get(r)?t.has(r)||(t.add(r),n.push(this._graphTypeLookup.get(r))):this._graphTypeLookup.get(r)instanceof EntityType_t||\"properties\"in this._graphTypeLookup.get(r)?t.has(r)||(t.add(r),o.push(this._graphTypeLookup.get(r))):(Logger/* default */.Z.getLogger(this).warn(`A named type, ${r}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(r))})):(o=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]);const r=new KnowledgeGraphLayerDataManager_M({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=o,this.memberRelationshipTypes=n,this.dataManager=r}load(e){return this.addResolvingPromise(new Promise((t=>{knowledgeGraphService_T(this.url).then((a=>{if(this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1,e.members?.forEach((e=>{let t;t=e.linkChartLocation instanceof OptimizedGeometry/* default */.Z?e.linkChartLocation:e.linkChartLocation?(0,featureConversionUtils/* convertFromGeometry */.GH)(e.linkChartLocation):null,this.linkChartDiagramLookup.set(e.id,t),t&&2===t.coords.length&&0===t.lengths.length?this.linkChartGeohashLookup.set(e.id,(0,geohashUtils/* encodeGeohash */.fC)(t.coords[1],t.coords[0],KnowledgeGraphLayerDataManager_w)):this.linkChartGeohashLookup.set(e.id,\"\")})),this.addResolvingPromise(this._initializeDiagram().then((async()=>{this.layers.forEach((async e=>{await e.refreshCachedQueryEngine()})),this.tables.forEach((async e=>{await e.refreshCachedQueryEngine()}))})))}));else{const t=\"GEOGRAPHIC\"===this.defaultLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then((async()=>{(0,promiseUtils/* throwIfAborted */.k_)(e);const t=[],a=[];this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e=>{e.useAllData=!1}))),await this._initializeDiagram(),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine()),t.push(new Promise((t=>{e.on(\"layerview-create\",(()=>{t(null)}))})))})),this.tables.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a)})))}t(null)}))}))),Promise.resolve(this)}async addRecords(e){await this._handleNewRecords(e)}async expand(e){const t=await this.dataManager.getConnectedRecordIds(e),a=t.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));return await this._handleNewRecords(t),{records:a}}loadLayerAssumingLocalCache(){this.memberRelationshipTypes.forEach((e=>{const t=new KnowledgeGraphSublayer_C({objectType:e,parentCompositeLayer:this,graphType:\"relationship\",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.memberEntityTypes.forEach((e=>{const t=new KnowledgeGraphSublayer_C({objectType:e,parentCompositeLayer:this,graphType:\"entity\",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{const a=LinkChartLayer_v(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((e=>{if(a.add(e.id),e.linkChartLocation)if(e.linkChartLocation instanceof OptimizedGeometry/* default */.Z)this.linkChartDiagramLookup.set(e.id,e.linkChartLocation),2===e.linkChartLocation.coords.length&&0===e.linkChartLocation.lengths.length?this.linkChartGeohashLookup.set(e.id,(0,geohashUtils/* encodeGeohash */.fC)(e.linkChartLocation.coords[1],e.linkChartLocation.coords[0],KnowledgeGraphLayerDataManager_w)):this.linkChartGeohashLookup.set(e.id,\"\");else{const t=(0,featureConversionUtils/* convertFromGeometry */.GH)(e.linkChartLocation);this.linkChartDiagramLookup.set(e.id,e.linkChartLocation?t:null),\"x\"in e.linkChartLocation&&\"y\"in e.linkChartLocation?this.linkChartGeohashLookup.set(e.id,(0,geohashUtils/* encodeGeohash */.fC)(e.linkChartLocation.x,e.linkChartLocation.y,KnowledgeGraphLayerDataManager_w)):this.linkChartGeohashLookup.set(e.id,\"\")}}))}))}async calculateLinkChartLayout(e=\"RADIAL_TREE\",t){const o=[],n=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{o.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{n.push({typeName:t,feature:e})}))})),this.linkChartDiagramLookup=new Map;const r=new Map,h=new Map,c=new Map,p=new Map,g=new Uint8Array(o.length),k=new Float64Array(o.length),C=new Float64Array(o.length),G=new Uint32Array(n.length),I=new Uint32Array(n.length),A=[],v=\"FORCE_DIRECTED\",j=t?.xScaleFactor??1,S=t?.yScaleFactor??1,P=new Extent/* default */.Z({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let F,z=\"FORCE_DIRECTED\",O=0,U=0;switch(z=\"GEOGRAPHIC\"===e?v:e,z){case\"FORCE_DIRECTED\":F=LinkChartLayout_c.apply;break;case\"COMMUNITY\":F=LinkChartLayout_E.apply;break;case\"HIERARCHICAL\":F=LinkChartLayout_f.apply;break;case\"RADIAL_TREE\":F=LinkChartLayout_b.apply;break;case\"SMART_TREE\":F=LinkChartLayout_A.apply;break;default:F=LinkChartLayout_p.apply}o.forEach((({typeName:a,feature:i})=>{if(t?.lockedNodeLocations?.has(i.attributes[KnowledgeGraphLayerDataManager_f])){\"GEOGRAPHIC\"===e&&this.dataManager.geographicLookup.has(a)?g[O]=LinkChartLayout_o.IsGeographic:g[O]=LinkChartLayout_o.None;const o=t.lockedNodeLocations.get(i.attributes[KnowledgeGraphLayerDataManager_f]);k[O]=o.x,C[O]=o.y}else if(\"GEOGRAPHIC\"===e&&this.dataManager.geographicLookup.has(a)){g[O]=LinkChartLayout_o.IsGeographic;let e=null;const t=i.attributes[this.dataManager.geographicLookup.get(a).name],o=this.dataManager.geographicLookup.get(a)?.geometryType;switch(o){case\"esriGeometryPoint\":k[O]=t?.x,C[O]=t?.y;break;case\"esriGeometryPolygon\":e=t?.centroid,null!=e?.x&&null!=e?.y?(k[O]=e.x,C[O]=e.y):g[O]=LinkChartLayout_o.IsMovable;break;case\"esriGeometryPolyline\":case\"esriGeometryMultipoint\":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(k[O]=e.x,C[O]=e.y):g[O]=LinkChartLayout_o.IsMovable;break;default:g[O]=LinkChartLayout_o.IsMovable}(null==k[O]||null==C[O]||Number.isNaN(k[O])||Number.isNaN(C[O]))&&(g[O]=LinkChartLayout_o.IsMovable,k[O]=0,C[O]=0)}else g[O]=LinkChartLayout_o.IsMovable,k[O]=0,C[O]=0;p.set(i.attributes[KnowledgeGraphLayerDataManager_f],O),A[O]={feature:i,typeName:a},O++}));let H=!1;n.forEach((e=>{const t=p.get(e.feature.attributes[KnowledgeGraphLayerDataManager_g]),a=p.get(e.feature.attributes[KnowledgeGraphLayerDataManager_b]);void 0!==t&&void 0!==a?(G[U]=t,I[U]=a,U++):(H=!0,this.linkChartDiagramLookup.set(e.feature.attributes[KnowledgeGraphLayerDataManager_g],null),this.linkChartGeohashLookup.set(e.feature.attributes[KnowledgeGraphLayerDataManager_g],null))})),H&&Logger/* default */.Z.getLogger(this).warn(\"A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null\"),await LinkChartLayout_n();if(!F(g,k,C,G,I))throw new core_Error/* default */.Z(\"knowledge-graph:layout-failed\",\"Attempting to arrange the records in the specified layout failed\");for(let a=0;a<A.length;a++){if(g[a]===LinkChartLayout_o.IsMovable&&(k[a]=k[a]*j,C[a]=C[a]*S),C[a]>84.9999&&(C[a]=84.9999),C[a]<-84.9999&&(C[a]=-84.9999),k[a]>179.9999&&(k[a]=179.9999),k[a]<-179.9999&&(k[a]=-179.9999),A[a].feature.attributes[KnowledgeGraphLayerDataManager_T]=new Point/* default */.Z(k[a],C[a]),r.has(A[a].typeName)){const e=r.get(A[a].typeName);e?.set(A[a].feature.attributes[KnowledgeGraphLayerDataManager_f],A[a].feature)}else{const e=new Map;e.set(A[a].feature.attributes[KnowledgeGraphLayerDataManager_f],A[a].feature),r.set(A[a].typeName,e)}c.set(A[a].feature.attributes[KnowledgeGraphLayerDataManager_f],A[a].feature);const e=(0,featureConversionUtils/* convertFromGeometry */.GH)(A[a].feature.attributes[KnowledgeGraphLayerDataManager_T]);this.linkChartDiagramLookup.set(A[a].feature.attributes[KnowledgeGraphLayerDataManager_f],A[a].feature.attributes[KnowledgeGraphLayerDataManager_T]?e:null),this.linkChartGeohashLookup.set(A[a].feature.attributes[KnowledgeGraphLayerDataManager_f],(0,geohashUtils/* encodeGeohash */.fC)(A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].y,A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].x,KnowledgeGraphLayerDataManager_w)),A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].x<P.xmin&&(P.xmin=A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].x),A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].x>P.xmax&&(P.xmax=A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].x),A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].y<P.ymin&&(P.ymin=A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].y),A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].y>P.ymax&&(P.ymax=A[a].feature.attributes[KnowledgeGraphLayerDataManager_T].y)}return this.linkChartExtent.xmin=P.xmin,this.linkChartExtent.xmax=P.xmax,this.linkChartExtent.ymin=P.ymin,this.linkChartExtent.ymax=P.ymax,n.forEach((e=>{const t=A[p.get(e.feature.attributes[KnowledgeGraphLayerDataManager_g])]?.feature.attributes[KnowledgeGraphLayerDataManager_T],a=A[p.get(e.feature.attributes[KnowledgeGraphLayerDataManager_b])]?.feature.attributes[KnowledgeGraphLayerDataManager_T];if(!t||!a)return;const i=new Polyline/* default */.Z({paths:[[t.x,t.y],[a.x,a.y]]});if(e.feature.attributes[KnowledgeGraphLayerDataManager_T]=i,h.has(e.typeName)){const t=h.get(e.typeName);t?.set(e.feature.attributes[KnowledgeGraphLayerDataManager_f],e.feature)}else{const t=new Map;t.set(e.feature.attributes[KnowledgeGraphLayerDataManager_f],e.feature),h.set(e.typeName,t)}c.set(e.feature.attributes[KnowledgeGraphLayerDataManager_f],e.feature);const o=(0,featureConversionUtils/* convertFromGeometry */.GH)(e.feature.attributes[KnowledgeGraphLayerDataManager_T]);this.linkChartDiagramLookup.set(e.feature.attributes[KnowledgeGraphLayerDataManager_f],e.feature.attributes[KnowledgeGraphLayerDataManager_T]?o:null),this.linkChartGeohashLookup.set(e.feature.attributes[KnowledgeGraphLayerDataManager_f],\"\")})),this._currentLinkChartConfig={layoutMode:e,xScaleFactor:j,yScaleFactor:S},{nodes:r,links:h,idMap:c}}async applyNewLinkChartLayout(e=\"RADIAL_TREE\",t){const a=[];await this.calculateLinkChartLayout(e,t),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a),this.layers.forEach((e=>{e.emit(\"refresh\",{dataChanged:!0})}))}getCurrentNodeLocations(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t=>{t?.members?.forEach((t=>{const a=t.linkChartLocation;let i;const o=t.id;a&&(i=\"x\"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(o,new Point/* default */.Z({x:i.x,y:i.y})))}))})),e}async synchronizeInclusionListWithCache(){return new Promise((e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const a=Array.from(this.dataManager.sublayerCaches.get(t).keys());Array.from(e.members.keys()).filter((e=>!a.includes(e))).forEach((t=>{e.members?.delete(t)}))}})),e()}))}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this.layers.forEach((e=>{e.emit(\"refresh\",{dataChanged:!0})}))}async _handleNewRecords(e){const t=[];this.dataManager.addToLayerInclusionSet(e);for(const a of e)this.sublayerIdsCache.has(a.typeName)||(this.sublayerIdsCache.set(a.typeName,new Set),t.push(a.typeName)),this.sublayerIdsCache.get(a.typeName).add(a.id);for(const a of t)if(this._graphTypeLookup.has(a)){const e=this._graphTypeLookup.get(a),t=\"endPoints\"in e?\"relationship\":\"entity\",i=new KnowledgeGraphSublayer_C({objectType:e,parentCompositeLayer:this,graphType:t,title:a});\"entity\"===t?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a),i.geometryType?this.layers.push(i):this.tables.push(i),this.dataManager.sublayerCaches.set(a,new Map)}await this.dataManager.refreshCacheContent(e.map((e=>e.id))),await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,{xScaleFactor:this._currentLinkChartConfig.xScaleFactor,yScaleFactor:this._currentLinkChartConfig.xScaleFactor})}async _initializeDiagram(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e=>{e?.members?.forEach((e=>{const t=e.linkChartLocation;let a;const i=e.id;if(!t)return;a=\"x\"in t?{x:t.x,y:t.y}:{x:t.coords[0],y:t.coords[1]};const o=(0,featureConversionUtils/* convertFromGeometry */.GH)(a);this.linkChartDiagramLookup.set(i,o),this.linkChartGeohashLookup.set(i,(0,geohashUtils/* encodeGeohash */.fC)(a.x,a.y,KnowledgeGraphLayerDataManager_w)),this.linkChartExtent.xmin>a.x&&(this.linkChartExtent.xmin=a.x),this.linkChartExtent.xmax<a.x&&(this.linkChartExtent.xmax=a.x),this.linkChartExtent.ymin>a.y&&(this.linkChartExtent.ymin=a.y),this.linkChartExtent.ymax<a.y&&(this.linkChartExtent.ymax=a.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.linkChartDiagramLookup.get(e.attributes[KnowledgeGraphLayerDataManager_g]),a=this.linkChartDiagramLookup.get(e.attributes[KnowledgeGraphLayerDataManager_b]);if(t&&a){const i=(0,featureConversionUtils/* convertFromGeometry */.GH)(new Polyline/* default */.Z({paths:[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]}));this.linkChartDiagramLookup.set(e.attributes[KnowledgeGraphLayerDataManager_f],i)}else this.linkChartDiagramLookup.set(e.attributes[KnowledgeGraphLayerDataManager_f],null);this.linkChartGeohashLookup.set(e.attributes[KnowledgeGraphLayerDataManager_f],\"\")}))}))):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{xScaleFactor:this.defaultLinkChartConfig.xScaleFactor,yScaleFactor:this.defaultLinkChartConfig.yScaleFactor,lockedNodeLocations:this.getCurrentNodeLocations()}):await this.calculateLinkChartLayout(\"RADIAL_TREE\",{lockedNodeLocations:this.getCurrentNodeLocations()})}};(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"dataPreloadedInLocalCache\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"defaultLinkChartConfig\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"dataManager\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"knowledgeGraph\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"layers\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"linkChartDiagramLookup\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"linkChartExtent\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"linkChartGeohashLookup\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"memberEntityTypes\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"memberRelationshipTypes\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"sublayerIdsCache\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)()],LinkChartLayer_j.prototype,\"tables\",void 0),(0,tslib_es6._)([(0,property/* property */.Cb)({json:{read:!1}})],LinkChartLayer_j.prototype,\"type\",void 0),LinkChartLayer_j=(0,tslib_es6._)([(0,subclass/* subclass */.j)(\"esri.layers.LinkChartLayer\")],LinkChartLayer_j);const LinkChartLayer_S=LinkChartLayer_j;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///89240\n");

/***/ }),

/***/ 40400:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dm: () => (/* binding */ i),\n/* harmony export */   Hq: () => (/* binding */ a),\n/* harmony export */   MS: () => (/* binding */ c),\n/* harmony export */   bU: () => (/* binding */ o)\n/* harmony export */ });\n/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39994);\n/* harmony import */ var _core_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67134);\n/* harmony import */ var _data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(10287);\n/* harmony import */ var _symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86094);\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction o(t){return{renderer:{type:\"simple\",symbol:\"esriGeometryPoint\"===t||\"esriGeometryMultipoint\"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__/* .defaultPointSymbolJSON */ .I4:\"esriGeometryPolyline\"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__/* .defaultPolylineSymbolJSON */ .ET:_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__/* .defaultPolygonSymbolJSON */ .lF}}}const u=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let n=1;function i(t,s){if((0,_core_has_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(\"esri-csp-restrictions\"))return()=>({[s]:null,...t});try{let r=`this.${s} = null;`;for(const s in t){r+=`this${u.test(s)?`.${s}`:`[\"${s}\"]`} = ${JSON.stringify(t[s])};`}const e=new Function(`\\n      return class AttributesClass$${n++} {\\n        constructor() {\\n          ${r};\\n        }\\n      }\\n    `)();return()=>new e}catch(r){return()=>({[s]:null,...t})}}function a(s={}){return[{name:\"New Feature\",description:\"\",prototype:{attributes:(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_1__/* .clone */ .d9)(s)}}]}function c(t,r){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:t},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:r,supportsDelete:r,supportsEditing:r,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:r,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:_data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__/* .queryCapabilities */ .g,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:r,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDA0MDAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ3NULGNBQWMsT0FBTyxVQUFVLDJFQUEyRSw4RkFBQyw0QkFBNEIsaUdBQUMsQ0FBQyxnR0FBQyxHQUFHLHFDQUFxQyxRQUFRLGdCQUFnQixHQUFHLGlFQUFHLHNDQUFzQyxjQUFjLEVBQUUsSUFBSSxjQUFjLEdBQUcsT0FBTyxFQUFFLGtCQUFrQixVQUFVLGNBQWMsRUFBRSxPQUFPLEVBQUUsS0FBSyxJQUFJLHNCQUFzQixFQUFFLDZEQUE2RCxNQUFNLHlCQUF5QixjQUFjLEdBQUcsV0FBVyxTQUFTLFdBQVcsZ0JBQWdCLFNBQVMsWUFBWSxjQUFjLEdBQUcsZUFBZSxFQUFFLFFBQVEsNkNBQTZDLFdBQVcsOERBQUMsS0FBSyxFQUFFLGdCQUFnQixPQUFPLFdBQVcscUJBQXFCLHVCQUF1Qiw4REFBOEQsV0FBVyxtQ0FBbUMsYUFBYSx3V0FBd1csT0FBTyx3RkFBQyxlQUFlLCtFQUErRSxtQkFBbUIscUJBQXFCLFVBQVUsaVVBQXdiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9sYXllcnMvZ3JhcGhpY3Mvc291cmNlcy9zdXBwb3J0L2NsaWVudFNpZGVEZWZhdWx0cy5qcz9jNTM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI3L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnQgaGFzIGZyb21cIi4uLy4uLy4uLy4uL2NvcmUvaGFzLmpzXCI7aW1wb3J0e2Nsb25lIGFzIHR9ZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9sYW5nLmpzXCI7aW1wb3J0e3F1ZXJ5Q2FwYWJpbGl0aWVzIGFzIHN9ZnJvbVwiLi4vLi4vZGF0YS9RdWVyeUVuZ2luZUNhcGFiaWxpdGllcy5qc1wiO2ltcG9ydHtkZWZhdWx0UG9pbnRTeW1ib2xKU09OIGFzIHIsZGVmYXVsdFBvbHlsaW5lU3ltYm9sSlNPTiBhcyBlLGRlZmF1bHRQb2x5Z29uU3ltYm9sSlNPTiBhcyBwfWZyb21cIi4uLy4uLy4uLy4uL3N5bWJvbHMvc3VwcG9ydC9kZWZhdWx0c0pTT04uanNcIjtmdW5jdGlvbiBvKHQpe3JldHVybntyZW5kZXJlcjp7dHlwZTpcInNpbXBsZVwiLHN5bWJvbDpcImVzcmlHZW9tZXRyeVBvaW50XCI9PT10fHxcImVzcmlHZW9tZXRyeU11bHRpcG9pbnRcIj09PXQ/cjpcImVzcmlHZW9tZXRyeVBvbHlsaW5lXCI9PT10P2U6cH19fWNvbnN0IHU9L15bXyRhLXpBLVpdW18kYS16QS1aMC05XSokLztsZXQgbj0xO2Z1bmN0aW9uIGkodCxzKXtpZihoYXMoXCJlc3JpLWNzcC1yZXN0cmljdGlvbnNcIikpcmV0dXJuKCk9Pih7W3NdOm51bGwsLi4udH0pO3RyeXtsZXQgcj1gdGhpcy4ke3N9ID0gbnVsbDtgO2Zvcihjb25zdCBzIGluIHQpe3IrPWB0aGlzJHt1LnRlc3Qocyk/YC4ke3N9YDpgW1wiJHtzfVwiXWB9ID0gJHtKU09OLnN0cmluZ2lmeSh0W3NdKX07YH1jb25zdCBlPW5ldyBGdW5jdGlvbihgXFxuICAgICAgcmV0dXJuIGNsYXNzIEF0dHJpYnV0ZXNDbGFzcyQke24rK30ge1xcbiAgICAgICAgY29uc3RydWN0b3IoKSB7XFxuICAgICAgICAgICR7cn07XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICBgKSgpO3JldHVybigpPT5uZXcgZX1jYXRjaChyKXtyZXR1cm4oKT0+KHtbc106bnVsbCwuLi50fSl9fWZ1bmN0aW9uIGEocz17fSl7cmV0dXJuW3tuYW1lOlwiTmV3IEZlYXR1cmVcIixkZXNjcmlwdGlvbjpcIlwiLHByb3RvdHlwZTp7YXR0cmlidXRlczp0KHMpfX1dfWZ1bmN0aW9uIGModCxyKXtyZXR1cm57YW5hbHl0aWNzOntzdXBwb3J0c0NhY2hlSGludDohMX0sYXR0YWNobWVudDpudWxsLGRhdGE6e2lzVmVyc2lvbmVkOiExLHN1cHBvcnRzQXR0YWNobWVudDohMSxzdXBwb3J0c006ITEsc3VwcG9ydHNaOnR9LG1ldGFkYXRhOntzdXBwb3J0c0FkdmFuY2VkRmllbGRQcm9wZXJ0aWVzOiExfSxvcGVyYXRpb25zOntzdXBwb3J0c0NhbGN1bGF0ZTohMSxzdXBwb3J0c1RydW5jYXRlOiExLHN1cHBvcnRzVmFsaWRhdGVTcWw6ITEsc3VwcG9ydHNBZGQ6cixzdXBwb3J0c0RlbGV0ZTpyLHN1cHBvcnRzRWRpdGluZzpyLHN1cHBvcnRzQ2hhbmdlVHJhY2tpbmc6ITEsc3VwcG9ydHNRdWVyeTohMCxzdXBwb3J0c1F1ZXJ5QW5hbHl0aWNzOiExLHN1cHBvcnRzUXVlcnlBdHRhY2htZW50czohMSxzdXBwb3J0c1F1ZXJ5VG9wRmVhdHVyZXM6ITEsc3VwcG9ydHNSZXNpemVBdHRhY2htZW50czohMSxzdXBwb3J0c1N5bmM6ITEsc3VwcG9ydHNVcGRhdGU6cixzdXBwb3J0c0V4Y2VlZHNMaW1pdFN0YXRpc3RpY3M6ITAsc3VwcG9ydHNBc3luY0NvbnZlcnQzRDohMX0scXVlcnk6cyxxdWVyeVJlbGF0ZWQ6e3N1cHBvcnRzQ291bnQ6ITAsc3VwcG9ydHNPcmRlckJ5OiEwLHN1cHBvcnRzUGFnaW5hdGlvbjohMCxzdXBwb3J0c0NhY2hlSGludDohMX0scXVlcnlUb3BGZWF0dXJlczp7c3VwcG9ydHNDYWNoZUhpbnQ6ITF9LGVkaXRpbmc6e3N1cHBvcnRzR2VvbWV0cnlVcGRhdGU6cixzdXBwb3J0c0dsb2JhbElkOiExLHN1cHBvcnRzUmV0dXJuU2VydmljZUVkaXRzSW5Tb3VyY2VTcGF0aWFsUmVmZXJlbmNlOiExLHN1cHBvcnRzUm9sbGJhY2tPbkZhaWx1cmU6ITEsc3VwcG9ydHNVcGRhdGVXaXRob3V0TTohMSxzdXBwb3J0c1VwbG9hZFdpdGhJdGVtSWQ6ITEsc3VwcG9ydHNEZWxldGVCeUFub255bW91czohMSxzdXBwb3J0c0RlbGV0ZUJ5T3RoZXJzOiExLHN1cHBvcnRzVXBkYXRlQnlBbm9ueW1vdXM6ITEsc3VwcG9ydHNVcGRhdGVCeU90aGVyczohMSxzdXBwb3J0c0FzeW5jQXBwbHlFZGl0czohMX19fWV4cG9ydHtjIGFzIGNyZWF0ZUNhcGFiaWxpdGllcyxpIGFzIGNyZWF0ZURlZmF1bHRBdHRyaWJ1dGVzRnVuY3Rpb24sYSBhcyBjcmVhdGVEZWZhdWx0VGVtcGxhdGUsbyBhcyBjcmVhdGVEcmF3aW5nSW5mb307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///40400\n");

/***/ })

}]);